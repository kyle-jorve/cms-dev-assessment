!function r(c, a, f) {
  function o(n, t) {
    if (!a[n]) {
      if (!c[n]) {
        var e = "function" == typeof require && require;
        if (!t && e) return e(n, !0);
        if (s) return s(n, !0);
        var i = new Error("Cannot find module '" + n + "'");
        throw i.code = "MODULE_NOT_FOUND", i;
      }

      var u = a[n] = {
        exports: {}
      };
      c[n][0].call(u.exports, function (t) {
        return o(c[n][1][t] || t);
      }, u, u.exports, r, c, a, f);
    }

    return a[n].exports;
  }

  for (var s = "function" == typeof require && require, t = 0; t < f.length; t++) o(f[t]);

  return o;
}({
  1: [function (t, n, r) {
    t(276), t(212), t(214), t(213), t(216), t(218), t(223), t(217), t(215), t(225), t(224), t(220), t(221), t(219), t(211), t(222), t(226), t(227), t(178), t(180), t(179), t(229), t(228), t(199), t(209), t(210), t(200), t(201), t(202), t(203), t(204), t(205), t(206), t(207), t(208), t(182), t(183), t(184), t(185), t(186), t(187), t(188), t(189), t(190), t(191), t(192), t(193), t(194), t(195), t(196), t(197), t(198), t(263), t(268), t(275), t(266), t(258), t(259), t(264), t(269), t(271), t(254), t(255), t(256), t(257), t(260), t(261), t(262), t(265), t(267), t(270), t(272), t(273), t(274), t(173), t(175), t(174), t(177), t(176), t(161), t(159), t(166), t(163), t(169), t(171), t(158), t(165), t(155), t(170), t(153), t(168), t(167), t(160), t(164), t(152), t(154), t(157), t(156), t(172), t(162), t(245), t(246), t(252), t(247), t(248), t(249), t(250), t(251), t(230), t(181), t(253), t(288), t(289), t(277), t(278), t(283), t(286), t(287), t(281), t(284), t(282), t(285), t(279), t(280), t(231), t(232), t(233), t(234), t(235), t(238), t(236), t(237), t(239), t(240), t(241), t(242), t(244), t(243), n.exports = t(50);
  }, {
    152: 152,
    153: 153,
    154: 154,
    155: 155,
    156: 156,
    157: 157,
    158: 158,
    159: 159,
    160: 160,
    161: 161,
    162: 162,
    163: 163,
    164: 164,
    165: 165,
    166: 166,
    167: 167,
    168: 168,
    169: 169,
    170: 170,
    171: 171,
    172: 172,
    173: 173,
    174: 174,
    175: 175,
    176: 176,
    177: 177,
    178: 178,
    179: 179,
    180: 180,
    181: 181,
    182: 182,
    183: 183,
    184: 184,
    185: 185,
    186: 186,
    187: 187,
    188: 188,
    189: 189,
    190: 190,
    191: 191,
    192: 192,
    193: 193,
    194: 194,
    195: 195,
    196: 196,
    197: 197,
    198: 198,
    199: 199,
    200: 200,
    201: 201,
    202: 202,
    203: 203,
    204: 204,
    205: 205,
    206: 206,
    207: 207,
    208: 208,
    209: 209,
    210: 210,
    211: 211,
    212: 212,
    213: 213,
    214: 214,
    215: 215,
    216: 216,
    217: 217,
    218: 218,
    219: 219,
    220: 220,
    221: 221,
    222: 222,
    223: 223,
    224: 224,
    225: 225,
    226: 226,
    227: 227,
    228: 228,
    229: 229,
    230: 230,
    231: 231,
    232: 232,
    233: 233,
    234: 234,
    235: 235,
    236: 236,
    237: 237,
    238: 238,
    239: 239,
    240: 240,
    241: 241,
    242: 242,
    243: 243,
    244: 244,
    245: 245,
    246: 246,
    247: 247,
    248: 248,
    249: 249,
    250: 250,
    251: 251,
    252: 252,
    253: 253,
    254: 254,
    255: 255,
    256: 256,
    257: 257,
    258: 258,
    259: 259,
    260: 260,
    261: 261,
    262: 262,
    263: 263,
    264: 264,
    265: 265,
    266: 266,
    267: 267,
    268: 268,
    269: 269,
    270: 270,
    271: 271,
    272: 272,
    273: 273,
    274: 274,
    275: 275,
    276: 276,
    277: 277,
    278: 278,
    279: 279,
    280: 280,
    281: 281,
    282: 282,
    283: 283,
    284: 284,
    285: 285,
    286: 286,
    287: 287,
    288: 288,
    289: 289,
    50: 50
  }],
  2: [function (t, n, r) {
    t(290), n.exports = t(50).Array.flatMap;
  }, {
    290: 290,
    50: 50
  }],
  3: [function (t, n, r) {
    t(291), n.exports = t(50).Array.includes;
  }, {
    291: 291,
    50: 50
  }],
  4: [function (t, n, r) {
    t(292), n.exports = t(50).Object.entries;
  }, {
    292: 292,
    50: 50
  }],
  5: [function (t, n, r) {
    t(293), n.exports = t(50).Object.getOwnPropertyDescriptors;
  }, {
    293: 293,
    50: 50
  }],
  6: [function (t, n, r) {
    t(294), n.exports = t(50).Object.values;
  }, {
    294: 294,
    50: 50
  }],
  7: [function (t, n, r) {
    "use strict";

    t(230), t(295), n.exports = t(50).Promise.finally;
  }, {
    230: 230,
    295: 295,
    50: 50
  }],
  8: [function (t, n, r) {
    t(296), n.exports = t(50).String.padEnd;
  }, {
    296: 296,
    50: 50
  }],
  9: [function (t, n, r) {
    t(297), n.exports = t(50).String.padStart;
  }, {
    297: 297,
    50: 50
  }],
  10: [function (t, n, r) {
    t(299), n.exports = t(50).String.trimRight;
  }, {
    299: 299,
    50: 50
  }],
  11: [function (t, n, r) {
    t(298), n.exports = t(50).String.trimLeft;
  }, {
    298: 298,
    50: 50
  }],
  12: [function (t, n, r) {
    t(300), n.exports = t(149).f("asyncIterator");
  }, {
    149: 149,
    300: 300
  }],
  13: [function (t, n, r) {
    t(30), n.exports = t(16).global;
  }, {
    16: 16,
    30: 30
  }],
  14: [function (t, n, r) {
    n.exports = function (t) {
      if ("function" != typeof t) throw TypeError(t + " is not a function!");
      return t;
    };
  }, {}],
  15: [function (t, n, r) {
    var e = t(26);

    n.exports = function (t) {
      if (!e(t)) throw TypeError(t + " is not an object!");
      return t;
    };
  }, {
    26: 26
  }],
  16: [function (t, n, r) {
    var e = n.exports = {
      version: "2.6.11"
    };
    "number" == typeof __e && (__e = e);
  }, {}],
  17: [function (t, n, r) {
    var o = t(14);

    n.exports = function (e, i, t) {
      if (o(e), void 0 === i) return e;

      switch (t) {
        case 1:
          return function (t) {
            return e.call(i, t);
          };

        case 2:
          return function (t, n) {
            return e.call(i, t, n);
          };

        case 3:
          return function (t, n, r) {
            return e.call(i, t, n, r);
          };
      }

      return function () {
        return e.apply(i, arguments);
      };
    };
  }, {
    14: 14
  }],
  18: [function (t, n, r) {
    n.exports = !t(21)(function () {
      return 7 != Object.defineProperty({}, "a", {
        get: function () {
          return 7;
        }
      }).a;
    });
  }, {
    21: 21
  }],
  19: [function (t, n, r) {
    var e = t(26),
        i = t(22).document,
        o = e(i) && e(i.createElement);

    n.exports = function (t) {
      return o ? i.createElement(t) : {};
    };
  }, {
    22: 22,
    26: 26
  }],
  20: [function (t, n, r) {
    var g = t(22),
        y = t(16),
        d = t(17),
        x = t(24),
        m = t(23),
        S = "prototype",
        b = function (t, n, r) {
      var e,
          i,
          o,
          u = t & b.F,
          c = t & b.G,
          a = t & b.S,
          f = t & b.P,
          s = t & b.B,
          l = t & b.W,
          h = c ? y : y[n] || (y[n] = {}),
          p = h[S],
          v = c ? g : a ? g[n] : (g[n] || {})[S];

      for (e in c && (r = n), r) (i = !u && v && void 0 !== v[e]) && m(h, e) || (o = i ? v[e] : r[e], h[e] = c && "function" != typeof v[e] ? r[e] : s && i ? d(o, g) : l && v[e] == o ? function (e) {
        function ib(t, n, r) {
          if (this instanceof e) {
            switch (arguments.length) {
              case 0:
                return new e();

              case 1:
                return new e(t);

              case 2:
                return new e(t, n);
            }

            return new e(t, n, r);
          }

          return e.apply(this, arguments);
        }

        return ib[S] = e[S], ib;
      }(o) : f && "function" == typeof o ? d(Function.call, o) : o, f && ((h.virtual || (h.virtual = {}))[e] = o, t & b.R && p && !p[e] && x(p, e, o)));
    };

    b.F = 1, b.G = 2, b.S = 4, b.P = 8, b.B = 16, b.W = 32, b.U = 64, b.R = 128, n.exports = b;
  }, {
    16: 16,
    17: 17,
    22: 22,
    23: 23,
    24: 24
  }],
  21: [function (t, n, r) {
    n.exports = function (t) {
      try {
        return !!t();
      } catch (t) {
        return !0;
      }
    };
  }, {}],
  22: [function (t, n, r) {
    var e = n.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    "number" == typeof __g && (__g = e);
  }, {}],
  23: [function (t, n, r) {
    var e = {}.hasOwnProperty;

    n.exports = function (t, n) {
      return e.call(t, n);
    };
  }, {}],
  24: [function (t, n, r) {
    var e = t(27),
        i = t(28);
    n.exports = t(18) ? function (t, n, r) {
      return e.f(t, n, i(1, r));
    } : function (t, n, r) {
      return t[n] = r, t;
    };
  }, {
    18: 18,
    27: 27,
    28: 28
  }],
  25: [function (t, n, r) {
    n.exports = !t(18) && !t(21)(function () {
      return 7 != Object.defineProperty(t(19)("div"), "a", {
        get: function () {
          return 7;
        }
      }).a;
    });
  }, {
    18: 18,
    19: 19,
    21: 21
  }],
  26: [function (t, n, r) {
    n.exports = function (t) {
      return "object" == typeof t ? null !== t : "function" == typeof t;
    };
  }, {}],
  27: [function (t, n, r) {
    var e = t(15),
        i = t(25),
        o = t(29),
        u = Object.defineProperty;
    r.f = t(18) ? Object.defineProperty : function defineProperty(t, n, r) {
      if (e(t), n = o(n, !0), e(r), i) try {
        return u(t, n, r);
      } catch (t) {}
      if ("get" in r || "set" in r) throw TypeError("Accessors not supported!");
      return "value" in r && (t[n] = r.value), t;
    };
  }, {
    15: 15,
    18: 18,
    25: 25,
    29: 29
  }],
  28: [function (t, n, r) {
    n.exports = function (t, n) {
      return {
        enumerable: !(1 & t),
        configurable: !(2 & t),
        writable: !(4 & t),
        value: n
      };
    };
  }, {}],
  29: [function (t, n, r) {
    var i = t(26);

    n.exports = function (t, n) {
      if (!i(t)) return t;
      var r, e;
      if (n && "function" == typeof (r = t.toString) && !i(e = r.call(t))) return e;
      if ("function" == typeof (r = t.valueOf) && !i(e = r.call(t))) return e;
      if (!n && "function" == typeof (r = t.toString) && !i(e = r.call(t))) return e;
      throw TypeError("Can't convert object to primitive value");
    };
  }, {
    26: 26
  }],
  30: [function (t, n, r) {
    var e = t(20);
    e(e.G, {
      global: t(22)
    });
  }, {
    20: 20,
    22: 22
  }],
  31: [function (t, n, r) {
    arguments[4][14][0].apply(r, arguments);
  }, {
    14: 14
  }],
  32: [function (t, n, r) {
    var e = t(46);

    n.exports = function (t, n) {
      if ("number" != typeof t && "Number" != e(t)) throw TypeError(n);
      return +t;
    };
  }, {
    46: 46
  }],
  33: [function (t, n, r) {
    var e = t(150)("unscopables"),
        i = Array.prototype;
    null == i[e] && t(70)(i, e, {}), n.exports = function (t) {
      i[e][t] = !0;
    };
  }, {
    150: 150,
    70: 70
  }],
  34: [function (t, n, r) {
    "use strict";

    var e = t(127)(!0);

    n.exports = function (t, n, r) {
      return n + (r ? e(t, n).length : 1);
    };
  }, {
    127: 127
  }],
  35: [function (t, n, r) {
    n.exports = function (t, n, r, e) {
      if (!(t instanceof n) || void 0 !== e && e in t) throw TypeError(r + ": incorrect invocation!");
      return t;
    };
  }, {}],
  36: [function (t, n, r) {
    arguments[4][15][0].apply(r, arguments);
  }, {
    15: 15,
    79: 79
  }],
  37: [function (t, n, r) {
    "use strict";

    var f = t(140),
        s = t(135),
        l = t(139);

    n.exports = [].copyWithin || function copyWithin(t, n) {
      var r = f(this),
          e = l(r.length),
          i = s(t, e),
          o = s(n, e),
          u = 2 < arguments.length ? arguments[2] : void 0,
          c = Math.min((void 0 === u ? e : s(u, e)) - o, e - i),
          a = 1;

      for (o < i && i < o + c && (a = -1, o += c - 1, i += c - 1); 0 < c--;) o in r ? r[i] = r[o] : delete r[i], i += a, o += a;

      return r;
    };
  }, {
    135: 135,
    139: 139,
    140: 140
  }],
  38: [function (t, n, r) {
    "use strict";

    var c = t(140),
        a = t(135),
        f = t(139);

    n.exports = function fill(t) {
      for (var n = c(this), r = f(n.length), e = arguments.length, i = a(1 < e ? arguments[1] : void 0, r), o = 2 < e ? arguments[2] : void 0, u = void 0 === o ? r : a(o, r); i < u;) n[i++] = t;

      return n;
    };
  }, {
    135: 135,
    139: 139,
    140: 140
  }],
  39: [function (t, n, r) {
    var a = t(138),
        f = t(139),
        s = t(135);

    n.exports = function (c) {
      return function (t, n, r) {
        var e,
            i = a(t),
            o = f(i.length),
            u = s(r, o);

        if (c && n != n) {
          for (; u < o;) if ((e = i[u++]) != e) return !0;
        } else for (; u < o; u++) if ((c || u in i) && i[u] === n) return c || u || 0;

        return !c && -1;
      };
    };
  }, {
    135: 135,
    138: 138,
    139: 139
  }],
  40: [function (t, n, r) {
    var m = t(52),
        S = t(75),
        b = t(140),
        w = t(139),
        e = t(43);

    n.exports = function (l, t) {
      var h = 1 == l,
          p = 2 == l,
          v = 3 == l,
          g = 4 == l,
          y = 6 == l,
          d = 5 == l || y,
          x = t || e;
      return function (t, n, r) {
        for (var e, i, o = b(t), u = S(o), c = m(n, r, 3), a = w(u.length), f = 0, s = h ? x(t, a) : p ? x(t, 0) : void 0; f < a; f++) if ((d || f in u) && (i = c(e = u[f], f, o), l)) if (h) s[f] = i;else if (i) switch (l) {
          case 3:
            return !0;

          case 5:
            return e;

          case 6:
            return f;

          case 2:
            s.push(e);
        } else if (g) return !1;

        return y ? -1 : v || g ? g : s;
      };
    };
  }, {
    139: 139,
    140: 140,
    43: 43,
    52: 52,
    75: 75
  }],
  41: [function (t, n, r) {
    var s = t(31),
        l = t(140),
        h = t(75),
        p = t(139);

    n.exports = function (t, n, r, e, i) {
      s(n);
      var o = l(t),
          u = h(o),
          c = p(o.length),
          a = i ? c - 1 : 0,
          f = i ? -1 : 1;
      if (r < 2) for (;;) {
        if (a in u) {
          e = u[a], a += f;
          break;
        }

        if (a += f, i ? a < 0 : c <= a) throw TypeError("Reduce of empty array with no initial value");
      }

      for (; i ? 0 <= a : a < c; a += f) a in u && (e = n(e, u[a], a, o));

      return e;
    };
  }, {
    139: 139,
    140: 140,
    31: 31,
    75: 75
  }],
  42: [function (t, n, r) {
    var e = t(79),
        i = t(77),
        o = t(150)("species");

    n.exports = function (t) {
      var n;
      return i(t) && ("function" != typeof (n = t.constructor) || n !== Array && !i(n.prototype) || (n = void 0), e(n) && null === (n = n[o]) && (n = void 0)), void 0 === n ? Array : n;
    };
  }, {
    150: 150,
    77: 77,
    79: 79
  }],
  43: [function (t, n, r) {
    var e = t(42);

    n.exports = function (t, n) {
      return new (e(t))(n);
    };
  }, {
    42: 42
  }],
  44: [function (t, n, r) {
    "use strict";

    var o = t(31),
        u = t(79),
        c = t(74),
        a = [].slice,
        f = {};

    n.exports = Function.bind || function bind(n) {
      var r = o(this),
          e = a.call(arguments, 1),
          i = function () {
        var t = e.concat(a.call(arguments));
        return this instanceof i ? function (t, n, r) {
          if (!(n in f)) {
            for (var e = [], i = 0; i < n; i++) e[i] = "a[" + i + "]";

            f[n] = Function("F,a", "return new F(" + e.join(",") + ")");
          }

          return f[n](t, r);
        }(r, t.length, t) : c(r, t, n);
      };

      return u(r.prototype) && (i.prototype = r.prototype), i;
    };
  }, {
    31: 31,
    74: 74,
    79: 79
  }],
  45: [function (t, n, r) {
    var i = t(46),
        o = t(150)("toStringTag"),
        u = "Arguments" == i(function () {
      return arguments;
    }());

    n.exports = function (t) {
      var n, r, e;
      return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof (r = function (t, n) {
        try {
          return t[n];
        } catch (t) {}
      }(n = Object(t), o)) ? r : u ? i(n) : "Object" == (e = i(n)) && "function" == typeof n.callee ? "Arguments" : e;
    };
  }, {
    150: 150,
    46: 46
  }],
  46: [function (t, n, r) {
    var e = {}.toString;

    n.exports = function (t) {
      return e.call(t).slice(8, -1);
    };
  }, {}],
  47: [function (t, n, r) {
    "use strict";

    function Uf(t, n) {
      var r,
          e = p(n);
      if ("F" !== e) return t._i[e];

      for (r = t._f; r; r = r.n) if (r.k == n) return r;
    }

    var u = t(97).f,
        c = t(96),
        a = t(115),
        f = t(52),
        s = t(35),
        l = t(66),
        e = t(83),
        i = t(85),
        o = t(121),
        h = t(56),
        p = t(92).fastKey,
        v = t(147),
        g = h ? "_s" : "size";
    n.exports = {
      getConstructor: function (t, o, r, e) {
        var i = t(function (t, n) {
          s(t, i, o, "_i"), t._t = o, t._i = c(null), t._f = void 0, t._l = void 0, t[g] = 0, null != n && l(n, r, t[e], t);
        });
        return a(i.prototype, {
          clear: function clear() {
            for (var t = v(this, o), n = t._i, r = t._f; r; r = r.n) r.r = !0, r.p && (r.p = r.p.n = void 0), delete n[r.i];

            t._f = t._l = void 0, t[g] = 0;
          },
          delete: function (t) {
            var n = v(this, o),
                r = Uf(n, t);

            if (r) {
              var e = r.n,
                  i = r.p;
              delete n._i[r.i], r.r = !0, i && (i.n = e), e && (e.p = i), n._f == r && (n._f = e), n._l == r && (n._l = i), n[g]--;
            }

            return !!r;
          },
          forEach: function forEach(t) {
            v(this, o);

            for (var n, r = f(t, 1 < arguments.length ? arguments[1] : void 0, 3); n = n ? n.n : this._f;) for (r(n.v, n.k, this); n && n.r;) n = n.p;
          },
          has: function has(t) {
            return !!Uf(v(this, o), t);
          }
        }), h && u(i.prototype, "size", {
          get: function () {
            return v(this, o)[g];
          }
        }), i;
      },
      def: function (t, n, r) {
        var e,
            i,
            o = Uf(t, n);
        return o ? o.v = r : (t._l = o = {
          i: i = p(n, !0),
          k: n,
          v: r,
          p: e = t._l,
          n: void 0,
          r: !1
        }, t._f || (t._f = o), e && (e.n = o), t[g]++, "F" !== i && (t._i[i] = o)), t;
      },
      getEntry: Uf,
      setStrong: function (t, r, n) {
        e(t, r, function (t, n) {
          this._t = v(t, r), this._k = n, this._l = void 0;
        }, function () {
          for (var t = this, n = t._k, r = t._l; r && r.r;) r = r.p;

          return t._t && (t._l = r = r ? r.n : t._t._f) ? i(0, "keys" == n ? r.k : "values" == n ? r.v : [r.k, r.v]) : (t._t = void 0, i(1));
        }, n ? "entries" : "values", !n, !0), o(r);
      }
    };
  }, {
    115: 115,
    121: 121,
    147: 147,
    35: 35,
    52: 52,
    56: 56,
    66: 66,
    83: 83,
    85: 85,
    92: 92,
    96: 96,
    97: 97
  }],
  48: [function (t, n, r) {
    "use strict";

    function Tg(t) {
      return t._l || (t._l = new g());
    }

    function Vg(t, n) {
      return o(t.a, function (t) {
        return t[0] === n;
      });
    }

    var u = t(115),
        c = t(92).getWeak,
        i = t(36),
        a = t(79),
        f = t(35),
        s = t(66),
        e = t(40),
        l = t(69),
        h = t(147),
        o = e(5),
        p = e(6),
        v = 0,
        g = function () {
      this.a = [];
    };

    g.prototype = {
      get: function (t) {
        var n = Vg(this, t);
        if (n) return n[1];
      },
      has: function (t) {
        return !!Vg(this, t);
      },
      set: function (t, n) {
        var r = Vg(this, t);
        r ? r[1] = n : this.a.push([t, n]);
      },
      delete: function (n) {
        var t = p(this.a, function (t) {
          return t[0] === n;
        });
        return ~t && this.a.splice(t, 1), !!~t;
      }
    }, n.exports = {
      getConstructor: function (t, r, e, i) {
        var o = t(function (t, n) {
          f(t, o, r, "_i"), t._t = r, t._i = v++, t._l = void 0, null != n && s(n, e, t[i], t);
        });
        return u(o.prototype, {
          delete: function (t) {
            if (!a(t)) return !1;
            var n = c(t);
            return !0 === n ? Tg(h(this, r)).delete(t) : n && l(n, this._i) && delete n[this._i];
          },
          has: function has(t) {
            if (!a(t)) return !1;
            var n = c(t);
            return !0 === n ? Tg(h(this, r)).has(t) : n && l(n, this._i);
          }
        }), o;
      },
      def: function (t, n, r) {
        var e = c(i(n), !0);
        return !0 === e ? Tg(t).set(n, r) : e[t._i] = r, t;
      },
      ufstore: Tg
    };
  }, {
    115: 115,
    147: 147,
    35: 35,
    36: 36,
    40: 40,
    66: 66,
    69: 69,
    79: 79,
    92: 92
  }],
  49: [function (t, n, r) {
    "use strict";

    var y = t(68),
        d = t(60),
        x = t(116),
        m = t(115),
        S = t(92),
        b = t(66),
        w = t(35),
        _ = t(79),
        E = t(62),
        O = t(84),
        I = t(122),
        F = t(73);

    n.exports = function (e, t, n, r, i, o) {
      function Wh(t) {
        var r = f[t];
        x(f, t, "delete" == t ? function (t) {
          return !(o && !_(t)) && r.call(this, 0 === t ? 0 : t);
        } : "has" == t ? function has(t) {
          return !(o && !_(t)) && r.call(this, 0 === t ? 0 : t);
        } : "get" == t ? function get(t) {
          return o && !_(t) ? void 0 : r.call(this, 0 === t ? 0 : t);
        } : "add" == t ? function add(t) {
          return r.call(this, 0 === t ? 0 : t), this;
        } : function set(t, n) {
          return r.call(this, 0 === t ? 0 : t, n), this;
        });
      }

      var u = y[e],
          c = u,
          a = i ? "set" : "add",
          f = c && c.prototype,
          s = {};

      if ("function" == typeof c && (o || f.forEach && !E(function () {
        new c().entries().next();
      }))) {
        var l = new c(),
            h = l[a](o ? {} : -0, 1) != l,
            p = E(function () {
          l.has(1);
        }),
            v = O(function (t) {
          new c(t);
        }),
            g = !o && E(function () {
          for (var t = new c(), n = 5; n--;) t[a](n, n);

          return !t.has(-0);
        });
        v || (((c = t(function (t, n) {
          w(t, c, e);
          var r = F(new u(), t, c);
          return null != n && b(n, i, r[a], r), r;
        })).prototype = f).constructor = c), (p || g) && (Wh("delete"), Wh("has"), i && Wh("get")), (g || h) && Wh(a), o && f.clear && delete f.clear;
      } else c = r.getConstructor(t, e, i, a), m(c.prototype, n), S.NEED = !0;

      return I(c, e), s[e] = c, d(d.G + d.W + d.F * (c != u), s), o || r.setStrong(c, e, i), c;
    };
  }, {
    115: 115,
    116: 116,
    122: 122,
    35: 35,
    60: 60,
    62: 62,
    66: 66,
    68: 68,
    73: 73,
    79: 79,
    84: 84,
    92: 92
  }],
  50: [function (t, n, r) {
    arguments[4][16][0].apply(r, arguments);
  }, {
    16: 16
  }],
  51: [function (t, n, r) {
    "use strict";

    var e = t(97),
        i = t(114);

    n.exports = function (t, n, r) {
      n in t ? e.f(t, n, i(0, r)) : t[n] = r;
    };
  }, {
    114: 114,
    97: 97
  }],
  52: [function (t, n, r) {
    arguments[4][17][0].apply(r, arguments);
  }, {
    17: 17,
    31: 31
  }],
  53: [function (t, n, r) {
    "use strict";

    function Ii(t) {
      return 9 < t ? t : "0" + t;
    }

    var e = t(62),
        i = Date.prototype.getTime,
        o = Date.prototype.toISOString;
    n.exports = e(function () {
      return "0385-07-25T07:06:39.999Z" != o.call(new Date(-5e13 - 1));
    }) || !e(function () {
      o.call(new Date(NaN));
    }) ? function toISOString() {
      if (!isFinite(i.call(this))) throw RangeError("Invalid time value");
      var t = this,
          n = t.getUTCFullYear(),
          r = t.getUTCMilliseconds(),
          e = n < 0 ? "-" : 9999 < n ? "+" : "";
      return e + ("00000" + Math.abs(n)).slice(e ? -6 : -4) + "-" + Ii(t.getUTCMonth() + 1) + "-" + Ii(t.getUTCDate()) + "T" + Ii(t.getUTCHours()) + ":" + Ii(t.getUTCMinutes()) + ":" + Ii(t.getUTCSeconds()) + "." + (99 < r ? r : "0" + Ii(r)) + "Z";
    } : o;
  }, {
    62: 62
  }],
  54: [function (t, n, r) {
    "use strict";

    var e = t(36),
        i = t(141);

    n.exports = function (t) {
      if ("string" !== t && "number" !== t && "default" !== t) throw TypeError("Incorrect hint");
      return i(e(this), "number" != t);
    };
  }, {
    141: 141,
    36: 36
  }],
  55: [function (t, n, r) {
    n.exports = function (t) {
      if (null == t) throw TypeError("Can't call method on  " + t);
      return t;
    };
  }, {}],
  56: [function (t, n, r) {
    arguments[4][18][0].apply(r, arguments);
  }, {
    18: 18,
    62: 62
  }],
  57: [function (t, n, r) {
    arguments[4][19][0].apply(r, arguments);
  }, {
    19: 19,
    68: 68,
    79: 79
  }],
  58: [function (t, n, r) {
    n.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
  }, {}],
  59: [function (t, n, r) {
    var c = t(105),
        a = t(102),
        f = t(106);

    n.exports = function (t) {
      var n = c(t),
          r = a.f;
      if (r) for (var e, i = r(t), o = f.f, u = 0; i.length > u;) o.call(t, e = i[u++]) && n.push(e);
      return n;
    };
  }, {
    102: 102,
    105: 105,
    106: 106
  }],
  60: [function (t, n, r) {
    var g = t(68),
        y = t(50),
        d = t(70),
        x = t(116),
        m = t(52),
        S = "prototype",
        b = function (t, n, r) {
      var e,
          i,
          o,
          u,
          c = t & b.F,
          a = t & b.G,
          f = t & b.S,
          s = t & b.P,
          l = t & b.B,
          h = a ? g : f ? g[n] || (g[n] = {}) : (g[n] || {})[S],
          p = a ? y : y[n] || (y[n] = {}),
          v = p[S] || (p[S] = {});

      for (e in a && (r = n), r) o = ((i = !c && h && void 0 !== h[e]) ? h : r)[e], u = l && i ? m(o, g) : s && "function" == typeof o ? m(Function.call, o) : o, h && x(h, e, o, t & b.U), p[e] != o && d(p, e, u), s && v[e] != o && (v[e] = o);
    };

    g.core = y, b.F = 1, b.G = 2, b.S = 4, b.P = 8, b.B = 16, b.W = 32, b.U = 64, b.R = 128, n.exports = b;
  }, {
    116: 116,
    50: 50,
    52: 52,
    68: 68,
    70: 70
  }],
  61: [function (t, n, r) {
    var e = t(150)("match");

    n.exports = function (n) {
      var r = /./;

      try {
        "/./"[n](r);
      } catch (t) {
        try {
          return r[e] = !1, !"/./"[n](r);
        } catch (t) {}
      }

      return !0;
    };
  }, {
    150: 150
  }],
  62: [function (t, n, r) {
    arguments[4][21][0].apply(r, arguments);
  }, {
    21: 21
  }],
  63: [function (t, n, r) {
    "use strict";

    t(246);

    var s = t(116),
        l = t(70),
        h = t(62),
        p = t(55),
        v = t(150),
        g = t(118),
        y = v("species"),
        d = !h(function () {
      var t = /./;
      return t.exec = function () {
        var t = [];
        return t.groups = {
          a: "7"
        }, t;
      }, "7" !== "".replace(t, "$<a>");
    }),
        x = function () {
      var t = /(?:)/,
          n = t.exec;

      t.exec = function () {
        return n.apply(this, arguments);
      };

      var r = "ab".split(t);
      return 2 === r.length && "a" === r[0] && "b" === r[1];
    }();

    n.exports = function (r, t, n) {
      var e = v(r),
          o = !h(function () {
        var t = {};
        return t[e] = function () {
          return 7;
        }, 7 != ""[r](t);
      }),
          i = o ? !h(function () {
        var t = !1,
            n = /a/;
        return n.exec = function () {
          return t = !0, null;
        }, "split" === r && (n.constructor = {}, n.constructor[y] = function () {
          return n;
        }), n[e](""), !t;
      }) : void 0;

      if (!o || !i || "replace" === r && !d || "split" === r && !x) {
        var u = /./[e],
            c = n(p, e, ""[r], function maybeCallNative(t, n, r, e, i) {
          return n.exec === g ? o && !i ? {
            done: !0,
            value: u.call(n, r, e)
          } : {
            done: !0,
            value: t.call(r, n, e)
          } : {
            done: !1
          };
        }),
            a = c[0],
            f = c[1];
        s(String.prototype, r, a), l(RegExp.prototype, e, 2 == t ? function (t, n) {
          return f.call(t, this, n);
        } : function (t) {
          return f.call(t, this);
        });
      }
    };
  }, {
    116: 116,
    118: 118,
    150: 150,
    246: 246,
    55: 55,
    62: 62,
    70: 70
  }],
  64: [function (t, n, r) {
    "use strict";

    var e = t(36);

    n.exports = function () {
      var t = e(this),
          n = "";
      return t.global && (n += "g"), t.ignoreCase && (n += "i"), t.multiline && (n += "m"), t.unicode && (n += "u"), t.sticky && (n += "y"), n;
    };
  }, {
    36: 36
  }],
  65: [function (t, n, r) {
    "use strict";

    var p = t(77),
        v = t(79),
        g = t(139),
        y = t(52),
        d = t(150)("isConcatSpreadable");

    n.exports = function flattenIntoArray(t, n, r, e, i, o, u, c) {
      for (var a, f, s = i, l = 0, h = !!u && y(u, c, 3); l < e;) {
        if (l in r) {
          if (a = h ? h(r[l], l, n) : r[l], f = !1, v(a) && (f = void 0 !== (f = a[d]) ? !!f : p(a)), f && 0 < o) s = flattenIntoArray(t, n, a, g(a.length), s, o - 1) - 1;else {
            if (9007199254740991 <= s) throw TypeError();
            t[s] = a;
          }
          s++;
        }

        l++;
      }

      return s;
    };
  }, {
    139: 139,
    150: 150,
    52: 52,
    77: 77,
    79: 79
  }],
  66: [function (t, n, r) {
    var h = t(52),
        p = t(81),
        v = t(76),
        g = t(36),
        y = t(139),
        d = t(151),
        x = {},
        m = {};
    (r = n.exports = function (t, n, r, e, i) {
      var o,
          u,
          c,
          a,
          f = i ? function () {
        return t;
      } : d(t),
          s = h(r, e, n ? 2 : 1),
          l = 0;
      if ("function" != typeof f) throw TypeError(t + " is not iterable!");

      if (v(f)) {
        for (o = y(t.length); l < o; l++) if ((a = n ? s(g(u = t[l])[0], u[1]) : s(t[l])) === x || a === m) return a;
      } else for (c = f.call(t); !(u = c.next()).done;) if ((a = p(c, s, u.value, n)) === x || a === m) return a;
    }).BREAK = x, r.RETURN = m;
  }, {
    139: 139,
    151: 151,
    36: 36,
    52: 52,
    76: 76,
    81: 81
  }],
  67: [function (t, n, r) {
    n.exports = t(124)("native-function-to-string", Function.toString);
  }, {
    124: 124
  }],
  68: [function (t, n, r) {
    arguments[4][22][0].apply(r, arguments);
  }, {
    22: 22
  }],
  69: [function (t, n, r) {
    arguments[4][23][0].apply(r, arguments);
  }, {
    23: 23
  }],
  70: [function (t, n, r) {
    arguments[4][24][0].apply(r, arguments);
  }, {
    114: 114,
    24: 24,
    56: 56,
    97: 97
  }],
  71: [function (t, n, r) {
    var e = t(68).document;
    n.exports = e && e.documentElement;
  }, {
    68: 68
  }],
  72: [function (t, n, r) {
    arguments[4][25][0].apply(r, arguments);
  }, {
    25: 25,
    56: 56,
    57: 57,
    62: 62
  }],
  73: [function (t, n, r) {
    var o = t(79),
        u = t(120).set;

    n.exports = function (t, n, r) {
      var e,
          i = n.constructor;
      return i !== r && "function" == typeof i && (e = i.prototype) !== r.prototype && o(e) && u && u(t, e), t;
    };
  }, {
    120: 120,
    79: 79
  }],
  74: [function (t, n, r) {
    n.exports = function (t, n, r) {
      var e = void 0 === r;

      switch (n.length) {
        case 0:
          return e ? t() : t.call(r);

        case 1:
          return e ? t(n[0]) : t.call(r, n[0]);

        case 2:
          return e ? t(n[0], n[1]) : t.call(r, n[0], n[1]);

        case 3:
          return e ? t(n[0], n[1], n[2]) : t.call(r, n[0], n[1], n[2]);

        case 4:
          return e ? t(n[0], n[1], n[2], n[3]) : t.call(r, n[0], n[1], n[2], n[3]);
      }

      return t.apply(r, n);
    };
  }, {}],
  75: [function (t, n, r) {
    var e = t(46);
    n.exports = Object("z").propertyIsEnumerable(0) ? Object : function (t) {
      return "String" == e(t) ? t.split("") : Object(t);
    };
  }, {
    46: 46
  }],
  76: [function (t, n, r) {
    var e = t(86),
        i = t(150)("iterator"),
        o = Array.prototype;

    n.exports = function (t) {
      return void 0 !== t && (e.Array === t || o[i] === t);
    };
  }, {
    150: 150,
    86: 86
  }],
  77: [function (t, n, r) {
    var e = t(46);

    n.exports = Array.isArray || function isArray(t) {
      return "Array" == e(t);
    };
  }, {
    46: 46
  }],
  78: [function (t, n, r) {
    var e = t(79),
        i = Math.floor;

    n.exports = function isInteger(t) {
      return !e(t) && isFinite(t) && i(t) === t;
    };
  }, {
    79: 79
  }],
  79: [function (t, n, r) {
    arguments[4][26][0].apply(r, arguments);
  }, {
    26: 26
  }],
  80: [function (t, n, r) {
    var e = t(79),
        i = t(46),
        o = t(150)("match");

    n.exports = function (t) {
      var n;
      return e(t) && (void 0 !== (n = t[o]) ? !!n : "RegExp" == i(t));
    };
  }, {
    150: 150,
    46: 46,
    79: 79
  }],
  81: [function (t, n, r) {
    var o = t(36);

    n.exports = function (n, t, r, e) {
      try {
        return e ? t(o(r)[0], r[1]) : t(r);
      } catch (t) {
        var i = n.return;
        throw void 0 !== i && o(i.call(n)), t;
      }
    };
  }, {
    36: 36
  }],
  82: [function (t, n, r) {
    "use strict";

    var e = t(96),
        i = t(114),
        o = t(122),
        u = {};
    t(70)(u, t(150)("iterator"), function () {
      return this;
    }), n.exports = function (t, n, r) {
      t.prototype = e(u, {
        next: i(1, r)
      }), o(t, n + " Iterator");
    };
  }, {
    114: 114,
    122: 122,
    150: 150,
    70: 70,
    96: 96
  }],
  83: [function (t, n, r) {
    "use strict";

    function In() {
      return this;
    }

    var x = t(87),
        m = t(60),
        S = t(116),
        b = t(70),
        w = t(86),
        _ = t(82),
        E = t(122),
        O = t(103),
        I = t(150)("iterator"),
        F = !([].keys && "next" in [].keys()),
        P = "values";

    n.exports = function (t, n, r, e, i, o, u) {
      _(r, n, e);

      function Qn(t) {
        if (!F && t in p) return p[t];

        switch (t) {
          case "keys":
            return function keys() {
              return new r(this, t);
            };

          case P:
            return function values() {
              return new r(this, t);
            };
        }

        return function entries() {
          return new r(this, t);
        };
      }

      var c,
          a,
          f,
          s = n + " Iterator",
          l = i == P,
          h = !1,
          p = t.prototype,
          v = p[I] || p["@@iterator"] || i && p[i],
          g = v || Qn(i),
          y = i ? l ? Qn("entries") : g : void 0,
          d = "Array" == n && p.entries || v;
      if (d && (f = O(d.call(new t()))) !== Object.prototype && f.next && (E(f, s, !0), x || "function" == typeof f[I] || b(f, I, In)), l && v && v.name !== P && (h = !0, g = function values() {
        return v.call(this);
      }), x && !u || !F && !h && p[I] || b(p, I, g), w[n] = g, w[s] = In, i) if (c = {
        values: l ? g : Qn(P),
        keys: o ? g : Qn("keys"),
        entries: y
      }, u) for (a in c) a in p || S(p, a, c[a]);else m(m.P + m.F * (F || h), n, c);
      return c;
    };
  }, {
    103: 103,
    116: 116,
    122: 122,
    150: 150,
    60: 60,
    70: 70,
    82: 82,
    86: 86,
    87: 87
  }],
  84: [function (t, n, r) {
    var o = t(150)("iterator"),
        u = !1;

    try {
      var e = [7][o]();
      e.return = function () {
        u = !0;
      }, Array.from(e, function () {
        throw 2;
      });
    } catch (t) {}

    n.exports = function (t, n) {
      if (!n && !u) return !1;
      var r = !1;

      try {
        var e = [7],
            i = e[o]();
        i.next = function () {
          return {
            done: r = !0
          };
        }, e[o] = function () {
          return i;
        }, t(e);
      } catch (t) {}

      return r;
    };
  }, {
    150: 150
  }],
  85: [function (t, n, r) {
    n.exports = function (t, n) {
      return {
        value: n,
        done: !!t
      };
    };
  }, {}],
  86: [function (t, n, r) {
    n.exports = {};
  }, {}],
  87: [function (t, n, r) {
    n.exports = !1;
  }, {}],
  88: [function (t, n, r) {
    var e = Math.expm1;
    n.exports = !e || 22025.465794806718 < e(10) || e(10) < 22025.465794806718 || -2e-17 != e(-2e-17) ? function expm1(t) {
      return 0 == (t = +t) ? t : -1e-6 < t && t < 1e-6 ? t + t * t / 2 : Math.exp(t) - 1;
    } : e;
  }, {}],
  89: [function (t, n, r) {
    var o = t(91),
        e = Math.pow,
        u = e(2, -52),
        c = e(2, -23),
        a = e(2, 127) * (2 - c),
        f = e(2, -126);

    n.exports = Math.fround || function fround(t) {
      var n,
          r,
          e = Math.abs(t),
          i = o(t);
      return e < f ? i * (e / f / c + 1 / u - 1 / u) * f * c : a < (r = (n = (1 + c / u) * e) - (n - e)) || r != r ? i * (1 / 0) : i * r;
    };
  }, {
    91: 91
  }],
  90: [function (t, n, r) {
    n.exports = Math.log1p || function log1p(t) {
      return -1e-8 < (t = +t) && t < 1e-8 ? t - t * t / 2 : Math.log(1 + t);
    };
  }, {}],
  91: [function (t, n, r) {
    n.exports = Math.sign || function sign(t) {
      return 0 == (t = +t) || t != t ? t : t < 0 ? -1 : 1;
    };
  }, {}],
  92: [function (t, n, r) {
    function lp(t) {
      u(t, e, {
        value: {
          i: "O" + ++c,
          w: {}
        }
      });
    }

    var e = t(145)("meta"),
        i = t(79),
        o = t(69),
        u = t(97).f,
        c = 0,
        a = Object.isExtensible || function () {
      return !0;
    },
        f = !t(62)(function () {
      return a(Object.preventExtensions({}));
    }),
        s = n.exports = {
      KEY: e,
      NEED: !1,
      fastKey: function (t, n) {
        if (!i(t)) return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;

        if (!o(t, e)) {
          if (!a(t)) return "F";
          if (!n) return "E";
          lp(t);
        }

        return t[e].i;
      },
      getWeak: function (t, n) {
        if (!o(t, e)) {
          if (!a(t)) return !0;
          if (!n) return !1;
          lp(t);
        }

        return t[e].w;
      },
      onFreeze: function (t) {
        return f && s.NEED && a(t) && !o(t, e) && lp(t), t;
      }
    };
  }, {
    145: 145,
    62: 62,
    69: 69,
    79: 79,
    97: 97
  }],
  93: [function (t, n, r) {
    var u = t(68),
        c = t(134).set,
        a = u.MutationObserver || u.WebKitMutationObserver,
        f = u.process,
        s = u.Promise,
        l = "process" == t(46)(f);

    n.exports = function () {
      function Ip() {
        var t, n;

        for (l && (t = f.domain) && t.exit(); r;) {
          n = r.fn, r = r.next;

          try {
            n();
          } catch (t) {
            throw r ? i() : e = void 0, t;
          }
        }

        e = void 0, t && t.enter();
      }

      var r, e, i;
      if (l) i = function () {
        f.nextTick(Ip);
      };else if (!a || u.navigator && u.navigator.standalone) {
        if (s && s.resolve) {
          var t = s.resolve(void 0);

          i = function () {
            t.then(Ip);
          };
        } else i = function () {
          c.call(u, Ip);
        };
      } else {
        var n = !0,
            o = document.createTextNode("");
        new a(Ip).observe(o, {
          characterData: !0
        }), i = function () {
          o.data = n = !n;
        };
      }
      return function (t) {
        var n = {
          fn: t,
          next: void 0
        };
        e && (e.next = n), r || (r = n, i()), e = n;
      };
    };
  }, {
    134: 134,
    46: 46,
    68: 68
  }],
  94: [function (t, n, r) {
    "use strict";

    var i = t(31);

    function PromiseCapability(t) {
      var r, e;
      this.promise = new t(function (t, n) {
        if (void 0 !== r || void 0 !== e) throw TypeError("Bad Promise constructor");
        r = t, e = n;
      }), this.resolve = i(r), this.reject = i(e);
    }

    n.exports.f = function (t) {
      return new PromiseCapability(t);
    };
  }, {
    31: 31
  }],
  95: [function (t, n, r) {
    "use strict";

    var h = t(56),
        p = t(105),
        v = t(102),
        g = t(106),
        y = t(140),
        d = t(75),
        i = Object.assign;
    n.exports = !i || t(62)(function () {
      var t = {},
          n = {},
          r = Symbol(),
          e = "abcdefghijklmnopqrst";
      return t[r] = 7, e.split("").forEach(function (t) {
        n[t] = t;
      }), 7 != i({}, t)[r] || Object.keys(i({}, n)).join("") != e;
    }) ? function assign(t, n) {
      for (var r = y(t), e = arguments.length, i = 1, o = v.f, u = g.f; i < e;) for (var c, a = d(arguments[i++]), f = o ? p(a).concat(o(a)) : p(a), s = f.length, l = 0; l < s;) c = f[l++], h && !u.call(a, c) || (r[c] = a[c]);

      return r;
    } : i;
  }, {
    102: 102,
    105: 105,
    106: 106,
    140: 140,
    56: 56,
    62: 62,
    75: 75
  }],
  96: [function (e, t, n) {
    function Hq() {}

    var i = e(36),
        o = e(98),
        u = e(58),
        c = e(123)("IE_PROTO"),
        a = "prototype",
        f = function () {
      var t,
          n = e(57)("iframe"),
          r = u.length;

      for (n.style.display = "none", e(71).appendChild(n), n.src = "javascript:", (t = n.contentWindow.document).open(), t.write("<script>document.F=Object<\/script>"), t.close(), f = t.F; r--;) delete f[a][u[r]];

      return f();
    };

    t.exports = Object.create || function create(t, n) {
      var r;
      return null !== t ? (Hq[a] = i(t), r = new Hq(), Hq[a] = null, r[c] = t) : r = f(), void 0 === n ? r : o(r, n);
    };
  }, {
    123: 123,
    36: 36,
    57: 57,
    58: 58,
    71: 71,
    98: 98
  }],
  97: [function (t, n, r) {
    arguments[4][27][0].apply(r, arguments);
  }, {
    141: 141,
    27: 27,
    36: 36,
    56: 56,
    72: 72
  }],
  98: [function (t, n, r) {
    var u = t(97),
        c = t(36),
        a = t(105);
    n.exports = t(56) ? Object.defineProperties : function defineProperties(t, n) {
      c(t);

      for (var r, e = a(n), i = e.length, o = 0; o < i;) u.f(t, r = e[o++], n[r]);

      return t;
    };
  }, {
    105: 105,
    36: 36,
    56: 56,
    97: 97
  }],
  99: [function (t, n, r) {
    var e = t(106),
        i = t(114),
        o = t(138),
        u = t(141),
        c = t(69),
        a = t(72),
        f = Object.getOwnPropertyDescriptor;
    r.f = t(56) ? f : function getOwnPropertyDescriptor(t, n) {
      if (t = o(t), n = u(n, !0), a) try {
        return f(t, n);
      } catch (t) {}
      if (c(t, n)) return i(!e.f.call(t, n), t[n]);
    };
  }, {
    106: 106,
    114: 114,
    138: 138,
    141: 141,
    56: 56,
    69: 69,
    72: 72
  }],
  100: [function (t, n, r) {
    var e = t(138),
        i = t(101).f,
        o = {}.toString,
        u = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

    n.exports.f = function getOwnPropertyNames(t) {
      return u && "[object Window]" == o.call(t) ? function (t) {
        try {
          return i(t);
        } catch (t) {
          return u.slice();
        }
      }(t) : i(e(t));
    };
  }, {
    101: 101,
    138: 138
  }],
  101: [function (t, n, r) {
    var e = t(104),
        i = t(58).concat("length", "prototype");

    r.f = Object.getOwnPropertyNames || function getOwnPropertyNames(t) {
      return e(t, i);
    };
  }, {
    104: 104,
    58: 58
  }],
  102: [function (t, n, r) {
    r.f = Object.getOwnPropertySymbols;
  }, {}],
  103: [function (t, n, r) {
    var e = t(69),
        i = t(140),
        o = t(123)("IE_PROTO"),
        u = Object.prototype;

    n.exports = Object.getPrototypeOf || function (t) {
      return t = i(t), e(t, o) ? t[o] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? u : null;
    };
  }, {
    123: 123,
    140: 140,
    69: 69
  }],
  104: [function (t, n, r) {
    var u = t(69),
        c = t(138),
        a = t(39)(!1),
        f = t(123)("IE_PROTO");

    n.exports = function (t, n) {
      var r,
          e = c(t),
          i = 0,
          o = [];

      for (r in e) r != f && u(e, r) && o.push(r);

      for (; n.length > i;) u(e, r = n[i++]) && (~a(o, r) || o.push(r));

      return o;
    };
  }, {
    123: 123,
    138: 138,
    39: 39,
    69: 69
  }],
  105: [function (t, n, r) {
    var e = t(104),
        i = t(58);

    n.exports = Object.keys || function keys(t) {
      return e(t, i);
    };
  }, {
    104: 104,
    58: 58
  }],
  106: [function (t, n, r) {
    r.f = {}.propertyIsEnumerable;
  }, {}],
  107: [function (t, n, r) {
    var i = t(60),
        o = t(50),
        u = t(62);

    n.exports = function (t, n) {
      var r = (o.Object || {})[t] || Object[t],
          e = {};
      e[t] = n(r), i(i.S + i.F * u(function () {
        r(1);
      }), "Object", e);
    };
  }, {
    50: 50,
    60: 60,
    62: 62
  }],
  108: [function (t, n, r) {
    var a = t(56),
        f = t(105),
        s = t(138),
        l = t(106).f;

    n.exports = function (c) {
      return function (t) {
        for (var n, r = s(t), e = f(r), i = e.length, o = 0, u = []; o < i;) n = e[o++], a && !l.call(r, n) || u.push(c ? [n, r[n]] : r[n]);

        return u;
      };
    };
  }, {
    105: 105,
    106: 106,
    138: 138,
    56: 56
  }],
  109: [function (t, n, r) {
    var e = t(101),
        i = t(102),
        o = t(36),
        u = t(68).Reflect;

    n.exports = u && u.ownKeys || function ownKeys(t) {
      var n = e.f(o(t)),
          r = i.f;
      return r ? n.concat(r(t)) : n;
    };
  }, {
    101: 101,
    102: 102,
    36: 36,
    68: 68
  }],
  110: [function (t, n, r) {
    var e = t(68).parseFloat,
        i = t(132).trim;
    n.exports = 1 / e(t(133) + "-0") != -1 / 0 ? function parseFloat(t) {
      var n = i(String(t), 3),
          r = e(n);
      return 0 === r && "-" == n.charAt(0) ? -0 : r;
    } : e;
  }, {
    132: 132,
    133: 133,
    68: 68
  }],
  111: [function (t, n, r) {
    var e = t(68).parseInt,
        i = t(132).trim,
        o = t(133),
        u = /^[-+]?0[xX]/;
    n.exports = 8 !== e(o + "08") || 22 !== e(o + "0x16") ? function parseInt(t, n) {
      var r = i(String(t), 3);
      return e(r, n >>> 0 || (u.test(r) ? 16 : 10));
    } : e;
  }, {
    132: 132,
    133: 133,
    68: 68
  }],
  112: [function (t, n, r) {
    n.exports = function (t) {
      try {
        return {
          e: !1,
          v: t()
        };
      } catch (t) {
        return {
          e: !0,
          v: t
        };
      }
    };
  }, {}],
  113: [function (t, n, r) {
    var e = t(36),
        i = t(79),
        o = t(94);

    n.exports = function (t, n) {
      if (e(t), i(n) && n.constructor === t) return n;
      var r = o.f(t);
      return (0, r.resolve)(n), r.promise;
    };
  }, {
    36: 36,
    79: 79,
    94: 94
  }],
  114: [function (t, n, r) {
    arguments[4][28][0].apply(r, arguments);
  }, {
    28: 28
  }],
  115: [function (t, n, r) {
    var i = t(116);

    n.exports = function (t, n, r) {
      for (var e in n) i(t, e, n[e], r);

      return t;
    };
  }, {
    116: 116
  }],
  116: [function (t, n, r) {
    var o = t(68),
        u = t(70),
        c = t(69),
        a = t(145)("src"),
        e = t(67),
        i = "toString",
        f = ("" + e).split(i);
    t(50).inspectSource = function (t) {
      return e.call(t);
    }, (n.exports = function (t, n, r, e) {
      var i = "function" == typeof r;
      i && (c(r, "name") || u(r, "name", n)), t[n] !== r && (i && (c(r, a) || u(r, a, t[n] ? "" + t[n] : f.join(String(n)))), t === o ? t[n] = r : e ? t[n] ? t[n] = r : u(t, n, r) : (delete t[n], u(t, n, r)));
    })(Function.prototype, i, function toString() {
      return "function" == typeof this && this[a] || e.call(this);
    });
  }, {
    145: 145,
    50: 50,
    67: 67,
    68: 68,
    69: 69,
    70: 70
  }],
  117: [function (t, n, r) {
    "use strict";

    var i = t(45),
        o = RegExp.prototype.exec;

    n.exports = function (t, n) {
      var r = t.exec;

      if ("function" == typeof r) {
        var e = r.call(t, n);
        if ("object" != typeof e) throw new TypeError("RegExp exec method returned something other than an Object or null");
        return e;
      }

      if ("RegExp" !== i(t)) throw new TypeError("RegExp#exec called on incompatible receiver");
      return o.call(t, n);
    };
  }, {
    45: 45
  }],
  118: [function (t, n, r) {
    "use strict";

    var e,
        i,
        u = t(64),
        c = RegExp.prototype.exec,
        a = String.prototype.replace,
        o = c,
        f = "lastIndex",
        s = (e = /a/, i = /b*/g, c.call(e, "a"), c.call(i, "a"), 0 !== e[f] || 0 !== i[f]),
        l = void 0 !== /()??/.exec("")[1];
    (s || l) && (o = function exec(t) {
      var n,
          r,
          e,
          i,
          o = this;
      return l && (r = new RegExp("^" + o.source + "$(?!\\s)", u.call(o))), s && (n = o[f]), e = c.call(o, t), s && e && (o[f] = o.global ? e.index + e[0].length : n), l && e && 1 < e.length && a.call(e[0], r, function () {
        for (i = 1; i < arguments.length - 2; i++) void 0 === arguments[i] && (e[i] = void 0);
      }), e;
    }), n.exports = o;
  }, {
    64: 64
  }],
  119: [function (t, n, r) {
    n.exports = Object.is || function is(t, n) {
      return t === n ? 0 !== t || 1 / t == 1 / n : t != t && n != n;
    };
  }, {}],
  120: [function (n, t, r) {
    function Ou(t, n) {
      if (i(t), !e(n) && null !== n) throw TypeError(n + ": can't set as prototype!");
    }

    var e = n(79),
        i = n(36);
    t.exports = {
      set: Object.setPrototypeOf || ("__proto__" in {} ? function (t, r, e) {
        try {
          (e = n(52)(Function.call, n(99).f(Object.prototype, "__proto__").set, 2))(t, []), r = !(t instanceof Array);
        } catch (t) {
          r = !0;
        }

        return function setPrototypeOf(t, n) {
          return Ou(t, n), r ? t.__proto__ = n : e(t, n), t;
        };
      }({}, !1) : void 0),
      check: Ou
    };
  }, {
    36: 36,
    52: 52,
    79: 79,
    99: 99
  }],
  121: [function (t, n, r) {
    "use strict";

    var e = t(68),
        i = t(97),
        o = t(56),
        u = t(150)("species");

    n.exports = function (t) {
      var n = e[t];
      o && n && !n[u] && i.f(n, u, {
        configurable: !0,
        get: function () {
          return this;
        }
      });
    };
  }, {
    150: 150,
    56: 56,
    68: 68,
    97: 97
  }],
  122: [function (t, n, r) {
    var e = t(97).f,
        i = t(69),
        o = t(150)("toStringTag");

    n.exports = function (t, n, r) {
      t && !i(t = r ? t : t.prototype, o) && e(t, o, {
        configurable: !0,
        value: n
      });
    };
  }, {
    150: 150,
    69: 69,
    97: 97
  }],
  123: [function (t, n, r) {
    var e = t(124)("keys"),
        i = t(145);

    n.exports = function (t) {
      return e[t] || (e[t] = i(t));
    };
  }, {
    124: 124,
    145: 145
  }],
  124: [function (t, n, r) {
    var e = t(50),
        i = t(68),
        o = "__core-js_shared__",
        u = i[o] || (i[o] = {});
    (n.exports = function (t, n) {
      return u[t] || (u[t] = void 0 !== n ? n : {});
    })("versions", []).push({
      version: e.version,
      mode: t(87) ? "pure" : "global",
      copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
    });
  }, {
    50: 50,
    68: 68,
    87: 87
  }],
  125: [function (t, n, r) {
    var i = t(36),
        o = t(31),
        u = t(150)("species");

    n.exports = function (t, n) {
      var r,
          e = i(t).constructor;
      return void 0 === e || null == (r = i(e)[u]) ? n : o(r);
    };
  }, {
    150: 150,
    31: 31,
    36: 36
  }],
  126: [function (t, n, r) {
    "use strict";

    var e = t(62);

    n.exports = function (t, n) {
      return !!t && e(function () {
        n ? t.call(null, function () {}, 1) : t.call(null);
      });
    };
  }, {
    62: 62
  }],
  127: [function (t, n, r) {
    var a = t(137),
        f = t(55);

    n.exports = function (c) {
      return function (t, n) {
        var r,
            e,
            i = String(f(t)),
            o = a(n),
            u = i.length;
        return o < 0 || u <= o ? c ? "" : void 0 : (r = i.charCodeAt(o)) < 55296 || 56319 < r || o + 1 === u || (e = i.charCodeAt(o + 1)) < 56320 || 57343 < e ? c ? i.charAt(o) : r : c ? i.slice(o, o + 2) : e - 56320 + (r - 55296 << 10) + 65536;
      };
    };
  }, {
    137: 137,
    55: 55
  }],
  128: [function (t, n, r) {
    var e = t(80),
        i = t(55);

    n.exports = function (t, n, r) {
      if (e(n)) throw TypeError("String#" + r + " doesn't accept regex!");
      return String(i(t));
    };
  }, {
    55: 55,
    80: 80
  }],
  129: [function (t, n, r) {
    function sw(t, n, r, e) {
      var i = String(u(t)),
          o = "<" + n;
      return "" !== r && (o += " " + r + '="' + String(e).replace(c, "&quot;") + '"'), o + ">" + i + "</" + n + ">";
    }

    var e = t(60),
        i = t(62),
        u = t(55),
        c = /"/g;

    n.exports = function (n, t) {
      var r = {};
      r[n] = t(sw), e(e.P + e.F * i(function () {
        var t = ""[n]('"');
        return t !== t.toLowerCase() || 3 < t.split('"').length;
      }), "String", r);
    };
  }, {
    55: 55,
    60: 60,
    62: 62
  }],
  130: [function (t, n, r) {
    var s = t(139),
        l = t(131),
        h = t(55);

    n.exports = function (t, n, r, e) {
      var i = String(h(t)),
          o = i.length,
          u = void 0 === r ? " " : String(r),
          c = s(n);
      if (c <= o || "" == u) return i;
      var a = c - o,
          f = l.call(u, Math.ceil(a / u.length));
      return f.length > a && (f = f.slice(0, a)), e ? f + i : i + f;
    };
  }, {
    131: 131,
    139: 139,
    55: 55
  }],
  131: [function (t, n, r) {
    "use strict";

    var i = t(137),
        o = t(55);

    n.exports = function repeat(t) {
      var n = String(o(this)),
          r = "",
          e = i(t);
      if (e < 0 || e == 1 / 0) throw RangeError("Count can't be negative");

      for (; 0 < e; (e >>>= 1) && (n += n)) 1 & e && (r += n);

      return r;
    };
  }, {
    137: 137,
    55: 55
  }],
  132: [function (t, n, r) {
    function lx(t, n, r) {
      var e = {},
          i = c(function () {
        return !!a[t]() || "​" != "​"[t]();
      }),
          o = e[t] = i ? n(s) : a[t];
      r && (e[r] = o), u(u.P + u.F * i, "String", e);
    }

    var u = t(60),
        e = t(55),
        c = t(62),
        a = t(133),
        i = "[" + a + "]",
        o = RegExp("^" + i + i + "*"),
        f = RegExp(i + i + "*$"),
        s = lx.trim = function (t, n) {
      return t = String(e(t)), 1 & n && (t = t.replace(o, "")), 2 & n && (t = t.replace(f, "")), t;
    };

    n.exports = lx;
  }, {
    133: 133,
    55: 55,
    60: 60,
    62: 62
  }],
  133: [function (t, n, r) {
    n.exports = "\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff";
  }, {}],
  134: [function (t, n, r) {
    function Rx() {
      var t = +this;

      if (d.hasOwnProperty(t)) {
        var n = d[t];
        delete d[t], n();
      }
    }

    function Sx(t) {
      Rx.call(t.data);
    }

    var e,
        i,
        o,
        u = t(52),
        c = t(74),
        a = t(71),
        f = t(57),
        s = t(68),
        l = s.process,
        h = s.setImmediate,
        p = s.clearImmediate,
        v = s.MessageChannel,
        g = s.Dispatch,
        y = 0,
        d = {},
        x = "onreadystatechange";
    h && p || (h = function setImmediate(t) {
      for (var n = [], r = 1; r < arguments.length;) n.push(arguments[r++]);

      return d[++y] = function () {
        c("function" == typeof t ? t : Function(t), n);
      }, e(y), y;
    }, p = function clearImmediate(t) {
      delete d[t];
    }, "process" == t(46)(l) ? e = function (t) {
      l.nextTick(u(Rx, t, 1));
    } : g && g.now ? e = function (t) {
      g.now(u(Rx, t, 1));
    } : v ? (o = (i = new v()).port2, i.port1.onmessage = Sx, e = u(o.postMessage, o, 1)) : s.addEventListener && "function" == typeof postMessage && !s.importScripts ? (e = function (t) {
      s.postMessage(t + "", "*");
    }, s.addEventListener("message", Sx, !1)) : e = x in f("script") ? function (t) {
      a.appendChild(f("script"))[x] = function () {
        a.removeChild(this), Rx.call(t);
      };
    } : function (t) {
      setTimeout(u(Rx, t, 1), 0);
    }), n.exports = {
      set: h,
      clear: p
    };
  }, {
    46: 46,
    52: 52,
    57: 57,
    68: 68,
    71: 71,
    74: 74
  }],
  135: [function (t, n, r) {
    var e = t(137),
        i = Math.max,
        o = Math.min;

    n.exports = function (t, n) {
      return (t = e(t)) < 0 ? i(t + n, 0) : o(t, n);
    };
  }, {
    137: 137
  }],
  136: [function (t, n, r) {
    var e = t(137),
        i = t(139);

    n.exports = function (t) {
      if (void 0 === t) return 0;
      var n = e(t),
          r = i(n);
      if (n !== r) throw RangeError("Wrong length!");
      return r;
    };
  }, {
    137: 137,
    139: 139
  }],
  137: [function (t, n, r) {
    var e = Math.ceil,
        i = Math.floor;

    n.exports = function (t) {
      return isNaN(t = +t) ? 0 : (0 < t ? i : e)(t);
    };
  }, {}],
  138: [function (t, n, r) {
    var e = t(75),
        i = t(55);

    n.exports = function (t) {
      return e(i(t));
    };
  }, {
    55: 55,
    75: 75
  }],
  139: [function (t, n, r) {
    var e = t(137),
        i = Math.min;

    n.exports = function (t) {
      return 0 < t ? i(e(t), 9007199254740991) : 0;
    };
  }, {
    137: 137
  }],
  140: [function (t, n, r) {
    var e = t(55);

    n.exports = function (t) {
      return Object(e(t));
    };
  }, {
    55: 55
  }],
  141: [function (t, n, r) {
    arguments[4][29][0].apply(r, arguments);
  }, {
    29: 29,
    79: 79
  }],
  142: [function (t, n, r) {
    "use strict";

    if (t(56)) {
      var y = t(87),
          d = t(68),
          x = t(62),
          m = t(60),
          S = t(144),
          e = t(143),
          h = t(52),
          b = t(35),
          i = t(114),
          w = t(70),
          o = t(115),
          u = t(137),
          _ = t(139),
          E = t(136),
          c = t(135),
          a = t(141),
          f = t(69),
          O = t(45),
          I = t(79),
          p = t(140),
          v = t(76),
          F = t(96),
          P = t(103),
          A = t(101).f,
          g = t(151),
          s = t(145),
          l = t(150),
          M = t(40),
          k = t(39),
          R = t(125),
          N = t(162),
          j = t(86),
          T = t(84),
          L = t(121),
          C = t(38),
          G = t(37),
          U = t(97),
          D = t(99),
          W = U.f,
          V = D.f,
          B = d.RangeError,
          q = d.TypeError,
          z = d.Uint8Array,
          $ = "ArrayBuffer",
          Y = "Shared" + $,
          J = "BYTES_PER_ELEMENT",
          H = "prototype",
          Q = Array[H],
          K = e.ArrayBuffer,
          Z = e.DataView,
          X = M(0),
          tt = M(2),
          nt = M(3),
          rt = M(4),
          et = M(5),
          it = M(6),
          ot = k(!0),
          ut = k(!1),
          ct = N.values,
          at = N.keys,
          ft = N.entries,
          st = Q.lastIndexOf,
          lt = Q.reduce,
          ht = Q.reduceRight,
          pt = Q.join,
          vt = Q.sort,
          gt = Q.slice,
          yt = Q.toString,
          dt = Q.toLocaleString,
          xt = l("iterator"),
          mt = l("toStringTag"),
          St = s("typed_constructor"),
          bt = s("def_constructor"),
          wt = S.CONSTR,
          _t = S.TYPED,
          Et = S.VIEW,
          Ot = "Wrong length!",
          It = M(1, function (t, n) {
        return kt(R(t, t[bt]), n);
      }),
          Ft = x(function () {
        return 1 === new z(new Uint16Array([1]).buffer)[0];
      }),
          Pt = !!z && !!z[H].set && x(function () {
        new z(1).set({});
      }),
          At = function (t, n) {
        var r = u(t);
        if (r < 0 || r % n) throw B("Wrong offset!");
        return r;
      },
          Mt = function (t) {
        if (I(t) && _t in t) return t;
        throw q(t + " is not a typed array!");
      },
          kt = function (t, n) {
        if (!(I(t) && St in t)) throw q("It is not a typed array constructor!");
        return new t(n);
      },
          Rt = function (t, n) {
        return Nt(R(t, t[bt]), n);
      },
          Nt = function (t, n) {
        for (var r = 0, e = n.length, i = kt(t, e); r < e;) i[r] = n[r++];

        return i;
      },
          jt = function (t, n, r) {
        W(t, n, {
          get: function () {
            return this._d[r];
          }
        });
      },
          Tt = function from(t) {
        var n,
            r,
            e,
            i,
            o,
            u,
            c = p(t),
            a = arguments.length,
            f = 1 < a ? arguments[1] : void 0,
            s = void 0 !== f,
            l = g(c);

        if (null != l && !v(l)) {
          for (u = l.call(c), e = [], n = 0; !(o = u.next()).done; n++) e.push(o.value);

          c = e;
        }

        for (s && 2 < a && (f = h(f, arguments[2], 2)), n = 0, r = _(c.length), i = kt(this, r); n < r; n++) i[n] = s ? f(c[n], n) : c[n];

        return i;
      },
          Lt = function of() {
        for (var t = 0, n = arguments.length, r = kt(this, n); t < n;) r[t] = arguments[t++];

        return r;
      },
          Ct = !!z && x(function () {
        dt.call(new z(1));
      }),
          Gt = function toLocaleString() {
        return dt.apply(Ct ? gt.call(Mt(this)) : Mt(this), arguments);
      },
          Ut = {
        copyWithin: function copyWithin(t, n) {
          return G.call(Mt(this), t, n, 2 < arguments.length ? arguments[2] : void 0);
        },
        every: function every(t) {
          return rt(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0);
        },
        fill: function fill(t) {
          return C.apply(Mt(this), arguments);
        },
        filter: function filter(t) {
          return Rt(this, tt(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0));
        },
        find: function find(t) {
          return et(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0);
        },
        findIndex: function findIndex(t) {
          return it(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0);
        },
        forEach: function forEach(t) {
          X(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0);
        },
        indexOf: function indexOf(t) {
          return ut(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0);
        },
        includes: function includes(t) {
          return ot(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0);
        },
        join: function join(t) {
          return pt.apply(Mt(this), arguments);
        },
        lastIndexOf: function lastIndexOf(t) {
          return st.apply(Mt(this), arguments);
        },
        map: function map(t) {
          return It(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0);
        },
        reduce: function reduce(t) {
          return lt.apply(Mt(this), arguments);
        },
        reduceRight: function reduceRight(t) {
          return ht.apply(Mt(this), arguments);
        },
        reverse: function reverse() {
          for (var t, n = this, r = Mt(n).length, e = Math.floor(r / 2), i = 0; i < e;) t = n[i], n[i++] = n[--r], n[r] = t;

          return n;
        },
        some: function some(t) {
          return nt(Mt(this), t, 1 < arguments.length ? arguments[1] : void 0);
        },
        sort: function sort(t) {
          return vt.call(Mt(this), t);
        },
        subarray: function subarray(t, n) {
          var r = Mt(this),
              e = r.length,
              i = c(t, e);
          return new (R(r, r[bt]))(r.buffer, r.byteOffset + i * r.BYTES_PER_ELEMENT, _((void 0 === n ? e : c(n, e)) - i));
        }
      },
          Dt = function slice(t, n) {
        return Rt(this, gt.call(Mt(this), t, n));
      },
          Wt = function set(t) {
        Mt(this);

        var n = At(arguments[1], 1),
            r = this.length,
            e = p(t),
            i = _(e.length),
            o = 0;

        if (r < i + n) throw B(Ot);

        for (; o < i;) this[n + o] = e[o++];
      },
          Vt = {
        entries: function entries() {
          return ft.call(Mt(this));
        },
        keys: function keys() {
          return at.call(Mt(this));
        },
        values: function values() {
          return ct.call(Mt(this));
        }
      },
          Bt = function (t, n) {
        return I(t) && t[_t] && "symbol" != typeof n && n in t && String(+n) == String(n);
      },
          qt = function getOwnPropertyDescriptor(t, n) {
        return Bt(t, n = a(n, !0)) ? i(2, t[n]) : V(t, n);
      },
          zt = function defineProperty(t, n, r) {
        return !(Bt(t, n = a(n, !0)) && I(r) && f(r, "value")) || f(r, "get") || f(r, "set") || r.configurable || f(r, "writable") && !r.writable || f(r, "enumerable") && !r.enumerable ? W(t, n, r) : (t[n] = r.value, t);
      };

      wt || (D.f = qt, U.f = zt), m(m.S + m.F * !wt, "Object", {
        getOwnPropertyDescriptor: qt,
        defineProperty: zt
      }), x(function () {
        yt.call({});
      }) && (yt = dt = function toString() {
        return pt.call(this);
      });
      var $t = o({}, Ut);
      o($t, Vt), w($t, xt, Vt.values), o($t, {
        slice: Dt,
        set: Wt,
        constructor: function () {},
        toString: yt,
        toLocaleString: Gt
      }), jt($t, "buffer", "b"), jt($t, "byteOffset", "o"), jt($t, "byteLength", "l"), jt($t, "length", "e"), W($t, mt, {
        get: function () {
          return this[_t];
        }
      }), n.exports = function (t, l, n, o) {
        function uC(t, i) {
          W(t, i, {
            get: function () {
              return t = i, (n = this._d).v[r](t * l + n.o, Ft);
              var t, n;
            },
            set: function (t) {
              return n = i, r = t, e = this._d, o && (r = (r = Math.round(r)) < 0 ? 0 : 255 < r ? 255 : 255 & r), void e.v[u](n * l + e.o, r, Ft);
              var n, r, e;
            },
            enumerable: !0
          });
        }

        var h = t + ((o = !!o) ? "Clamped" : "") + "Array",
            r = "get" + t,
            u = "set" + t,
            p = d[h],
            c = p || {},
            e = p && P(p),
            i = !p || !S.ABV,
            a = {},
            f = p && p[H];
        i ? (p = n(function (t, n, r, e) {
          b(t, p, h, "_d");
          var i,
              o,
              u,
              c,
              a = 0,
              f = 0;

          if (I(n)) {
            if (!(n instanceof K || (c = O(n)) == $ || c == Y)) return _t in n ? Nt(p, n) : Tt.call(p, n);
            i = n, f = At(r, l);
            var s = n.byteLength;

            if (void 0 === e) {
              if (s % l) throw B(Ot);
              if ((o = s - f) < 0) throw B(Ot);
            } else if (s < (o = _(e) * l) + f) throw B(Ot);

            u = o / l;
          } else u = E(n), i = new K(o = u * l);

          for (w(t, "_d", {
            b: i,
            o: f,
            l: o,
            e: u,
            v: new Z(i)
          }); a < u;) uC(t, a++);
        }), f = p[H] = F($t), w(f, "constructor", p)) : x(function () {
          p(1);
        }) && x(function () {
          new p(-1);
        }) && T(function (t) {
          new p(), new p(null), new p(1.5), new p(t);
        }, !0) || (p = n(function (t, n, r, e) {
          var i;
          return b(t, p, h), I(n) ? n instanceof K || (i = O(n)) == $ || i == Y ? void 0 !== e ? new c(n, At(r, l), e) : void 0 !== r ? new c(n, At(r, l)) : new c(n) : _t in n ? Nt(p, n) : Tt.call(p, n) : new c(E(n));
        }), X(e !== Function.prototype ? A(c).concat(A(e)) : A(c), function (t) {
          t in p || w(p, t, c[t]);
        }), p[H] = f, y || (f.constructor = p));
        var s = f[xt],
            v = !!s && ("values" == s.name || null == s.name),
            g = Vt.values;
        w(p, St, !0), w(f, _t, h), w(f, Et, !0), w(f, bt, p), (o ? new p(1)[mt] == h : mt in f) || W(f, mt, {
          get: function () {
            return h;
          }
        }), a[h] = p, m(m.G + m.W + m.F * (p != c), a), m(m.S, h, {
          BYTES_PER_ELEMENT: l
        }), m(m.S + m.F * x(function () {
          c.of.call(p, 1);
        }), h, {
          from: Tt,
          of: Lt
        }), J in f || w(f, J, l), m(m.P, h, Ut), L(h), m(m.P + m.F * Pt, h, {
          set: Wt
        }), m(m.P + m.F * !v, h, Vt), y || f.toString == yt || (f.toString = yt), m(m.P + m.F * x(function () {
          new p(1).slice();
        }), h, {
          slice: Dt
        }), m(m.P + m.F * (x(function () {
          return [1, 2].toLocaleString() != new p([1, 2]).toLocaleString();
        }) || !x(function () {
          f.toLocaleString.call([1, 2]);
        })), h, {
          toLocaleString: Gt
        }), j[h] = v ? s : g, y || v || w(f, xt, g);
      };
    } else n.exports = function () {};
  }, {
    101: 101,
    103: 103,
    114: 114,
    115: 115,
    121: 121,
    125: 125,
    135: 135,
    136: 136,
    137: 137,
    139: 139,
    140: 140,
    141: 141,
    143: 143,
    144: 144,
    145: 145,
    150: 150,
    151: 151,
    162: 162,
    35: 35,
    37: 37,
    38: 38,
    39: 39,
    40: 40,
    45: 45,
    52: 52,
    56: 56,
    60: 60,
    62: 62,
    68: 68,
    69: 69,
    70: 70,
    76: 76,
    79: 79,
    84: 84,
    86: 86,
    87: 87,
    96: 96,
    97: 97,
    99: 99
  }],
  143: [function (t, n, r) {
    "use strict";

    var e = t(68),
        i = t(56),
        o = t(87),
        u = t(144),
        c = t(70),
        a = t(115),
        f = t(62),
        s = t(35),
        l = t(137),
        h = t(139),
        p = t(136),
        v = t(101).f,
        g = t(97).f,
        y = t(38),
        d = t(122),
        x = "ArrayBuffer",
        m = "DataView",
        S = "prototype",
        b = "Wrong index!",
        w = e[x],
        _ = e[m],
        E = e.Math,
        O = e.RangeError,
        I = e.Infinity,
        F = w,
        P = E.abs,
        A = E.pow,
        M = E.floor,
        k = E.log,
        R = E.LN2,
        N = "byteLength",
        j = "byteOffset",
        T = i ? "_b" : "buffer",
        L = i ? "_l" : N,
        C = i ? "_o" : j;

    function packIEEE754(t, n, r) {
      var e,
          i,
          o,
          u = new Array(r),
          c = 8 * r - n - 1,
          a = (1 << c) - 1,
          f = a >> 1,
          s = 23 === n ? A(2, -24) - A(2, -77) : 0,
          l = 0,
          h = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;

      for ((t = P(t)) != t || t === I ? (i = t != t ? 1 : 0, e = a) : (e = M(k(t) / R), t * (o = A(2, -e)) < 1 && (e--, o *= 2), 2 <= (t += 1 <= e + f ? s / o : s * A(2, 1 - f)) * o && (e++, o /= 2), a <= e + f ? (i = 0, e = a) : 1 <= e + f ? (i = (t * o - 1) * A(2, n), e += f) : (i = t * A(2, f - 1) * A(2, n), e = 0)); 8 <= n; u[l++] = 255 & i, i /= 256, n -= 8);

      for (e = e << n | i, c += n; 0 < c; u[l++] = 255 & e, e /= 256, c -= 8);

      return u[--l] |= 128 * h, u;
    }

    function unpackIEEE754(t, n, r) {
      var e,
          i = 8 * r - n - 1,
          o = (1 << i) - 1,
          u = o >> 1,
          c = i - 7,
          a = r - 1,
          f = t[a--],
          s = 127 & f;

      for (f >>= 7; 0 < c; s = 256 * s + t[a], a--, c -= 8);

      for (e = s & (1 << -c) - 1, s >>= -c, c += n; 0 < c; e = 256 * e + t[a], a--, c -= 8);

      if (0 === s) s = 1 - u;else {
        if (s === o) return e ? NaN : f ? -I : I;
        e += A(2, n), s -= u;
      }
      return (f ? -1 : 1) * e * A(2, s - n);
    }

    function unpackI32(t) {
      return t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0];
    }

    function packI8(t) {
      return [255 & t];
    }

    function packI16(t) {
      return [255 & t, t >> 8 & 255];
    }

    function packI32(t) {
      return [255 & t, t >> 8 & 255, t >> 16 & 255, t >> 24 & 255];
    }

    function packF64(t) {
      return packIEEE754(t, 52, 8);
    }

    function packF32(t) {
      return packIEEE754(t, 23, 4);
    }

    function addGetter(t, n, r) {
      g(t[S], n, {
        get: function () {
          return this[r];
        }
      });
    }

    function get(t, n, r, e) {
      var i = p(+r);
      if (i + n > t[L]) throw O(b);
      var o = t[T]._b,
          u = i + t[C],
          c = o.slice(u, u + n);
      return e ? c : c.reverse();
    }

    function set(t, n, r, e, i, o) {
      var u = p(+r);
      if (u + n > t[L]) throw O(b);

      for (var c = t[T]._b, a = u + t[C], f = e(+i), s = 0; s < n; s++) c[a + s] = f[o ? s : n - s - 1];
    }

    if (u.ABV) {
      if (!f(function () {
        w(1);
      }) || !f(function () {
        new w(-1);
      }) || f(function () {
        return new w(), new w(1.5), new w(NaN), w.name != x;
      })) {
        for (var G, U = (w = function ArrayBuffer(t) {
          return s(this, w), new F(p(t));
        })[S] = F[S], D = v(F), W = 0; D.length > W;) (G = D[W++]) in w || c(w, G, F[G]);

        o || (U.constructor = w);
      }

      var V = new _(new w(2)),
          B = _[S].setInt8;
      V.setInt8(0, 2147483648), V.setInt8(1, 2147483649), !V.getInt8(0) && V.getInt8(1) || a(_[S], {
        setInt8: function setInt8(t, n) {
          B.call(this, t, n << 24 >> 24);
        },
        setUint8: function setUint8(t, n) {
          B.call(this, t, n << 24 >> 24);
        }
      }, !0);
    } else w = function ArrayBuffer(t) {
      s(this, w, x);
      var n = p(t);
      this._b = y.call(new Array(n), 0), this[L] = n;
    }, _ = function DataView(t, n, r) {
      s(this, _, m), s(t, w, m);
      var e = t[L],
          i = l(n);
      if (i < 0 || e < i) throw O("Wrong offset!");
      if (e < i + (r = void 0 === r ? e - i : h(r))) throw O("Wrong length!");
      this[T] = t, this[C] = i, this[L] = r;
    }, i && (addGetter(w, N, "_l"), addGetter(_, "buffer", "_b"), addGetter(_, N, "_l"), addGetter(_, j, "_o")), a(_[S], {
      getInt8: function getInt8(t) {
        return get(this, 1, t)[0] << 24 >> 24;
      },
      getUint8: function getUint8(t) {
        return get(this, 1, t)[0];
      },
      getInt16: function getInt16(t) {
        var n = get(this, 2, t, arguments[1]);
        return (n[1] << 8 | n[0]) << 16 >> 16;
      },
      getUint16: function getUint16(t) {
        var n = get(this, 2, t, arguments[1]);
        return n[1] << 8 | n[0];
      },
      getInt32: function getInt32(t) {
        return unpackI32(get(this, 4, t, arguments[1]));
      },
      getUint32: function getUint32(t) {
        return unpackI32(get(this, 4, t, arguments[1])) >>> 0;
      },
      getFloat32: function getFloat32(t) {
        return unpackIEEE754(get(this, 4, t, arguments[1]), 23, 4);
      },
      getFloat64: function getFloat64(t) {
        return unpackIEEE754(get(this, 8, t, arguments[1]), 52, 8);
      },
      setInt8: function setInt8(t, n) {
        set(this, 1, t, packI8, n);
      },
      setUint8: function setUint8(t, n) {
        set(this, 1, t, packI8, n);
      },
      setInt16: function setInt16(t, n) {
        set(this, 2, t, packI16, n, arguments[2]);
      },
      setUint16: function setUint16(t, n) {
        set(this, 2, t, packI16, n, arguments[2]);
      },
      setInt32: function setInt32(t, n) {
        set(this, 4, t, packI32, n, arguments[2]);
      },
      setUint32: function setUint32(t, n) {
        set(this, 4, t, packI32, n, arguments[2]);
      },
      setFloat32: function setFloat32(t, n) {
        set(this, 4, t, packF32, n, arguments[2]);
      },
      setFloat64: function setFloat64(t, n) {
        set(this, 8, t, packF64, n, arguments[2]);
      }
    });

    d(w, x), d(_, m), c(_[S], u.VIEW, !0), r[x] = w, r[m] = _;
  }, {
    101: 101,
    115: 115,
    122: 122,
    136: 136,
    137: 137,
    139: 139,
    144: 144,
    35: 35,
    38: 38,
    56: 56,
    62: 62,
    68: 68,
    70: 70,
    87: 87,
    97: 97
  }],
  144: [function (t, n, r) {
    for (var e, i = t(68), o = t(70), u = t(145), c = u("typed_array"), a = u("view"), f = !(!i.ArrayBuffer || !i.DataView), s = f, l = 0, h = "Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(","); l < 9;) (e = i[h[l++]]) ? (o(e.prototype, c, !0), o(e.prototype, a, !0)) : s = !1;

    n.exports = {
      ABV: f,
      CONSTR: s,
      TYPED: c,
      VIEW: a
    };
  }, {
    145: 145,
    68: 68,
    70: 70
  }],
  145: [function (t, n, r) {
    var e = 0,
        i = Math.random();

    n.exports = function (t) {
      return "Symbol(".concat(void 0 === t ? "" : t, ")_", (++e + i).toString(36));
    };
  }, {}],
  146: [function (t, n, r) {
    var e = t(68).navigator;
    n.exports = e && e.userAgent || "";
  }, {
    68: 68
  }],
  147: [function (t, n, r) {
    var e = t(79);

    n.exports = function (t, n) {
      if (!e(t) || t._t !== n) throw TypeError("Incompatible receiver, " + n + " required!");
      return t;
    };
  }, {
    79: 79
  }],
  148: [function (t, n, r) {
    var e = t(68),
        i = t(50),
        o = t(87),
        u = t(149),
        c = t(97).f;

    n.exports = function (t) {
      var n = i.Symbol || (i.Symbol = o ? {} : e.Symbol || {});
      "_" == t.charAt(0) || t in n || c(n, t, {
        value: u.f(t)
      });
    };
  }, {
    149: 149,
    50: 50,
    68: 68,
    87: 87,
    97: 97
  }],
  149: [function (t, n, r) {
    r.f = t(150);
  }, {
    150: 150
  }],
  150: [function (t, n, r) {
    var e = t(124)("wks"),
        i = t(145),
        o = t(68).Symbol,
        u = "function" == typeof o;
    (n.exports = function (t) {
      return e[t] || (e[t] = u && o[t] || (u ? o : i)("Symbol." + t));
    }).store = e;
  }, {
    124: 124,
    145: 145,
    68: 68
  }],
  151: [function (t, n, r) {
    var e = t(45),
        i = t(150)("iterator"),
        o = t(86);

    n.exports = t(50).getIteratorMethod = function (t) {
      if (null != t) return t[i] || t["@@iterator"] || o[e(t)];
    };
  }, {
    150: 150,
    45: 45,
    50: 50,
    86: 86
  }],
  152: [function (t, n, r) {
    var e = t(60);
    e(e.P, "Array", {
      copyWithin: t(37)
    }), t(33)("copyWithin");
  }, {
    33: 33,
    37: 37,
    60: 60
  }],
  153: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(40)(4);
    e(e.P + e.F * !t(126)([].every, !0), "Array", {
      every: function every(t) {
        return i(this, t, arguments[1]);
      }
    });
  }, {
    126: 126,
    40: 40,
    60: 60
  }],
  154: [function (t, n, r) {
    var e = t(60);
    e(e.P, "Array", {
      fill: t(38)
    }), t(33)("fill");
  }, {
    33: 33,
    38: 38,
    60: 60
  }],
  155: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(40)(2);
    e(e.P + e.F * !t(126)([].filter, !0), "Array", {
      filter: function filter(t) {
        return i(this, t, arguments[1]);
      }
    });
  }, {
    126: 126,
    40: 40,
    60: 60
  }],
  156: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(40)(6),
        o = "findIndex",
        u = !0;
    o in [] && Array(1)[o](function () {
      u = !1;
    }), e(e.P + e.F * u, "Array", {
      findIndex: function findIndex(t) {
        return i(this, t, 1 < arguments.length ? arguments[1] : void 0);
      }
    }), t(33)(o);
  }, {
    33: 33,
    40: 40,
    60: 60
  }],
  157: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(40)(5),
        o = "find",
        u = !0;
    o in [] && Array(1)[o](function () {
      u = !1;
    }), e(e.P + e.F * u, "Array", {
      find: function find(t) {
        return i(this, t, 1 < arguments.length ? arguments[1] : void 0);
      }
    }), t(33)(o);
  }, {
    33: 33,
    40: 40,
    60: 60
  }],
  158: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(40)(0),
        o = t(126)([].forEach, !0);
    e(e.P + e.F * !o, "Array", {
      forEach: function forEach(t) {
        return i(this, t, arguments[1]);
      }
    });
  }, {
    126: 126,
    40: 40,
    60: 60
  }],
  159: [function (t, n, r) {
    "use strict";

    var h = t(52),
        e = t(60),
        p = t(140),
        v = t(81),
        g = t(76),
        y = t(139),
        d = t(51),
        x = t(151);
    e(e.S + e.F * !t(84)(function (t) {
      Array.from(t);
    }), "Array", {
      from: function from(t) {
        var n,
            r,
            e,
            i,
            o = p(t),
            u = "function" == typeof this ? this : Array,
            c = arguments.length,
            a = 1 < c ? arguments[1] : void 0,
            f = void 0 !== a,
            s = 0,
            l = x(o);
        if (f && (a = h(a, 2 < c ? arguments[2] : void 0, 2)), null == l || u == Array && g(l)) for (r = new u(n = y(o.length)); s < n; s++) d(r, s, f ? a(o[s], s) : o[s]);else for (i = l.call(o), r = new u(); !(e = i.next()).done; s++) d(r, s, f ? v(i, a, [e.value, s], !0) : e.value);
        return r.length = s, r;
      }
    });
  }, {
    139: 139,
    140: 140,
    151: 151,
    51: 51,
    52: 52,
    60: 60,
    76: 76,
    81: 81,
    84: 84
  }],
  160: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(39)(!1),
        o = [].indexOf,
        u = !!o && 1 / [1].indexOf(1, -0) < 0;
    e(e.P + e.F * (u || !t(126)(o)), "Array", {
      indexOf: function indexOf(t) {
        return u ? o.apply(this, arguments) || 0 : i(this, t, arguments[1]);
      }
    });
  }, {
    126: 126,
    39: 39,
    60: 60
  }],
  161: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Array", {
      isArray: t(77)
    });
  }, {
    60: 60,
    77: 77
  }],
  162: [function (t, n, r) {
    "use strict";

    var e = t(33),
        i = t(85),
        o = t(86),
        u = t(138);
    n.exports = t(83)(Array, "Array", function (t, n) {
      this._t = u(t), this._i = 0, this._k = n;
    }, function () {
      var t = this._t,
          n = this._k,
          r = this._i++;
      return !t || r >= t.length ? (this._t = void 0, i(1)) : i(0, "keys" == n ? r : "values" == n ? t[r] : [r, t[r]]);
    }, "values"), o.Arguments = o.Array, e("keys"), e("values"), e("entries");
  }, {
    138: 138,
    33: 33,
    83: 83,
    85: 85,
    86: 86
  }],
  163: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(138),
        o = [].join;
    e(e.P + e.F * (t(75) != Object || !t(126)(o)), "Array", {
      join: function join(t) {
        return o.call(i(this), void 0 === t ? "," : t);
      }
    });
  }, {
    126: 126,
    138: 138,
    60: 60,
    75: 75
  }],
  164: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(138),
        o = t(137),
        u = t(139),
        c = [].lastIndexOf,
        a = !!c && 1 / [1].lastIndexOf(1, -0) < 0;
    e(e.P + e.F * (a || !t(126)(c)), "Array", {
      lastIndexOf: function lastIndexOf(t) {
        if (a) return c.apply(this, arguments) || 0;
        var n = i(this),
            r = u(n.length),
            e = r - 1;

        for (1 < arguments.length && (e = Math.min(e, o(arguments[1]))), e < 0 && (e = r + e); 0 <= e; e--) if (e in n && n[e] === t) return e || 0;

        return -1;
      }
    });
  }, {
    126: 126,
    137: 137,
    138: 138,
    139: 139,
    60: 60
  }],
  165: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(40)(1);
    e(e.P + e.F * !t(126)([].map, !0), "Array", {
      map: function map(t) {
        return i(this, t, arguments[1]);
      }
    });
  }, {
    126: 126,
    40: 40,
    60: 60
  }],
  166: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(51);
    e(e.S + e.F * t(62)(function () {
      function F() {}

      return !(Array.of.call(F) instanceof F);
    }), "Array", {
      of: function of() {
        for (var t = 0, n = arguments.length, r = new ("function" == typeof this ? this : Array)(n); t < n;) i(r, t, arguments[t++]);

        return r.length = n, r;
      }
    });
  }, {
    51: 51,
    60: 60,
    62: 62
  }],
  167: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(41);
    e(e.P + e.F * !t(126)([].reduceRight, !0), "Array", {
      reduceRight: function reduceRight(t) {
        return i(this, t, arguments.length, arguments[1], !0);
      }
    });
  }, {
    126: 126,
    41: 41,
    60: 60
  }],
  168: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(41);
    e(e.P + e.F * !t(126)([].reduce, !0), "Array", {
      reduce: function reduce(t) {
        return i(this, t, arguments.length, arguments[1], !1);
      }
    });
  }, {
    126: 126,
    41: 41,
    60: 60
  }],
  169: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(71),
        f = t(46),
        s = t(135),
        l = t(139),
        h = [].slice;
    e(e.P + e.F * t(62)(function () {
      i && h.call(i);
    }), "Array", {
      slice: function slice(t, n) {
        var r = l(this.length),
            e = f(this);
        if (n = void 0 === n ? r : n, "Array" == e) return h.call(this, t, n);

        for (var i = s(t, r), o = s(n, r), u = l(o - i), c = new Array(u), a = 0; a < u; a++) c[a] = "String" == e ? this.charAt(i + a) : this[i + a];

        return c;
      }
    });
  }, {
    135: 135,
    139: 139,
    46: 46,
    60: 60,
    62: 62,
    71: 71
  }],
  170: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(40)(3);
    e(e.P + e.F * !t(126)([].some, !0), "Array", {
      some: function some(t) {
        return i(this, t, arguments[1]);
      }
    });
  }, {
    126: 126,
    40: 40,
    60: 60
  }],
  171: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(31),
        o = t(140),
        u = t(62),
        c = [].sort,
        a = [1, 2, 3];
    e(e.P + e.F * (u(function () {
      a.sort(void 0);
    }) || !u(function () {
      a.sort(null);
    }) || !t(126)(c)), "Array", {
      sort: function sort(t) {
        return void 0 === t ? c.call(o(this)) : c.call(o(this), i(t));
      }
    });
  }, {
    126: 126,
    140: 140,
    31: 31,
    60: 60,
    62: 62
  }],
  172: [function (t, n, r) {
    t(121)("Array");
  }, {
    121: 121
  }],
  173: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Date", {
      now: function () {
        return new Date().getTime();
      }
    });
  }, {
    60: 60
  }],
  174: [function (t, n, r) {
    var e = t(60),
        i = t(53);
    e(e.P + e.F * (Date.prototype.toISOString !== i), "Date", {
      toISOString: i
    });
  }, {
    53: 53,
    60: 60
  }],
  175: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(140),
        o = t(141);
    e(e.P + e.F * t(62)(function () {
      return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({
        toISOString: function () {
          return 1;
        }
      });
    }), "Date", {
      toJSON: function toJSON(t) {
        var n = i(this),
            r = o(n);
        return "number" != typeof r || isFinite(r) ? n.toISOString() : null;
      }
    });
  }, {
    140: 140,
    141: 141,
    60: 60,
    62: 62
  }],
  176: [function (t, n, r) {
    var e = t(150)("toPrimitive"),
        i = Date.prototype;
    e in i || t(70)(i, e, t(54));
  }, {
    150: 150,
    54: 54,
    70: 70
  }],
  177: [function (t, n, r) {
    var e = Date.prototype,
        i = "Invalid Date",
        o = "toString",
        u = e[o],
        c = e.getTime;
    new Date(NaN) + "" != i && t(116)(e, o, function toString() {
      var t = c.call(this);
      return t == t ? u.call(this) : i;
    });
  }, {
    116: 116
  }],
  178: [function (t, n, r) {
    var e = t(60);
    e(e.P, "Function", {
      bind: t(44)
    });
  }, {
    44: 44,
    60: 60
  }],
  179: [function (t, n, r) {
    "use strict";

    var e = t(79),
        i = t(103),
        o = t(150)("hasInstance"),
        u = Function.prototype;
    o in u || t(97).f(u, o, {
      value: function (t) {
        if ("function" != typeof this || !e(t)) return !1;
        if (!e(this.prototype)) return t instanceof this;

        for (; t = i(t);) if (this.prototype === t) return !0;

        return !1;
      }
    });
  }, {
    103: 103,
    150: 150,
    79: 79,
    97: 97
  }],
  180: [function (t, n, r) {
    var e = t(97).f,
        i = Function.prototype,
        o = /^\s*function ([^ (]*)/;
    "name" in i || t(56) && e(i, "name", {
      configurable: !0,
      get: function () {
        try {
          return ("" + this).match(o)[1];
        } catch (t) {
          return "";
        }
      }
    });
  }, {
    56: 56,
    97: 97
  }],
  181: [function (t, n, r) {
    "use strict";

    var e = t(47),
        i = t(147);
    n.exports = t(49)("Map", function (t) {
      return function Map() {
        return t(this, 0 < arguments.length ? arguments[0] : void 0);
      };
    }, {
      get: function get(t) {
        var n = e.getEntry(i(this, "Map"), t);
        return n && n.v;
      },
      set: function set(t, n) {
        return e.def(i(this, "Map"), 0 === t ? 0 : t, n);
      }
    }, e, !0);
  }, {
    147: 147,
    47: 47,
    49: 49
  }],
  182: [function (t, n, r) {
    var e = t(60),
        i = t(90),
        o = Math.sqrt,
        u = Math.acosh;
    e(e.S + e.F * !(u && 710 == Math.floor(u(Number.MAX_VALUE)) && u(1 / 0) == 1 / 0), "Math", {
      acosh: function acosh(t) {
        return (t = +t) < 1 ? NaN : 94906265.62425156 < t ? Math.log(t) + Math.LN2 : i(t - 1 + o(t - 1) * o(t + 1));
      }
    });
  }, {
    60: 60,
    90: 90
  }],
  183: [function (t, n, r) {
    var e = t(60),
        i = Math.asinh;
    e(e.S + e.F * !(i && 0 < 1 / i(0)), "Math", {
      asinh: function asinh(t) {
        return isFinite(t = +t) && 0 != t ? t < 0 ? -asinh(-t) : Math.log(t + Math.sqrt(t * t + 1)) : t;
      }
    });
  }, {
    60: 60
  }],
  184: [function (t, n, r) {
    var e = t(60),
        i = Math.atanh;
    e(e.S + e.F * !(i && 1 / i(-0) < 0), "Math", {
      atanh: function atanh(t) {
        return 0 == (t = +t) ? t : Math.log((1 + t) / (1 - t)) / 2;
      }
    });
  }, {
    60: 60
  }],
  185: [function (t, n, r) {
    var e = t(60),
        i = t(91);
    e(e.S, "Math", {
      cbrt: function cbrt(t) {
        return i(t = +t) * Math.pow(Math.abs(t), 1 / 3);
      }
    });
  }, {
    60: 60,
    91: 91
  }],
  186: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Math", {
      clz32: function clz32(t) {
        return (t >>>= 0) ? 31 - Math.floor(Math.log(t + .5) * Math.LOG2E) : 32;
      }
    });
  }, {
    60: 60
  }],
  187: [function (t, n, r) {
    var e = t(60),
        i = Math.exp;
    e(e.S, "Math", {
      cosh: function cosh(t) {
        return (i(t = +t) + i(-t)) / 2;
      }
    });
  }, {
    60: 60
  }],
  188: [function (t, n, r) {
    var e = t(60),
        i = t(88);
    e(e.S + e.F * (i != Math.expm1), "Math", {
      expm1: i
    });
  }, {
    60: 60,
    88: 88
  }],
  189: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Math", {
      fround: t(89)
    });
  }, {
    60: 60,
    89: 89
  }],
  190: [function (t, n, r) {
    var e = t(60),
        a = Math.abs;
    e(e.S, "Math", {
      hypot: function hypot(t, n) {
        for (var r, e, i = 0, o = 0, u = arguments.length, c = 0; o < u;) c < (r = a(arguments[o++])) ? (i = i * (e = c / r) * e + 1, c = r) : i += 0 < r ? (e = r / c) * e : r;

        return c === 1 / 0 ? 1 / 0 : c * Math.sqrt(i);
      }
    });
  }, {
    60: 60
  }],
  191: [function (t, n, r) {
    var e = t(60),
        i = Math.imul;
    e(e.S + e.F * t(62)(function () {
      return -5 != i(4294967295, 5) || 2 != i.length;
    }), "Math", {
      imul: function imul(t, n) {
        var r = 65535,
            e = +t,
            i = +n,
            o = r & e,
            u = r & i;
        return 0 | o * u + ((r & e >>> 16) * u + o * (r & i >>> 16) << 16 >>> 0);
      }
    });
  }, {
    60: 60,
    62: 62
  }],
  192: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Math", {
      log10: function log10(t) {
        return Math.log(t) * Math.LOG10E;
      }
    });
  }, {
    60: 60
  }],
  193: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Math", {
      log1p: t(90)
    });
  }, {
    60: 60,
    90: 90
  }],
  194: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Math", {
      log2: function log2(t) {
        return Math.log(t) / Math.LN2;
      }
    });
  }, {
    60: 60
  }],
  195: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Math", {
      sign: t(91)
    });
  }, {
    60: 60,
    91: 91
  }],
  196: [function (t, n, r) {
    var e = t(60),
        i = t(88),
        o = Math.exp;
    e(e.S + e.F * t(62)(function () {
      return -2e-17 != !Math.sinh(-2e-17);
    }), "Math", {
      sinh: function sinh(t) {
        return Math.abs(t = +t) < 1 ? (i(t) - i(-t)) / 2 : (o(t - 1) - o(-t - 1)) * (Math.E / 2);
      }
    });
  }, {
    60: 60,
    62: 62,
    88: 88
  }],
  197: [function (t, n, r) {
    var e = t(60),
        i = t(88),
        o = Math.exp;
    e(e.S, "Math", {
      tanh: function tanh(t) {
        var n = i(t = +t),
            r = i(-t);
        return n == 1 / 0 ? 1 : r == 1 / 0 ? -1 : (n - r) / (o(t) + o(-t));
      }
    });
  }, {
    60: 60,
    88: 88
  }],
  198: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Math", {
      trunc: function trunc(t) {
        return (0 < t ? Math.floor : Math.ceil)(t);
      }
    });
  }, {
    60: 60
  }],
  199: [function (t, n, r) {
    "use strict";

    function wN(t) {
      var n = s(t, !1);

      if ("string" == typeof n && 2 < n.length) {
        var r,
            e,
            i,
            o = (n = x ? n.trim() : h(n, 3)).charCodeAt(0);

        if (43 === o || 45 === o) {
          if (88 === (r = n.charCodeAt(2)) || 120 === r) return NaN;
        } else if (48 === o) {
          switch (n.charCodeAt(1)) {
            case 66:
            case 98:
              e = 2, i = 49;
              break;

            case 79:
            case 111:
              e = 8, i = 55;
              break;

            default:
              return +n;
          }

          for (var u, c = n.slice(2), a = 0, f = c.length; a < f; a++) if ((u = c.charCodeAt(a)) < 48 || i < u) return NaN;

          return parseInt(c, e);
        }
      }

      return +n;
    }

    var e = t(68),
        i = t(69),
        o = t(46),
        u = t(73),
        s = t(141),
        c = t(62),
        a = t(101).f,
        f = t(99).f,
        l = t(97).f,
        h = t(132).trim,
        p = "Number",
        v = e[p],
        g = v,
        y = v.prototype,
        d = o(t(96)(y)) == p,
        x = ("trim" in String.prototype);

    if (!v(" 0o1") || !v("0b1") || v("+0x1")) {
      v = function Number(t) {
        var n = arguments.length < 1 ? 0 : t,
            r = this;
        return r instanceof v && (d ? c(function () {
          y.valueOf.call(r);
        }) : o(r) != p) ? u(new g(wN(n)), r, v) : wN(n);
      };

      for (var m, S = t(56) ? a(g) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), b = 0; S.length > b; b++) i(g, m = S[b]) && !i(v, m) && l(v, m, f(g, m));

      (v.prototype = y).constructor = v, t(116)(e, p, v);
    }
  }, {
    101: 101,
    116: 116,
    132: 132,
    141: 141,
    46: 46,
    56: 56,
    62: 62,
    68: 68,
    69: 69,
    73: 73,
    96: 96,
    97: 97,
    99: 99
  }],
  200: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Number", {
      EPSILON: Math.pow(2, -52)
    });
  }, {
    60: 60
  }],
  201: [function (t, n, r) {
    var e = t(60),
        i = t(68).isFinite;
    e(e.S, "Number", {
      isFinite: function isFinite(t) {
        return "number" == typeof t && i(t);
      }
    });
  }, {
    60: 60,
    68: 68
  }],
  202: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Number", {
      isInteger: t(78)
    });
  }, {
    60: 60,
    78: 78
  }],
  203: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Number", {
      isNaN: function isNaN(t) {
        return t != t;
      }
    });
  }, {
    60: 60
  }],
  204: [function (t, n, r) {
    var e = t(60),
        i = t(78),
        o = Math.abs;
    e(e.S, "Number", {
      isSafeInteger: function isSafeInteger(t) {
        return i(t) && o(t) <= 9007199254740991;
      }
    });
  }, {
    60: 60,
    78: 78
  }],
  205: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Number", {
      MAX_SAFE_INTEGER: 9007199254740991
    });
  }, {
    60: 60
  }],
  206: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Number", {
      MIN_SAFE_INTEGER: -9007199254740991
    });
  }, {
    60: 60
  }],
  207: [function (t, n, r) {
    var e = t(60),
        i = t(110);
    e(e.S + e.F * (Number.parseFloat != i), "Number", {
      parseFloat: i
    });
  }, {
    110: 110,
    60: 60
  }],
  208: [function (t, n, r) {
    var e = t(60),
        i = t(111);
    e(e.S + e.F * (Number.parseInt != i), "Number", {
      parseInt: i
    });
  }, {
    111: 111,
    60: 60
  }],
  209: [function (t, n, r) {
    "use strict";

    function PO(t, n) {
      for (var r = -1, e = n; ++r < 6;) e += t * u[r], u[r] = e % 1e7, e = o(e / 1e7);
    }

    function QO(t) {
      for (var n = 6, r = 0; 0 <= --n;) r += u[n], u[n] = o(r / t), r = r % t * 1e7;
    }

    function RO() {
      for (var t = 6, n = ""; 0 <= --t;) if ("" !== n || 0 === t || 0 !== u[t]) {
        var r = String(u[t]);
        n = "" === n ? r : n + l.call("0", 7 - r.length) + r;
      }

      return n;
    }

    var e = t(60),
        f = t(137),
        s = t(32),
        l = t(131),
        i = 1..toFixed,
        o = Math.floor,
        u = [0, 0, 0, 0, 0, 0],
        h = "Number.toFixed: incorrect invocation!",
        p = function (t, n, r) {
      return 0 === n ? r : n % 2 == 1 ? p(t, n - 1, r * t) : p(t * t, n / 2, r);
    };

    e(e.P + e.F * (!!i && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== 0xde0b6b3a7640080.toFixed(0)) || !t(62)(function () {
      i.call({});
    })), "Number", {
      toFixed: function toFixed(t) {
        var n,
            r,
            e,
            i,
            o = s(this, h),
            u = f(t),
            c = "",
            a = "0";
        if (u < 0 || 20 < u) throw RangeError(h);
        if (o != o) return "NaN";
        if (o <= -1e21 || 1e21 <= o) return String(o);
        if (o < 0 && (c = "-", o = -o), 1e-21 < o) if (r = (n = function (t) {
          for (var n = 0, r = t; 4096 <= r;) n += 12, r /= 4096;

          for (; 2 <= r;) n += 1, r /= 2;

          return n;
        }(o * p(2, 69, 1)) - 69) < 0 ? o * p(2, -n, 1) : o / p(2, n, 1), r *= 4503599627370496, 0 < (n = 52 - n)) {
          for (PO(0, r), e = u; 7 <= e;) PO(1e7, 0), e -= 7;

          for (PO(p(10, e, 1), 0), e = n - 1; 23 <= e;) QO(1 << 23), e -= 23;

          QO(1 << e), PO(1, 1), QO(2), a = RO();
        } else PO(0, r), PO(1 << -n, 0), a = RO() + l.call("0", u);
        return a = 0 < u ? c + ((i = a.length) <= u ? "0." + l.call("0", u - i) + a : a.slice(0, i - u) + "." + a.slice(i - u)) : c + a;
      }
    });
  }, {
    131: 131,
    137: 137,
    32: 32,
    60: 60,
    62: 62
  }],
  210: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(62),
        o = t(32),
        u = 1..toPrecision;
    e(e.P + e.F * (i(function () {
      return "1" !== u.call(1, void 0);
    }) || !i(function () {
      u.call({});
    })), "Number", {
      toPrecision: function toPrecision(t) {
        var n = o(this, "Number#toPrecision: incorrect invocation!");
        return void 0 === t ? u.call(n) : u.call(n, t);
      }
    });
  }, {
    32: 32,
    60: 60,
    62: 62
  }],
  211: [function (t, n, r) {
    var e = t(60);
    e(e.S + e.F, "Object", {
      assign: t(95)
    });
  }, {
    60: 60,
    95: 95
  }],
  212: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Object", {
      create: t(96)
    });
  }, {
    60: 60,
    96: 96
  }],
  213: [function (t, n, r) {
    var e = t(60);
    e(e.S + e.F * !t(56), "Object", {
      defineProperties: t(98)
    });
  }, {
    56: 56,
    60: 60,
    98: 98
  }],
  214: [function (t, n, r) {
    var e = t(60);
    e(e.S + e.F * !t(56), "Object", {
      defineProperty: t(97).f
    });
  }, {
    56: 56,
    60: 60,
    97: 97
  }],
  215: [function (t, n, r) {
    var e = t(79),
        i = t(92).onFreeze;
    t(107)("freeze", function (n) {
      return function freeze(t) {
        return n && e(t) ? n(i(t)) : t;
      };
    });
  }, {
    107: 107,
    79: 79,
    92: 92
  }],
  216: [function (t, n, r) {
    var e = t(138),
        i = t(99).f;
    t(107)("getOwnPropertyDescriptor", function () {
      return function getOwnPropertyDescriptor(t, n) {
        return i(e(t), n);
      };
    });
  }, {
    107: 107,
    138: 138,
    99: 99
  }],
  217: [function (t, n, r) {
    t(107)("getOwnPropertyNames", function () {
      return t(100).f;
    });
  }, {
    100: 100,
    107: 107
  }],
  218: [function (t, n, r) {
    var e = t(140),
        i = t(103);
    t(107)("getPrototypeOf", function () {
      return function getPrototypeOf(t) {
        return i(e(t));
      };
    });
  }, {
    103: 103,
    107: 107,
    140: 140
  }],
  219: [function (t, n, r) {
    var e = t(79);
    t(107)("isExtensible", function (n) {
      return function isExtensible(t) {
        return !!e(t) && (!n || n(t));
      };
    });
  }, {
    107: 107,
    79: 79
  }],
  220: [function (t, n, r) {
    var e = t(79);
    t(107)("isFrozen", function (n) {
      return function isFrozen(t) {
        return !e(t) || !!n && n(t);
      };
    });
  }, {
    107: 107,
    79: 79
  }],
  221: [function (t, n, r) {
    var e = t(79);
    t(107)("isSealed", function (n) {
      return function isSealed(t) {
        return !e(t) || !!n && n(t);
      };
    });
  }, {
    107: 107,
    79: 79
  }],
  222: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Object", {
      is: t(119)
    });
  }, {
    119: 119,
    60: 60
  }],
  223: [function (t, n, r) {
    var e = t(140),
        i = t(105);
    t(107)("keys", function () {
      return function keys(t) {
        return i(e(t));
      };
    });
  }, {
    105: 105,
    107: 107,
    140: 140
  }],
  224: [function (t, n, r) {
    var e = t(79),
        i = t(92).onFreeze;
    t(107)("preventExtensions", function (n) {
      return function preventExtensions(t) {
        return n && e(t) ? n(i(t)) : t;
      };
    });
  }, {
    107: 107,
    79: 79,
    92: 92
  }],
  225: [function (t, n, r) {
    var e = t(79),
        i = t(92).onFreeze;
    t(107)("seal", function (n) {
      return function seal(t) {
        return n && e(t) ? n(i(t)) : t;
      };
    });
  }, {
    107: 107,
    79: 79,
    92: 92
  }],
  226: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Object", {
      setPrototypeOf: t(120).set
    });
  }, {
    120: 120,
    60: 60
  }],
  227: [function (t, n, r) {
    "use strict";

    var e = t(45),
        i = {};
    i[t(150)("toStringTag")] = "z", i + "" != "[object z]" && t(116)(Object.prototype, "toString", function toString() {
      return "[object " + e(this) + "]";
    }, !0);
  }, {
    116: 116,
    150: 150,
    45: 45
  }],
  228: [function (t, n, r) {
    var e = t(60),
        i = t(110);
    e(e.G + e.F * (parseFloat != i), {
      parseFloat: i
    });
  }, {
    110: 110,
    60: 60
  }],
  229: [function (t, n, r) {
    var e = t(60),
        i = t(111);
    e(e.G + e.F * (parseInt != i), {
      parseInt: i
    });
  }, {
    111: 111,
    60: 60
  }],
  230: [function (r, t, n) {
    "use strict";

    function SR() {}

    function ZR(t) {
      var n;
      return !(!h(t) || "function" != typeof (n = t.then)) && n;
    }

    function $R(s, r) {
      if (!s._n) {
        s._n = !0;
        var e = s._c;
        x(function () {
          for (var a = s._v, f = 1 == s._s, t = 0, n = function (t) {
            var n,
                r,
                e,
                i = f ? t.ok : t.fail,
                o = t.resolve,
                u = t.reject,
                c = t.domain;

            try {
              i ? (f || (2 == s._h && j(s), s._h = 1), !0 === i ? n = a : (c && c.enter(), n = i(a), c && (c.exit(), e = !0)), n === t.promise ? u(E("Promise-chain cycle")) : (r = ZR(n)) ? r.call(n, o, u) : o(n)) : u(a);
            } catch (t) {
              c && !e && c.exit(), u(t);
            }
          }; e.length > t;) n(e[t++]);

          s._c = [], s._n = !1, r && !s._h && R(s);
        });
      }
    }

    function cS(t) {
      var n = this;
      n._d || (n._d = !0, (n = n._w || n)._v = t, n._s = 2, n._a || (n._a = n._c.slice()), $R(n, !0));
    }

    var e,
        i,
        o,
        u,
        c = r(87),
        a = r(68),
        f = r(52),
        s = r(45),
        l = r(60),
        h = r(79),
        p = r(31),
        v = r(35),
        g = r(66),
        y = r(125),
        d = r(134).set,
        x = r(93)(),
        m = r(94),
        S = r(112),
        b = r(146),
        w = r(113),
        _ = "Promise",
        E = a.TypeError,
        O = a.process,
        I = O && O.versions,
        F = I && I.v8 || "",
        P = a[_],
        A = "process" == s(O),
        M = i = m.f,
        k = !!function () {
      try {
        var t = P.resolve(1),
            n = (t.constructor = {})[r(150)("species")] = function (t) {
          t(SR, SR);
        };

        return (A || "function" == typeof PromiseRejectionEvent) && t.then(SR) instanceof n && 0 !== F.indexOf("6.6") && -1 === b.indexOf("Chrome/66");
      } catch (t) {}
    }(),
        R = function (o) {
      d.call(a, function () {
        var t,
            n,
            r,
            e = o._v,
            i = N(o);
        if (i && (t = S(function () {
          A ? O.emit("unhandledRejection", e, o) : (n = a.onunhandledrejection) ? n({
            promise: o,
            reason: e
          }) : (r = a.console) && r.error && r.error("Unhandled promise rejection", e);
        }), o._h = A || N(o) ? 2 : 1), o._a = void 0, i && t.e) throw t.v;
      });
    },
        N = function (t) {
      return 1 !== t._h && 0 === (t._a || t._c).length;
    },
        j = function (n) {
      d.call(a, function () {
        var t;
        A ? O.emit("rejectionHandled", n) : (t = a.onrejectionhandled) && t({
          promise: n,
          reason: n._v
        });
      });
    },
        T = function (t) {
      var r,
          e = this;

      if (!e._d) {
        e._d = !0, e = e._w || e;

        try {
          if (e === t) throw E("Promise can't be resolved itself");
          (r = ZR(t)) ? x(function () {
            var n = {
              _w: e,
              _d: !1
            };

            try {
              r.call(t, f(T, n, 1), f(cS, n, 1));
            } catch (t) {
              cS.call(n, t);
            }
          }) : (e._v = t, e._s = 1, $R(e, !1));
        } catch (t) {
          cS.call({
            _w: e,
            _d: !1
          }, t);
        }
      }
    };

    k || (P = function Promise(t) {
      v(this, P, _, "_h"), p(t), e.call(this);

      try {
        t(f(T, this, 1), f(cS, this, 1));
      } catch (t) {
        cS.call(this, t);
      }
    }, (e = function Promise(t) {
      this._c = [], this._a = void 0, this._s = 0, this._d = !1, this._v = void 0, this._h = 0, this._n = !1;
    }).prototype = r(115)(P.prototype, {
      then: function then(t, n) {
        var r = M(y(this, P));
        return r.ok = "function" != typeof t || t, r.fail = "function" == typeof n && n, r.domain = A ? O.domain : void 0, this._c.push(r), this._a && this._a.push(r), this._s && $R(this, !1), r.promise;
      },
      catch: function (t) {
        return this.then(void 0, t);
      }
    }), o = function () {
      var t = new e();
      this.promise = t, this.resolve = f(T, t, 1), this.reject = f(cS, t, 1);
    }, m.f = M = function (t) {
      return t === P || t === u ? new o(t) : i(t);
    }), l(l.G + l.W + l.F * !k, {
      Promise: P
    }), r(122)(P, _), r(121)(_), u = r(50)[_], l(l.S + l.F * !k, _, {
      reject: function reject(t) {
        var n = M(this);
        return (0, n.reject)(t), n.promise;
      }
    }), l(l.S + l.F * (c || !k), _, {
      resolve: function resolve(t) {
        return w(c && this === u ? P : this, t);
      }
    }), l(l.S + l.F * !(k && r(84)(function (t) {
      P.all(t).catch(SR);
    })), _, {
      all: function all(t) {
        var u = this,
            n = M(u),
            c = n.resolve,
            a = n.reject,
            r = S(function () {
          var e = [],
              i = 0,
              o = 1;
          g(t, !1, function (t) {
            var n = i++,
                r = !1;
            e.push(void 0), o++, u.resolve(t).then(function (t) {
              r || (r = !0, e[n] = t, --o || c(e));
            }, a);
          }), --o || c(e);
        });
        return r.e && a(r.v), n.promise;
      },
      race: function race(t) {
        var n = this,
            r = M(n),
            e = r.reject,
            i = S(function () {
          g(t, !1, function (t) {
            n.resolve(t).then(r.resolve, e);
          });
        });
        return i.e && e(i.v), r.promise;
      }
    });
  }, {
    112: 112,
    113: 113,
    115: 115,
    121: 121,
    122: 122,
    125: 125,
    134: 134,
    146: 146,
    150: 150,
    31: 31,
    35: 35,
    45: 45,
    50: 50,
    52: 52,
    60: 60,
    66: 66,
    68: 68,
    79: 79,
    84: 84,
    87: 87,
    93: 93,
    94: 94
  }],
  231: [function (t, n, r) {
    var e = t(60),
        o = t(31),
        u = t(36),
        c = (t(68).Reflect || {}).apply,
        a = Function.apply;
    e(e.S + e.F * !t(62)(function () {
      c(function () {});
    }), "Reflect", {
      apply: function apply(t, n, r) {
        var e = o(t),
            i = u(r);
        return c ? c(e, n, i) : a.call(e, n, i);
      }
    });
  }, {
    31: 31,
    36: 36,
    60: 60,
    62: 62,
    68: 68
  }],
  232: [function (t, n, r) {
    var e = t(60),
        c = t(96),
        a = t(31),
        f = t(36),
        s = t(79),
        i = t(62),
        l = t(44),
        h = (t(68).Reflect || {}).construct,
        p = i(function () {
      function F() {}

      return !(h(function () {}, [], F) instanceof F);
    }),
        v = !i(function () {
      h(function () {});
    });
    e(e.S + e.F * (p || v), "Reflect", {
      construct: function construct(t, n) {
        a(t), f(n);
        var r = arguments.length < 3 ? t : a(arguments[2]);
        if (v && !p) return h(t, n, r);

        if (t == r) {
          switch (n.length) {
            case 0:
              return new t();

            case 1:
              return new t(n[0]);

            case 2:
              return new t(n[0], n[1]);

            case 3:
              return new t(n[0], n[1], n[2]);

            case 4:
              return new t(n[0], n[1], n[2], n[3]);
          }

          var e = [null];
          return e.push.apply(e, n), new (l.apply(t, e))();
        }

        var i = r.prototype,
            o = c(s(i) ? i : Object.prototype),
            u = Function.apply.call(t, o, n);
        return s(u) ? u : o;
      }
    });
  }, {
    31: 31,
    36: 36,
    44: 44,
    60: 60,
    62: 62,
    68: 68,
    79: 79,
    96: 96
  }],
  233: [function (t, n, r) {
    var e = t(97),
        i = t(60),
        o = t(36),
        u = t(141);
    i(i.S + i.F * t(62)(function () {
      Reflect.defineProperty(e.f({}, 1, {
        value: 1
      }), 1, {
        value: 2
      });
    }), "Reflect", {
      defineProperty: function defineProperty(t, n, r) {
        o(t), n = u(n, !0), o(r);

        try {
          return e.f(t, n, r), !0;
        } catch (t) {
          return !1;
        }
      }
    });
  }, {
    141: 141,
    36: 36,
    60: 60,
    62: 62,
    97: 97
  }],
  234: [function (t, n, r) {
    var e = t(60),
        i = t(99).f,
        o = t(36);
    e(e.S, "Reflect", {
      deleteProperty: function deleteProperty(t, n) {
        var r = i(o(t), n);
        return !(r && !r.configurable) && delete t[n];
      }
    });
  }, {
    36: 36,
    60: 60,
    99: 99
  }],
  235: [function (t, n, r) {
    "use strict";

    function AU(t) {
      this._t = i(t), this._i = 0;
      var n,
          r = this._k = [];

      for (n in t) r.push(n);
    }

    var e = t(60),
        i = t(36);
    t(82)(AU, "Object", function () {
      var t,
          n = this._k;

      do {
        if (this._i >= n.length) return {
          value: void 0,
          done: !0
        };
      } while (!((t = n[this._i++]) in this._t));

      return {
        value: t,
        done: !1
      };
    }), e(e.S, "Reflect", {
      enumerate: function enumerate(t) {
        return new AU(t);
      }
    });
  }, {
    36: 36,
    60: 60,
    82: 82
  }],
  236: [function (t, n, r) {
    var e = t(99),
        i = t(60),
        o = t(36);
    i(i.S, "Reflect", {
      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(t, n) {
        return e.f(o(t), n);
      }
    });
  }, {
    36: 36,
    60: 60,
    99: 99
  }],
  237: [function (t, n, r) {
    var e = t(60),
        i = t(103),
        o = t(36);
    e(e.S, "Reflect", {
      getPrototypeOf: function getPrototypeOf(t) {
        return i(o(t));
      }
    });
  }, {
    103: 103,
    36: 36,
    60: 60
  }],
  238: [function (t, n, r) {
    var o = t(99),
        u = t(103),
        c = t(69),
        e = t(60),
        a = t(79),
        f = t(36);
    e(e.S, "Reflect", {
      get: function get(t, n) {
        var r,
            e,
            i = arguments.length < 3 ? t : arguments[2];
        return f(t) === i ? t[n] : (r = o.f(t, n)) ? c(r, "value") ? r.value : void 0 !== r.get ? r.get.call(i) : void 0 : a(e = u(t)) ? get(e, n, i) : void 0;
      }
    });
  }, {
    103: 103,
    36: 36,
    60: 60,
    69: 69,
    79: 79,
    99: 99
  }],
  239: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Reflect", {
      has: function has(t, n) {
        return n in t;
      }
    });
  }, {
    60: 60
  }],
  240: [function (t, n, r) {
    var e = t(60),
        i = t(36),
        o = Object.isExtensible;
    e(e.S, "Reflect", {
      isExtensible: function isExtensible(t) {
        return i(t), !o || o(t);
      }
    });
  }, {
    36: 36,
    60: 60
  }],
  241: [function (t, n, r) {
    var e = t(60);
    e(e.S, "Reflect", {
      ownKeys: t(109)
    });
  }, {
    109: 109,
    60: 60
  }],
  242: [function (t, n, r) {
    var e = t(60),
        i = t(36),
        o = Object.preventExtensions;
    e(e.S, "Reflect", {
      preventExtensions: function preventExtensions(t) {
        i(t);

        try {
          return o && o(t), !0;
        } catch (t) {
          return !1;
        }
      }
    });
  }, {
    36: 36,
    60: 60
  }],
  243: [function (t, n, r) {
    var e = t(60),
        i = t(120);
    i && e(e.S, "Reflect", {
      setPrototypeOf: function setPrototypeOf(t, n) {
        i.check(t, n);

        try {
          return i.set(t, n), !0;
        } catch (t) {
          return !1;
        }
      }
    });
  }, {
    120: 120,
    60: 60
  }],
  244: [function (t, n, r) {
    var c = t(97),
        a = t(99),
        f = t(103),
        s = t(69),
        e = t(60),
        l = t(114),
        h = t(36),
        p = t(79);
    e(e.S, "Reflect", {
      set: function set(t, n, r) {
        var e,
            i,
            o = arguments.length < 4 ? t : arguments[3],
            u = a.f(h(t), n);

        if (!u) {
          if (p(i = f(t))) return set(i, n, r, o);
          u = l(0);
        }

        if (s(u, "value")) {
          if (!1 === u.writable || !p(o)) return !1;

          if (e = a.f(o, n)) {
            if (e.get || e.set || !1 === e.writable) return !1;
            e.value = r, c.f(o, n, e);
          } else c.f(o, n, l(0, r));

          return !0;
        }

        return void 0 !== u.set && (u.set.call(o, r), !0);
      }
    });
  }, {
    103: 103,
    114: 114,
    36: 36,
    60: 60,
    69: 69,
    79: 79,
    97: 97,
    99: 99
  }],
  245: [function (t, n, r) {
    var e = t(68),
        o = t(73),
        i = t(97).f,
        u = t(101).f,
        c = t(80),
        a = t(64),
        f = e.RegExp,
        s = f,
        l = f.prototype,
        h = /a/g,
        p = /a/g,
        v = new f(h) !== h;

    if (t(56) && (!v || t(62)(function () {
      return p[t(150)("match")] = !1, f(h) != h || f(p) == p || "/a/i" != f(h, "i");
    }))) {
      f = function RegExp(t, n) {
        var r = this instanceof f,
            e = c(t),
            i = void 0 === n;
        return !r && e && t.constructor === f && i ? t : o(v ? new s(e && !i ? t.source : t, n) : s((e = t instanceof f) ? t.source : t, e && i ? a.call(t) : n), r ? this : l, f);
      };

      function vW(n) {
        n in f || i(f, n, {
          configurable: !0,
          get: function () {
            return s[n];
          },
          set: function (t) {
            s[n] = t;
          }
        });
      }

      for (var g = u(s), y = 0; g.length > y;) vW(g[y++]);

      (l.constructor = f).prototype = l, t(116)(e, "RegExp", f);
    }

    t(121)("RegExp");
  }, {
    101: 101,
    116: 116,
    121: 121,
    150: 150,
    56: 56,
    62: 62,
    64: 64,
    68: 68,
    73: 73,
    80: 80,
    97: 97
  }],
  246: [function (t, n, r) {
    "use strict";

    var e = t(118);
    t(60)({
      target: "RegExp",
      proto: !0,
      forced: e !== /./.exec
    }, {
      exec: e
    });
  }, {
    118: 118,
    60: 60
  }],
  247: [function (t, n, r) {
    t(56) && "g" != /./g.flags && t(97).f(RegExp.prototype, "flags", {
      configurable: !0,
      get: t(64)
    });
  }, {
    56: 56,
    64: 64,
    97: 97
  }],
  248: [function (t, n, r) {
    "use strict";

    var l = t(36),
        h = t(139),
        p = t(34),
        v = t(117);
    t(63)("match", 1, function (e, i, f, s) {
      return [function match(t) {
        var n = e(this),
            r = null == t ? void 0 : t[i];
        return void 0 !== r ? r.call(t, n) : new RegExp(t)[i](String(n));
      }, function (t) {
        var n = s(f, t, this);
        if (n.done) return n.value;
        var r = l(t),
            e = String(this);
        if (!r.global) return v(r, e);

        for (var i, o = r.unicode, u = [], c = r.lastIndex = 0; null !== (i = v(r, e));) {
          var a = String(i[0]);
          "" === (u[c] = a) && (r.lastIndex = p(e, h(r.lastIndex), o)), c++;
        }

        return 0 === c ? null : u;
      }];
    });
  }, {
    117: 117,
    139: 139,
    34: 34,
    36: 36,
    63: 63
  }],
  249: [function (t, n, r) {
    "use strict";

    var _ = t(36),
        e = t(140),
        E = t(139),
        O = t(137),
        I = t(34),
        F = t(117),
        P = Math.max,
        A = Math.min,
        h = Math.floor,
        p = /\$([$&`']|\d\d?|<[^>]*>)/g,
        v = /\$([$&`']|\d\d?)/g;

    t(63)("replace", 2, function (i, o, b, w) {
      return [function replace(t, n) {
        var r = i(this),
            e = null == t ? void 0 : t[o];
        return void 0 !== e ? e.call(t, r, n) : b.call(String(r), t, n);
      }, function (t, n) {
        var r = w(b, t, this, n);
        if (r.done) return r.value;

        var e = _(t),
            i = String(this),
            o = "function" == typeof n;

        o || (n = String(n));
        var u = e.global;

        if (u) {
          var c = e.unicode;
          e.lastIndex = 0;
        }

        for (var a = [];;) {
          var f = F(e, i);
          if (null === f) break;
          if (a.push(f), !u) break;
          "" === String(f[0]) && (e.lastIndex = I(i, E(e.lastIndex), c));
        }

        for (var s, l = "", h = 0, p = 0; p < a.length; p++) {
          f = a[p];

          for (var v = String(f[0]), g = P(A(O(f.index), i.length), 0), y = [], d = 1; d < f.length; d++) y.push(void 0 === (s = f[d]) ? s : String(s));

          var x = f.groups;

          if (o) {
            var m = [v].concat(y, g, i);
            void 0 !== x && m.push(x);
            var S = String(n.apply(void 0, m));
          } else S = getSubstitution(v, i, g, y, x, n);

          h <= g && (l += i.slice(h, g) + S, h = g + v.length);
        }

        return l + i.slice(h);
      }];

      function getSubstitution(o, u, c, a, f, t) {
        var s = c + o.length,
            l = a.length,
            n = v;
        return void 0 !== f && (f = e(f), n = p), b.call(t, n, function (t, n) {
          var r;

          switch (n.charAt(0)) {
            case "$":
              return "$";

            case "&":
              return o;

            case "`":
              return u.slice(0, c);

            case "'":
              return u.slice(s);

            case "<":
              r = f[n.slice(1, -1)];
              break;

            default:
              var e = +n;
              if (0 == e) return t;

              if (l < e) {
                var i = h(e / 10);
                return 0 === i ? t : i <= l ? void 0 === a[i - 1] ? n.charAt(1) : a[i - 1] + n.charAt(1) : t;
              }

              r = a[e - 1];
          }

          return void 0 === r ? "" : r;
        });
      }
    });
  }, {
    117: 117,
    137: 137,
    139: 139,
    140: 140,
    34: 34,
    36: 36,
    63: 63
  }],
  250: [function (t, n, r) {
    "use strict";

    var a = t(36),
        f = t(119),
        s = t(117);
    t(63)("search", 1, function (e, i, u, c) {
      return [function search(t) {
        var n = e(this),
            r = null == t ? void 0 : t[i];
        return void 0 !== r ? r.call(t, n) : new RegExp(t)[i](String(n));
      }, function (t) {
        var n = c(u, t, this);
        if (n.done) return n.value;
        var r = a(t),
            e = String(this),
            i = r.lastIndex;
        f(i, 0) || (r.lastIndex = 0);
        var o = s(r, e);
        return f(r.lastIndex, i) || (r.lastIndex = i), null === o ? -1 : o.index;
      }];
    });
  }, {
    117: 117,
    119: 119,
    36: 36,
    63: 63
  }],
  251: [function (t, n, r) {
    "use strict";

    var l = t(80),
        m = t(36),
        S = t(125),
        b = t(34),
        w = t(139),
        _ = t(117),
        h = t(118),
        e = t(62),
        E = Math.min,
        p = [].push,
        u = "split",
        v = "length",
        g = "lastIndex",
        O = 4294967295,
        I = !e(function () {
      RegExp(O, "y");
    });

    t(63)("split", 2, function (i, o, y, d) {
      var x;
      return x = "c" == "abbc"[u](/(b)*/)[1] || 4 != "test"[u](/(?:)/, -1)[v] || 2 != "ab"[u](/(?:ab)*/)[v] || 4 != "."[u](/(.?)(.?)/)[v] || 1 < "."[u](/()()/)[v] || ""[u](/.?/)[v] ? function (t, n) {
        var r = String(this);
        if (void 0 === t && 0 === n) return [];
        if (!l(t)) return y.call(r, t, n);

        for (var e, i, o, u = [], c = (t.ignoreCase ? "i" : "") + (t.multiline ? "m" : "") + (t.unicode ? "u" : "") + (t.sticky ? "y" : ""), a = 0, f = void 0 === n ? O : n >>> 0, s = new RegExp(t.source, c + "g"); (e = h.call(s, r)) && !(a < (i = s[g]) && (u.push(r.slice(a, e.index)), 1 < e[v] && e.index < r[v] && p.apply(u, e.slice(1)), o = e[0][v], a = i, u[v] >= f));) s[g] === e.index && s[g]++;

        return a === r[v] ? !o && s.test("") || u.push("") : u.push(r.slice(a)), u[v] > f ? u.slice(0, f) : u;
      } : "0"[u](void 0, 0)[v] ? function (t, n) {
        return void 0 === t && 0 === n ? [] : y.call(this, t, n);
      } : y, [function split(t, n) {
        var r = i(this),
            e = null == t ? void 0 : t[o];
        return void 0 !== e ? e.call(t, r, n) : x.call(String(r), t, n);
      }, function (t, n) {
        var r = d(x, t, this, n, x !== y);
        if (r.done) return r.value;
        var e = m(t),
            i = String(this),
            o = S(e, RegExp),
            u = e.unicode,
            c = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (I ? "y" : "g"),
            a = new o(I ? e : "^(?:" + e.source + ")", c),
            f = void 0 === n ? O : n >>> 0;
        if (0 == f) return [];
        if (0 === i.length) return null === _(a, i) ? [i] : [];

        for (var s = 0, l = 0, h = []; l < i.length;) {
          a.lastIndex = I ? l : 0;

          var p,
              v = _(a, I ? i : i.slice(l));

          if (null === v || (p = E(w(a.lastIndex + (I ? 0 : l)), i.length)) === s) l = b(i, l, u);else {
            if (h.push(i.slice(s, l)), h.length === f) return h;

            for (var g = 1; g <= v.length - 1; g++) if (h.push(v[g]), h.length === f) return h;

            l = s = p;
          }
        }

        return h.push(i.slice(s)), h;
      }];
    });
  }, {
    117: 117,
    118: 118,
    125: 125,
    139: 139,
    34: 34,
    36: 36,
    62: 62,
    63: 63,
    80: 80
  }],
  252: [function (n, t, r) {
    "use strict";

    n(247);

    function PZ(t) {
      n(116)(RegExp.prototype, u, t, !0);
    }

    var e = n(36),
        i = n(64),
        o = n(56),
        u = "toString",
        c = /./[u];
    n(62)(function () {
      return "/a/b" != c.call({
        source: "a",
        flags: "b"
      });
    }) ? PZ(function toString() {
      var t = e(this);
      return "/".concat(t.source, "/", "flags" in t ? t.flags : !o && t instanceof RegExp ? i.call(t) : void 0);
    }) : c.name != u && PZ(function toString() {
      return c.call(this);
    });
  }, {
    116: 116,
    247: 247,
    36: 36,
    56: 56,
    62: 62,
    64: 64
  }],
  253: [function (t, n, r) {
    "use strict";

    var e = t(47),
        i = t(147);
    n.exports = t(49)("Set", function (t) {
      return function Set() {
        return t(this, 0 < arguments.length ? arguments[0] : void 0);
      };
    }, {
      add: function add(t) {
        return e.def(i(this, "Set"), t = 0 === t ? 0 : t, t);
      }
    }, e);
  }, {
    147: 147,
    47: 47,
    49: 49
  }],
  254: [function (t, n, r) {
    "use strict";

    t(129)("anchor", function (n) {
      return function anchor(t) {
        return n(this, "a", "name", t);
      };
    });
  }, {
    129: 129
  }],
  255: [function (t, n, r) {
    "use strict";

    t(129)("big", function (t) {
      return function big() {
        return t(this, "big", "", "");
      };
    });
  }, {
    129: 129
  }],
  256: [function (t, n, r) {
    "use strict";

    t(129)("blink", function (t) {
      return function blink() {
        return t(this, "blink", "", "");
      };
    });
  }, {
    129: 129
  }],
  257: [function (t, n, r) {
    "use strict";

    t(129)("bold", function (t) {
      return function bold() {
        return t(this, "b", "", "");
      };
    });
  }, {
    129: 129
  }],
  258: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(127)(!1);
    e(e.P, "String", {
      codePointAt: function codePointAt(t) {
        return i(this, t);
      }
    });
  }, {
    127: 127,
    60: 60
  }],
  259: [function (t, n, r) {
    "use strict";

    var e = t(60),
        u = t(139),
        c = t(128),
        a = "endsWith",
        f = ""[a];
    e(e.P + e.F * t(61)(a), "String", {
      endsWith: function endsWith(t) {
        var n = c(this, t, a),
            r = 1 < arguments.length ? arguments[1] : void 0,
            e = u(n.length),
            i = void 0 === r ? e : Math.min(u(r), e),
            o = String(t);
        return f ? f.call(n, o, i) : n.slice(i - o.length, i) === o;
      }
    });
  }, {
    128: 128,
    139: 139,
    60: 60,
    61: 61
  }],
  260: [function (t, n, r) {
    "use strict";

    t(129)("fixed", function (t) {
      return function fixed() {
        return t(this, "tt", "", "");
      };
    });
  }, {
    129: 129
  }],
  261: [function (t, n, r) {
    "use strict";

    t(129)("fontcolor", function (n) {
      return function fontcolor(t) {
        return n(this, "font", "color", t);
      };
    });
  }, {
    129: 129
  }],
  262: [function (t, n, r) {
    "use strict";

    t(129)("fontsize", function (n) {
      return function fontsize(t) {
        return n(this, "font", "size", t);
      };
    });
  }, {
    129: 129
  }],
  263: [function (t, n, r) {
    var e = t(60),
        o = t(135),
        u = String.fromCharCode,
        i = String.fromCodePoint;
    e(e.S + e.F * (!!i && 1 != i.length), "String", {
      fromCodePoint: function fromCodePoint(t) {
        for (var n, r = [], e = arguments.length, i = 0; i < e;) {
          if (n = +arguments[i++], o(n, 1114111) !== n) throw RangeError(n + " is not a valid code point");
          r.push(n < 65536 ? u(n) : u(55296 + ((n -= 65536) >> 10), n % 1024 + 56320));
        }

        return r.join("");
      }
    });
  }, {
    135: 135,
    60: 60
  }],
  264: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(128),
        o = "includes";
    e(e.P + e.F * t(61)(o), "String", {
      includes: function includes(t) {
        return !!~i(this, t, o).indexOf(t, 1 < arguments.length ? arguments[1] : void 0);
      }
    });
  }, {
    128: 128,
    60: 60,
    61: 61
  }],
  265: [function (t, n, r) {
    "use strict";

    t(129)("italics", function (t) {
      return function italics() {
        return t(this, "i", "", "");
      };
    });
  }, {
    129: 129
  }],
  266: [function (t, n, r) {
    "use strict";

    var e = t(127)(!0);
    t(83)(String, "String", function (t) {
      this._t = String(t), this._i = 0;
    }, function () {
      var t,
          n = this._t,
          r = this._i;
      return r >= n.length ? {
        value: void 0,
        done: !0
      } : (t = e(n, r), this._i += t.length, {
        value: t,
        done: !1
      });
    });
  }, {
    127: 127,
    83: 83
  }],
  267: [function (t, n, r) {
    "use strict";

    t(129)("link", function (n) {
      return function link(t) {
        return n(this, "a", "href", t);
      };
    });
  }, {
    129: 129
  }],
  268: [function (t, n, r) {
    var e = t(60),
        u = t(138),
        c = t(139);
    e(e.S, "String", {
      raw: function raw(t) {
        for (var n = u(t.raw), r = c(n.length), e = arguments.length, i = [], o = 0; o < r;) i.push(String(n[o++])), o < e && i.push(String(arguments[o]));

        return i.join("");
      }
    });
  }, {
    138: 138,
    139: 139,
    60: 60
  }],
  269: [function (t, n, r) {
    var e = t(60);
    e(e.P, "String", {
      repeat: t(131)
    });
  }, {
    131: 131,
    60: 60
  }],
  270: [function (t, n, r) {
    "use strict";

    t(129)("small", function (t) {
      return function small() {
        return t(this, "small", "", "");
      };
    });
  }, {
    129: 129
  }],
  271: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(139),
        o = t(128),
        u = "startsWith",
        c = ""[u];
    e(e.P + e.F * t(61)(u), "String", {
      startsWith: function startsWith(t) {
        var n = o(this, t, u),
            r = i(Math.min(1 < arguments.length ? arguments[1] : void 0, n.length)),
            e = String(t);
        return c ? c.call(n, e, r) : n.slice(r, r + e.length) === e;
      }
    });
  }, {
    128: 128,
    139: 139,
    60: 60,
    61: 61
  }],
  272: [function (t, n, r) {
    "use strict";

    t(129)("strike", function (t) {
      return function strike() {
        return t(this, "strike", "", "");
      };
    });
  }, {
    129: 129
  }],
  273: [function (t, n, r) {
    "use strict";

    t(129)("sub", function (t) {
      return function sub() {
        return t(this, "sub", "", "");
      };
    });
  }, {
    129: 129
  }],
  274: [function (t, n, r) {
    "use strict";

    t(129)("sup", function (t) {
      return function sup() {
        return t(this, "sup", "", "");
      };
    });
  }, {
    129: 129
  }],
  275: [function (t, n, r) {
    "use strict";

    t(132)("trim", function (t) {
      return function trim() {
        return t(this, 3);
      };
    });
  }, {
    132: 132
  }],
  276: [function (t, n, r) {
    "use strict";

    function t1(t) {
      var n = W[t] = E(N[L]);
      return n._k = t, n;
    }

    function w1(t, n) {
      x(t);

      for (var r, e = y(n = b(n)), i = 0, o = e.length; i < o;) H(t, r = e[i++], n[r]);

      return t;
    }

    function y1(t) {
      var n = U.call(this, t = w(t, !0));
      return !(this === B && u(W, t) && !u(V, t)) && (!(n || !u(this, t) || !u(W, t) || u(this, C) && this[C][t]) || n);
    }

    function z1(t, n) {
      if (t = b(t), n = w(n, !0), t !== B || !u(W, n) || u(V, n)) {
        var r = M(t, n);
        return !r || !u(W, n) || u(t, C) && t[C][n] || (r.enumerable = !0), r;
      }
    }

    function A1(t) {
      for (var n, r = R(b(t)), e = [], i = 0; r.length > i;) u(W, n = r[i++]) || n == C || n == a || e.push(n);

      return e;
    }

    function B1(t) {
      for (var n, r = t === B, e = R(r ? V : b(t)), i = [], o = 0; e.length > o;) !u(W, n = e[o++]) || r && !u(B, n) || i.push(W[n]);

      return i;
    }

    var e = t(68),
        u = t(69),
        i = t(56),
        o = t(60),
        c = t(116),
        a = t(92).KEY,
        f = t(62),
        s = t(124),
        l = t(122),
        h = t(145),
        p = t(150),
        v = t(149),
        g = t(148),
        y = t(59),
        d = t(77),
        x = t(36),
        m = t(79),
        S = t(140),
        b = t(138),
        w = t(141),
        _ = t(114),
        E = t(96),
        O = t(100),
        I = t(99),
        F = t(102),
        P = t(97),
        A = t(105),
        M = I.f,
        k = P.f,
        R = O.f,
        N = e.Symbol,
        j = e.JSON,
        T = j && j.stringify,
        L = "prototype",
        C = p("_hidden"),
        G = p("toPrimitive"),
        U = {}.propertyIsEnumerable,
        D = s("symbol-registry"),
        W = s("symbols"),
        V = s("op-symbols"),
        B = Object[L],
        q = "function" == typeof N && !!F.f,
        z = e.QObject,
        $ = !z || !z[L] || !z[L].findChild,
        Y = i && f(function () {
      return 7 != E(k({}, "a", {
        get: function () {
          return k(this, "a", {
            value: 7
          }).a;
        }
      })).a;
    }) ? function (t, n, r) {
      var e = M(B, n);
      e && delete B[n], k(t, n, r), e && t !== B && k(B, n, e);
    } : k,
        J = q && "symbol" == typeof N.iterator ? function (t) {
      return "symbol" == typeof t;
    } : function (t) {
      return t instanceof N;
    },
        H = function defineProperty(t, n, r) {
      return t === B && H(V, n, r), x(t), n = w(n, !0), x(r), u(W, n) ? (r.enumerable ? (u(t, C) && t[C][n] && (t[C][n] = !1), r = E(r, {
        enumerable: _(0, !1)
      })) : (u(t, C) || k(t, C, _(1, {})), t[C][n] = !0), Y(t, n, r)) : k(t, n, r);
    };

    q || (c((N = function Symbol() {
      if (this instanceof N) throw TypeError("Symbol is not a constructor!");

      var n = h(0 < arguments.length ? arguments[0] : void 0),
          r = function (t) {
        this === B && r.call(V, t), u(this, C) && u(this[C], n) && (this[C][n] = !1), Y(this, n, _(1, t));
      };

      return i && $ && Y(B, n, {
        configurable: !0,
        set: r
      }), t1(n);
    })[L], "toString", function toString() {
      return this._k;
    }), I.f = z1, P.f = H, t(101).f = O.f = A1, t(106).f = y1, F.f = B1, i && !t(87) && c(B, "propertyIsEnumerable", y1, !0), v.f = function (t) {
      return t1(p(t));
    }), o(o.G + o.W + o.F * !q, {
      Symbol: N
    });

    for (var Q = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), K = 0; Q.length > K;) p(Q[K++]);

    for (var Z = A(p.store), X = 0; Z.length > X;) g(Z[X++]);

    o(o.S + o.F * !q, "Symbol", {
      for: function (t) {
        return u(D, t += "") ? D[t] : D[t] = N(t);
      },
      keyFor: function keyFor(t) {
        if (!J(t)) throw TypeError(t + " is not a symbol!");

        for (var n in D) if (D[n] === t) return n;
      },
      useSetter: function () {
        $ = !0;
      },
      useSimple: function () {
        $ = !1;
      }
    }), o(o.S + o.F * !q, "Object", {
      create: function create(t, n) {
        return void 0 === n ? E(t) : w1(E(t), n);
      },
      defineProperty: H,
      defineProperties: w1,
      getOwnPropertyDescriptor: z1,
      getOwnPropertyNames: A1,
      getOwnPropertySymbols: B1
    });
    var tt = f(function () {
      F.f(1);
    });
    o(o.S + o.F * tt, "Object", {
      getOwnPropertySymbols: function getOwnPropertySymbols(t) {
        return F.f(S(t));
      }
    }), j && o(o.S + o.F * (!q || f(function () {
      var t = N();
      return "[null]" != T([t]) || "{}" != T({
        a: t
      }) || "{}" != T(Object(t));
    })), "JSON", {
      stringify: function stringify(t) {
        for (var n, r, e = [t], i = 1; i < arguments.length;) e.push(arguments[i++]);

        if (r = n = e[1], (m(n) || void 0 !== t) && !J(t)) return d(n) || (n = function (t, n) {
          if ("function" == typeof r && (n = r.call(this, t, n)), !J(n)) return n;
        }), e[1] = n, T.apply(j, e);
      }
    }), N[L][G] || t(70)(N[L], G, N[L].valueOf), l(N, "Symbol"), l(Math, "Math", !0), l(e.JSON, "JSON", !0);
  }, {
    100: 100,
    101: 101,
    102: 102,
    105: 105,
    106: 106,
    114: 114,
    116: 116,
    122: 122,
    124: 124,
    138: 138,
    140: 140,
    141: 141,
    145: 145,
    148: 148,
    149: 149,
    150: 150,
    36: 36,
    56: 56,
    59: 59,
    60: 60,
    62: 62,
    68: 68,
    69: 69,
    70: 70,
    77: 77,
    79: 79,
    87: 87,
    92: 92,
    96: 96,
    97: 97,
    99: 99
  }],
  277: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(144),
        o = t(143),
        f = t(36),
        s = t(135),
        l = t(139),
        u = t(79),
        c = t(68).ArrayBuffer,
        h = t(125),
        p = o.ArrayBuffer,
        v = o.DataView,
        a = i.ABV && c.isView,
        g = p.prototype.slice,
        y = i.VIEW,
        d = "ArrayBuffer";
    e(e.G + e.W + e.F * (c !== p), {
      ArrayBuffer: p
    }), e(e.S + e.F * !i.CONSTR, d, {
      isView: function isView(t) {
        return a && a(t) || u(t) && y in t;
      }
    }), e(e.P + e.U + e.F * t(62)(function () {
      return !new p(2).slice(1, void 0).byteLength;
    }), d, {
      slice: function slice(t, n) {
        if (void 0 !== g && void 0 === n) return g.call(f(this), t);

        for (var r = f(this).byteLength, e = s(t, r), i = s(void 0 === n ? r : n, r), o = new (h(this, p))(l(i - e)), u = new v(this), c = new v(o), a = 0; e < i;) c.setUint8(a++, u.getUint8(e++));

        return o;
      }
    }), t(121)(d);
  }, {
    121: 121,
    125: 125,
    135: 135,
    139: 139,
    143: 143,
    144: 144,
    36: 36,
    60: 60,
    62: 62,
    68: 68,
    79: 79
  }],
  278: [function (t, n, r) {
    var e = t(60);
    e(e.G + e.W + e.F * !t(144).ABV, {
      DataView: t(143).DataView
    });
  }, {
    143: 143,
    144: 144,
    60: 60
  }],
  279: [function (t, n, r) {
    t(142)("Float32", 4, function (e) {
      return function Float32Array(t, n, r) {
        return e(this, t, n, r);
      };
    });
  }, {
    142: 142
  }],
  280: [function (t, n, r) {
    t(142)("Float64", 8, function (e) {
      return function Float64Array(t, n, r) {
        return e(this, t, n, r);
      };
    });
  }, {
    142: 142
  }],
  281: [function (t, n, r) {
    t(142)("Int16", 2, function (e) {
      return function Int16Array(t, n, r) {
        return e(this, t, n, r);
      };
    });
  }, {
    142: 142
  }],
  282: [function (t, n, r) {
    t(142)("Int32", 4, function (e) {
      return function Int32Array(t, n, r) {
        return e(this, t, n, r);
      };
    });
  }, {
    142: 142
  }],
  283: [function (t, n, r) {
    t(142)("Int8", 1, function (e) {
      return function Int8Array(t, n, r) {
        return e(this, t, n, r);
      };
    });
  }, {
    142: 142
  }],
  284: [function (t, n, r) {
    t(142)("Uint16", 2, function (e) {
      return function Uint16Array(t, n, r) {
        return e(this, t, n, r);
      };
    });
  }, {
    142: 142
  }],
  285: [function (t, n, r) {
    t(142)("Uint32", 4, function (e) {
      return function Uint32Array(t, n, r) {
        return e(this, t, n, r);
      };
    });
  }, {
    142: 142
  }],
  286: [function (t, n, r) {
    t(142)("Uint8", 1, function (e) {
      return function Uint8Array(t, n, r) {
        return e(this, t, n, r);
      };
    });
  }, {
    142: 142
  }],
  287: [function (t, n, r) {
    t(142)("Uint8", 1, function (e) {
      return function Uint8ClampedArray(t, n, r) {
        return e(this, t, n, r);
      };
    }, !0);
  }, {
    142: 142
  }],
  288: [function (t, n, r) {
    "use strict";

    function J4(t) {
      return function WeakMap() {
        return t(this, 0 < arguments.length ? arguments[0] : void 0);
      };
    }

    var o,
        e = t(68),
        i = t(40)(0),
        u = t(116),
        c = t(92),
        a = t(95),
        f = t(48),
        s = t(79),
        l = t(147),
        h = t(147),
        p = !e.ActiveXObject && "ActiveXObject" in e,
        v = "WeakMap",
        g = c.getWeak,
        y = Object.isExtensible,
        d = f.ufstore,
        x = {
      get: function get(t) {
        if (s(t)) {
          var n = g(t);
          return !0 === n ? d(l(this, v)).get(t) : n ? n[this._i] : void 0;
        }
      },
      set: function set(t, n) {
        return f.def(l(this, v), t, n);
      }
    },
        m = n.exports = t(49)(v, J4, x, f, !0, !0);
    h && p && (a((o = f.getConstructor(J4, v)).prototype, x), c.NEED = !0, i(["delete", "has", "get", "set"], function (e) {
      var t = m.prototype,
          i = t[e];
      u(t, e, function (t, n) {
        if (!s(t) || y(t)) return i.call(this, t, n);
        this._f || (this._f = new o());

        var r = this._f[e](t, n);

        return "set" == e ? this : r;
      });
    }));
  }, {
    116: 116,
    147: 147,
    40: 40,
    48: 48,
    49: 49,
    68: 68,
    79: 79,
    92: 92,
    95: 95
  }],
  289: [function (t, n, r) {
    "use strict";

    var e = t(48),
        i = t(147),
        o = "WeakSet";
    t(49)(o, function (t) {
      return function WeakSet() {
        return t(this, 0 < arguments.length ? arguments[0] : void 0);
      };
    }, {
      add: function add(t) {
        return e.def(i(this, o), t, !0);
      }
    }, e, !1, !0);
  }, {
    147: 147,
    48: 48,
    49: 49
  }],
  290: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(65),
        o = t(140),
        u = t(139),
        c = t(31),
        a = t(43);
    e(e.P, "Array", {
      flatMap: function flatMap(t) {
        var n,
            r,
            e = o(this);
        return c(t), n = u(e.length), r = a(e, 0), i(r, e, e, n, 0, 1, t, arguments[1]), r;
      }
    }), t(33)("flatMap");
  }, {
    139: 139,
    140: 140,
    31: 31,
    33: 33,
    43: 43,
    60: 60,
    65: 65
  }],
  291: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(39)(!0);
    e(e.P, "Array", {
      includes: function includes(t) {
        return i(this, t, 1 < arguments.length ? arguments[1] : void 0);
      }
    }), t(33)("includes");
  }, {
    33: 33,
    39: 39,
    60: 60
  }],
  292: [function (t, n, r) {
    var e = t(60),
        i = t(108)(!0);
    e(e.S, "Object", {
      entries: function entries(t) {
        return i(t);
      }
    });
  }, {
    108: 108,
    60: 60
  }],
  293: [function (t, n, r) {
    var e = t(60),
        a = t(109),
        f = t(138),
        s = t(99),
        l = t(51);
    e(e.S, "Object", {
      getOwnPropertyDescriptors: function getOwnPropertyDescriptors(t) {
        for (var n, r, e = f(t), i = s.f, o = a(e), u = {}, c = 0; o.length > c;) void 0 !== (r = i(e, n = o[c++])) && l(u, n, r);

        return u;
      }
    });
  }, {
    109: 109,
    138: 138,
    51: 51,
    60: 60,
    99: 99
  }],
  294: [function (t, n, r) {
    var e = t(60),
        i = t(108)(!1);
    e(e.S, "Object", {
      values: function values(t) {
        return i(t);
      }
    });
  }, {
    108: 108,
    60: 60
  }],
  295: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(50),
        o = t(68),
        u = t(125),
        c = t(113);
    e(e.P + e.R, "Promise", {
      finally: function (n) {
        var r = u(this, i.Promise || o.Promise),
            t = "function" == typeof n;
        return this.then(t ? function (t) {
          return c(r, n()).then(function () {
            return t;
          });
        } : n, t ? function (t) {
          return c(r, n()).then(function () {
            throw t;
          });
        } : n);
      }
    });
  }, {
    113: 113,
    125: 125,
    50: 50,
    60: 60,
    68: 68
  }],
  296: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(130),
        o = t(146),
        u = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);
    e(e.P + e.F * u, "String", {
      padEnd: function padEnd(t) {
        return i(this, t, 1 < arguments.length ? arguments[1] : void 0, !1);
      }
    });
  }, {
    130: 130,
    146: 146,
    60: 60
  }],
  297: [function (t, n, r) {
    "use strict";

    var e = t(60),
        i = t(130),
        o = t(146),
        u = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);
    e(e.P + e.F * u, "String", {
      padStart: function padStart(t) {
        return i(this, t, 1 < arguments.length ? arguments[1] : void 0, !0);
      }
    });
  }, {
    130: 130,
    146: 146,
    60: 60
  }],
  298: [function (t, n, r) {
    "use strict";

    t(132)("trimLeft", function (t) {
      return function trimLeft() {
        return t(this, 1);
      };
    }, "trimStart");
  }, {
    132: 132
  }],
  299: [function (t, n, r) {
    "use strict";

    t(132)("trimRight", function (t) {
      return function trimRight() {
        return t(this, 2);
      };
    }, "trimEnd");
  }, {
    132: 132
  }],
  300: [function (t, n, r) {
    t(148)("asyncIterator");
  }, {
    148: 148
  }],
  301: [function (t, n, r) {
    for (var e = t(162), i = t(105), o = t(116), u = t(68), c = t(70), a = t(86), f = t(150), s = f("iterator"), l = f("toStringTag"), h = a.Array, p = {
      CSSRuleList: !0,
      CSSStyleDeclaration: !1,
      CSSValueList: !1,
      ClientRectList: !1,
      DOMRectList: !1,
      DOMStringList: !1,
      DOMTokenList: !0,
      DataTransferItemList: !1,
      FileList: !1,
      HTMLAllCollection: !1,
      HTMLCollection: !1,
      HTMLFormElement: !1,
      HTMLSelectElement: !1,
      MediaList: !0,
      MimeTypeArray: !1,
      NamedNodeMap: !1,
      NodeList: !0,
      PaintRequestList: !1,
      Plugin: !1,
      PluginArray: !1,
      SVGLengthList: !1,
      SVGNumberList: !1,
      SVGPathSegList: !1,
      SVGPointList: !1,
      SVGStringList: !1,
      SVGTransformList: !1,
      SourceBufferList: !1,
      StyleSheetList: !0,
      TextTrackCueList: !1,
      TextTrackList: !1,
      TouchList: !1
    }, v = i(p), g = 0; g < v.length; g++) {
      var y,
          d = v[g],
          x = p[d],
          m = u[d],
          S = m && m.prototype;
      if (S && (S[s] || c(S, s, h), S[l] || c(S, l, d), a[d] = h, x)) for (y in e) S[y] || o(S, y, e[y], !0);
    }
  }, {
    105: 105,
    116: 116,
    150: 150,
    162: 162,
    68: 68,
    70: 70,
    86: 86
  }],
  302: [function (t, n, r) {
    var e = t(60),
        i = t(134);
    e(e.G + e.B, {
      setImmediate: i.set,
      clearImmediate: i.clear
    });
  }, {
    134: 134,
    60: 60
  }],
  303: [function (t, n, r) {
    function q7(i) {
      return function (t, n) {
        var r = 2 < arguments.length,
            e = r && u.call(arguments, 2);
        return i(r ? function () {
          ("function" == typeof t ? t : Function(t)).apply(this, e);
        } : t, n);
      };
    }

    var e = t(68),
        i = t(60),
        o = t(146),
        u = [].slice,
        c = /MSIE .\./.test(o);
    i(i.G + i.B + i.F * c, {
      setTimeout: q7(e.setTimeout),
      setInterval: q7(e.setInterval)
    });
  }, {
    146: 146,
    60: 60,
    68: 68
  }],
  304: [function (t, n, r) {
    t(303), t(302), t(301), n.exports = t(50);
  }, {
    301: 301,
    302: 302,
    303: 303,
    50: 50
  }],
  305: [function (t, n, r) {
    var e = function (u) {
      "use strict";

      var c,
          t = Object.prototype,
          f = t.hasOwnProperty,
          n = "function" == typeof Symbol ? Symbol : {},
          i = n.iterator || "@@iterator",
          r = n.asyncIterator || "@@asyncIterator",
          e = n.toStringTag || "@@toStringTag";

      function wrap(t, n, r, e) {
        var i = n && n.prototype instanceof Generator ? n : Generator,
            o = Object.create(i.prototype),
            u = new Context(e || []);
        return o._invoke = function makeInvokeMethod(o, u, c) {
          var a = s;
          return function invoke(t, n) {
            if (a === h) throw new Error("Generator is already running");

            if (a === p) {
              if ("throw" === t) throw n;
              return doneResult();
            }

            for (c.method = t, c.arg = n;;) {
              var r = c.delegate;

              if (r) {
                var e = maybeInvokeDelegate(r, c);

                if (e) {
                  if (e === v) continue;
                  return e;
                }
              }

              if ("next" === c.method) c.sent = c._sent = c.arg;else if ("throw" === c.method) {
                if (a === s) throw a = p, c.arg;
                c.dispatchException(c.arg);
              } else "return" === c.method && c.abrupt("return", c.arg);
              a = h;
              var i = tryCatch(o, u, c);

              if ("normal" === i.type) {
                if (a = c.done ? p : l, i.arg === v) continue;
                return {
                  value: i.arg,
                  done: c.done
                };
              }

              "throw" === i.type && (a = p, c.method = "throw", c.arg = i.arg);
            }
          };
        }(t, r, u), o;
      }

      function tryCatch(t, n, r) {
        try {
          return {
            type: "normal",
            arg: t.call(n, r)
          };
        } catch (t) {
          return {
            type: "throw",
            arg: t
          };
        }
      }

      u.wrap = wrap;
      var s = "suspendedStart",
          l = "suspendedYield",
          h = "executing",
          p = "completed",
          v = {};

      function Generator() {}

      function GeneratorFunction() {}

      function GeneratorFunctionPrototype() {}

      var o = {};

      o[i] = function () {
        return this;
      };

      var a = Object.getPrototypeOf,
          g = a && a(a(values([])));
      g && g !== t && f.call(g, i) && (o = g);
      var y = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(o);

      function defineIteratorMethods(t) {
        ["next", "throw", "return"].forEach(function (n) {
          t[n] = function (t) {
            return this._invoke(n, t);
          };
        });
      }

      function AsyncIterator(c, a) {
        var t;

        this._invoke = function enqueue(r, e) {
          function callInvokeWithMethodAndArg() {
            return new a(function (t, n) {
              !function invoke(t, n, r, e) {
                var i = tryCatch(c[t], c, n);

                if ("throw" !== i.type) {
                  var o = i.arg,
                      u = o.value;
                  return u && "object" == typeof u && f.call(u, "__await") ? a.resolve(u.__await).then(function (t) {
                    invoke("next", t, r, e);
                  }, function (t) {
                    invoke("throw", t, r, e);
                  }) : a.resolve(u).then(function (t) {
                    o.value = t, r(o);
                  }, function (t) {
                    return invoke("throw", t, r, e);
                  });
                }

                e(i.arg);
              }(r, e, t, n);
            });
          }

          return t = t ? t.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        };
      }

      function maybeInvokeDelegate(t, n) {
        var r = t.iterator[n.method];

        if (r === c) {
          if (n.delegate = null, "throw" === n.method) {
            if (t.iterator.return && (n.method = "return", n.arg = c, maybeInvokeDelegate(t, n), "throw" === n.method)) return v;
            n.method = "throw", n.arg = new TypeError("The iterator does not provide a 'throw' method");
          }

          return v;
        }

        var e = tryCatch(r, t.iterator, n.arg);
        if ("throw" === e.type) return n.method = "throw", n.arg = e.arg, n.delegate = null, v;
        var i = e.arg;
        return i ? i.done ? (n[t.resultName] = i.value, n.next = t.nextLoc, "return" !== n.method && (n.method = "next", n.arg = c), n.delegate = null, v) : i : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), n.delegate = null, v);
      }

      function pushTryEntry(t) {
        var n = {
          tryLoc: t[0]
        };
        1 in t && (n.catchLoc = t[1]), 2 in t && (n.finallyLoc = t[2], n.afterLoc = t[3]), this.tryEntries.push(n);
      }

      function resetTryEntry(t) {
        var n = t.completion || {};
        n.type = "normal", delete n.arg, t.completion = n;
      }

      function Context(t) {
        this.tryEntries = [{
          tryLoc: "root"
        }], t.forEach(pushTryEntry, this), this.reset(!0);
      }

      function values(t) {
        if (t) {
          var n = t[i];
          if (n) return n.call(t);
          if ("function" == typeof t.next) return t;

          if (!isNaN(t.length)) {
            var r = -1,
                e = function next() {
              for (; ++r < t.length;) if (f.call(t, r)) return next.value = t[r], next.done = !1, next;

              return next.value = c, next.done = !0, next;
            };

            return e.next = e;
          }
        }

        return {
          next: doneResult
        };
      }

      function doneResult() {
        return {
          value: c,
          done: !0
        };
      }

      return GeneratorFunction.prototype = y.constructor = GeneratorFunctionPrototype, GeneratorFunctionPrototype.constructor = GeneratorFunction, GeneratorFunctionPrototype[e] = GeneratorFunction.displayName = "GeneratorFunction", u.isGeneratorFunction = function (t) {
        var n = "function" == typeof t && t.constructor;
        return !!n && (n === GeneratorFunction || "GeneratorFunction" === (n.displayName || n.name));
      }, u.mark = function (t) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, e in t || (t[e] = "GeneratorFunction")), t.prototype = Object.create(y), t;
      }, u.awrap = function (t) {
        return {
          __await: t
        };
      }, defineIteratorMethods(AsyncIterator.prototype), AsyncIterator.prototype[r] = function () {
        return this;
      }, u.AsyncIterator = AsyncIterator, u.async = function (t, n, r, e, i) {
        void 0 === i && (i = Promise);
        var o = new AsyncIterator(wrap(t, n, r, e), i);
        return u.isGeneratorFunction(n) ? o : o.next().then(function (t) {
          return t.done ? t.value : o.next();
        });
      }, defineIteratorMethods(y), y[e] = "Generator", y[i] = function () {
        return this;
      }, y.toString = function () {
        return "[object Generator]";
      }, u.keys = function (n) {
        var r = [];

        for (var t in n) r.push(t);

        return r.reverse(), function next() {
          for (; r.length;) {
            var t = r.pop();
            if (t in n) return next.value = t, next.done = !1, next;
          }

          return next.done = !0, next;
        };
      }, u.values = values, Context.prototype = {
        constructor: Context,
        reset: function (t) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = c, this.done = !1, this.delegate = null, this.method = "next", this.arg = c, this.tryEntries.forEach(resetTryEntry), !t) for (var n in this) "t" === n.charAt(0) && f.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = c);
        },
        stop: function () {
          this.done = !0;
          var t = this.tryEntries[0].completion;
          if ("throw" === t.type) throw t.arg;
          return this.rval;
        },
        dispatchException: function (r) {
          if (this.done) throw r;
          var e = this;

          function handle(t, n) {
            return i.type = "throw", i.arg = r, e.next = t, n && (e.method = "next", e.arg = c), !!n;
          }

          for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
            var n = this.tryEntries[t],
                i = n.completion;
            if ("root" === n.tryLoc) return handle("end");

            if (n.tryLoc <= this.prev) {
              var o = f.call(n, "catchLoc"),
                  u = f.call(n, "finallyLoc");

              if (o && u) {
                if (this.prev < n.catchLoc) return handle(n.catchLoc, !0);
                if (this.prev < n.finallyLoc) return handle(n.finallyLoc);
              } else if (o) {
                if (this.prev < n.catchLoc) return handle(n.catchLoc, !0);
              } else {
                if (!u) throw new Error("try statement without catch or finally");
                if (this.prev < n.finallyLoc) return handle(n.finallyLoc);
              }
            }
          }
        },
        abrupt: function (t, n) {
          for (var r = this.tryEntries.length - 1; 0 <= r; --r) {
            var e = this.tryEntries[r];

            if (e.tryLoc <= this.prev && f.call(e, "finallyLoc") && this.prev < e.finallyLoc) {
              var i = e;
              break;
            }
          }

          i && ("break" === t || "continue" === t) && i.tryLoc <= n && n <= i.finallyLoc && (i = null);
          var o = i ? i.completion : {};
          return o.type = t, o.arg = n, i ? (this.method = "next", this.next = i.finallyLoc, v) : this.complete(o);
        },
        complete: function (t, n) {
          if ("throw" === t.type) throw t.arg;
          return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && n && (this.next = n), v;
        },
        finish: function (t) {
          for (var n = this.tryEntries.length - 1; 0 <= n; --n) {
            var r = this.tryEntries[n];
            if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), v;
          }
        },
        catch: function (t) {
          for (var n = this.tryEntries.length - 1; 0 <= n; --n) {
            var r = this.tryEntries[n];

            if (r.tryLoc === t) {
              var e = r.completion;

              if ("throw" === e.type) {
                var i = e.arg;
                resetTryEntry(r);
              }

              return i;
            }
          }

          throw new Error("illegal catch attempt");
        },
        delegateYield: function (t, n, r) {
          return this.delegate = {
            iterator: values(t),
            resultName: n,
            nextLoc: r
          }, "next" === this.method && (this.arg = c), v;
        }
      }, u;
    }("object" == typeof n ? n.exports : {});

    try {
      regeneratorRuntime = e;
    } catch (t) {
      Function("r", "regeneratorRuntime = r")(e);
    }
  }, {}],
  306: [function (t, n, r) {
    "use strict";

    t(307);

    var e = function _interopRequireDefault(t) {
      return t && t.__esModule ? t : {
        default: t
      };
    }(t(13));

    e.default._babelPolyfill && "undefined" != typeof console && console.warn && console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."), e.default._babelPolyfill = !0;
  }, {
    13: 13,
    307: 307
  }],
  307: [function (t, n, r) {
    "use strict";

    t(1), t(3), t(2), t(9), t(8), t(11), t(10), t(12), t(5), t(6), t(4), t(7), t(304), t(305);
  }, {
    1: 1,
    10: 10,
    11: 11,
    12: 12,
    2: 2,
    3: 3,
    304: 304,
    305: 305,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9
  }]
}, {}, [306]);
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */
(function (global, factory) {
  "use strict";

  if ((typeof module === "undefined" ? "undefined" : _typeof(module)) === "object" && _typeof(module.exports) === "object") {
    // For CommonJS and CommonJS-like environments where a proper `window`
    // is present, execute the factory and get jQuery.
    // For environments that do not have a `window` with a `document`
    // (such as Node.js), expose a factory as module.exports.
    // This accentuates the need for the creation of a real `window`.
    // e.g. var jQuery = require("jquery")(window);
    // See ticket #14549 for more info.
    module.exports = global.document ? factory(global, true) : function (w) {
      if (!w.document) {
        throw new Error("jQuery requires a window with a document");
      }

      return factory(w);
    };
  } else {
    factory(global);
  } // Pass this if window is not defined yet

})(typeof window !== "undefined" ? window : void 0, function (window, noGlobal) {
  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
  // enough that all such attempts are guarded in a try block.
  "use strict";

  var arr = [];
  var getProto = Object.getPrototypeOf;
  var _slice = arr.slice;
  var flat = arr.flat ? function (array) {
    return arr.flat.call(array);
  } : function (array) {
    return arr.concat.apply([], array);
  };
  var push = arr.push;
  var indexOf = arr.indexOf;
  var class2type = {};
  var toString = class2type.toString;
  var hasOwn = class2type.hasOwnProperty;
  var fnToString = hasOwn.toString;
  var ObjectFunctionString = fnToString.call(Object);
  var support = {};

  var isFunction = function isFunction(obj) {
    // Support: Chrome <=57, Firefox <=52
    // In some browsers, typeof returns "function" for HTML <object> elements
    // (i.e., `typeof document.createElement( "object" ) === "function"`).
    // We don't want to classify *any* DOM node as a function.
    return typeof obj === "function" && typeof obj.nodeType !== "number";
  };

  var isWindow = function isWindow(obj) {
    return obj != null && obj === obj.window;
  };

  var document = window.document;
  var preservedScriptAttributes = {
    type: true,
    src: true,
    nonce: true,
    noModule: true
  };

  function DOMEval(code, node, doc) {
    doc = doc || document;
    var i,
        val,
        script = doc.createElement("script");
    script.text = code;

    if (node) {
      for (i in preservedScriptAttributes) {
        // Support: Firefox 64+, Edge 18+
        // Some browsers don't support the "nonce" property on scripts.
        // On the other hand, just using `getAttribute` is not enough as
        // the `nonce` attribute is reset to an empty string whenever it
        // becomes browsing-context connected.
        // See https://github.com/whatwg/html/issues/2369
        // See https://html.spec.whatwg.org/#nonce-attributes
        // The `node.getAttribute` check was added for the sake of
        // `jQuery.globalEval` so that it can fake a nonce-containing node
        // via an object.
        val = node[i] || node.getAttribute && node.getAttribute(i);

        if (val) {
          script.setAttribute(i, val);
        }
      }
    }

    doc.head.appendChild(script).parentNode.removeChild(script);
  }

  function toType(obj) {
    if (obj == null) {
      return obj + "";
    } // Support: Android <=2.3 only (functionish RegExp)


    return _typeof(obj) === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : _typeof(obj);
  }
  /* global Symbol */
  // Defining this global in .eslintrc.json would create a danger of using the global
  // unguarded in another place, it seems safer to define global only for this module


  var version = "3.5.1",
      // Define a local copy of jQuery
  jQuery = function jQuery(selector, context) {
    // The jQuery object is actually just the init constructor 'enhanced'
    // Need init if jQuery is called (just allow error to be thrown if not included)
    return new jQuery.fn.init(selector, context);
  };

  jQuery.fn = jQuery.prototype = {
    // The current version of jQuery being used
    jquery: version,
    constructor: jQuery,
    // The default length of a jQuery object is 0
    length: 0,
    toArray: function toArray() {
      return _slice.call(this);
    },
    // Get the Nth element in the matched element set OR
    // Get the whole matched element set as a clean array
    get: function get(num) {
      // Return all the elements in a clean array
      if (num == null) {
        return _slice.call(this);
      } // Return just the one element from the set


      return num < 0 ? this[num + this.length] : this[num];
    },
    // Take an array of elements and push it onto the stack
    // (returning the new matched element set)
    pushStack: function pushStack(elems) {
      // Build a new jQuery matched element set
      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)

      ret.prevObject = this; // Return the newly-formed element set

      return ret;
    },
    // Execute a callback for every element in the matched set.
    each: function each(callback) {
      return jQuery.each(this, callback);
    },
    map: function map(callback) {
      return this.pushStack(jQuery.map(this, function (elem, i) {
        return callback.call(elem, i, elem);
      }));
    },
    slice: function slice() {
      return this.pushStack(_slice.apply(this, arguments));
    },
    first: function first() {
      return this.eq(0);
    },
    last: function last() {
      return this.eq(-1);
    },
    even: function even() {
      return this.pushStack(jQuery.grep(this, function (_elem, i) {
        return (i + 1) % 2;
      }));
    },
    odd: function odd() {
      return this.pushStack(jQuery.grep(this, function (_elem, i) {
        return i % 2;
      }));
    },
    eq: function eq(i) {
      var len = this.length,
          j = +i + (i < 0 ? len : 0);
      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
    },
    end: function end() {
      return this.prevObject || this.constructor();
    },
    // For internal use only.
    // Behaves like an Array's method, not like a jQuery method.
    push: push,
    sort: arr.sort,
    splice: arr.splice
  };

  jQuery.extend = jQuery.fn.extend = function () {
    var options,
        name,
        src,
        copy,
        copyIsArray,
        clone,
        target = arguments[0] || {},
        i = 1,
        length = arguments.length,
        deep = false; // Handle a deep copy situation

    if (typeof target === "boolean") {
      deep = target; // Skip the boolean and the target

      target = arguments[i] || {};
      i++;
    } // Handle case when target is a string or something (possible in deep copy)


    if (_typeof(target) !== "object" && !isFunction(target)) {
      target = {};
    } // Extend jQuery itself if only one argument is passed


    if (i === length) {
      target = this;
      i--;
    }

    for (; i < length; i++) {
      // Only deal with non-null/undefined values
      if ((options = arguments[i]) != null) {
        // Extend the base object
        for (name in options) {
          copy = options[name]; // Prevent Object.prototype pollution
          // Prevent never-ending loop

          if (name === "__proto__" || target === copy) {
            continue;
          } // Recurse if we're merging plain objects or arrays


          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
            src = target[name]; // Ensure proper type for the source value

            if (copyIsArray && !Array.isArray(src)) {
              clone = [];
            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {
              clone = {};
            } else {
              clone = src;
            }

            copyIsArray = false; // Never move original objects, clone them

            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values
          } else if (copy !== undefined) {
            target[name] = copy;
          }
        }
      }
    } // Return the modified object


    return target;
  };

  jQuery.extend({
    // Unique for each copy of jQuery on the page
    expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
    // Assume jQuery is ready without the ready module
    isReady: true,
    error: function error(msg) {
      throw new Error(msg);
    },
    noop: function noop() {},
    isPlainObject: function isPlainObject(obj) {
      var proto, Ctor; // Detect obvious negatives
      // Use toString instead of jQuery.type to catch host objects

      if (!obj || toString.call(obj) !== "[object Object]") {
        return false;
      }

      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain

      if (!proto) {
        return true;
      } // Objects with prototype are plain iff they were constructed by a global Object function


      Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
      return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
    },
    isEmptyObject: function isEmptyObject(obj) {
      var name;

      for (name in obj) {
        return false;
      }

      return true;
    },
    // Evaluates a script in a provided context; falls back to the global one
    // if not specified.
    globalEval: function globalEval(code, options, doc) {
      DOMEval(code, {
        nonce: options && options.nonce
      }, doc);
    },
    each: function each(obj, callback) {
      var length,
          i = 0;

      if (isArrayLike(obj)) {
        length = obj.length;

        for (; i < length; i++) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      } else {
        for (i in obj) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      }

      return obj;
    },
    // results is for internal usage only
    makeArray: function makeArray(arr, results) {
      var ret = results || [];

      if (arr != null) {
        if (isArrayLike(Object(arr))) {
          jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
        } else {
          push.call(ret, arr);
        }
      }

      return ret;
    },
    inArray: function inArray(elem, arr, i) {
      return arr == null ? -1 : indexOf.call(arr, elem, i);
    },
    // Support: Android <=4.0 only, PhantomJS 1 only
    // push.apply(_, arraylike) throws on ancient WebKit
    merge: function merge(first, second) {
      var len = +second.length,
          j = 0,
          i = first.length;

      for (; j < len; j++) {
        first[i++] = second[j];
      }

      first.length = i;
      return first;
    },
    grep: function grep(elems, callback, invert) {
      var callbackInverse,
          matches = [],
          i = 0,
          length = elems.length,
          callbackExpect = !invert; // Go through the array, only saving the items
      // that pass the validator function

      for (; i < length; i++) {
        callbackInverse = !callback(elems[i], i);

        if (callbackInverse !== callbackExpect) {
          matches.push(elems[i]);
        }
      }

      return matches;
    },
    // arg is for internal usage only
    map: function map(elems, callback, arg) {
      var length,
          value,
          i = 0,
          ret = []; // Go through the array, translating each of the items to their new values

      if (isArrayLike(elems)) {
        length = elems.length;

        for (; i < length; i++) {
          value = callback(elems[i], i, arg);

          if (value != null) {
            ret.push(value);
          }
        } // Go through every key on the object,

      } else {
        for (i in elems) {
          value = callback(elems[i], i, arg);

          if (value != null) {
            ret.push(value);
          }
        }
      } // Flatten any nested arrays


      return flat(ret);
    },
    // A global GUID counter for objects
    guid: 1,
    // jQuery.support is not used in Core but other projects attach their
    // properties to it so it needs to exist.
    support: support
  });

  if (typeof Symbol === "function") {
    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
  } // Populate the class2type map


  jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (_i, name) {
    class2type["[object " + name + "]"] = name.toLowerCase();
  });

  function isArrayLike(obj) {
    // Support: real iOS 8.2 only (not reproducible in simulator)
    // `in` check used to prevent JIT error (gh-2145)
    // hasOwn isn't used here due to false negatives
    // regarding Nodelist length in IE
    var length = !!obj && "length" in obj && obj.length,
        type = toType(obj);

    if (isFunction(obj) || isWindow(obj)) {
      return false;
    }

    return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
  }

  var Sizzle =
  /*!
   * Sizzle CSS Selector Engine v2.3.5
   * https://sizzlejs.com/
   *
   * Copyright JS Foundation and other contributors
   * Released under the MIT license
   * https://js.foundation/
   *
   * Date: 2020-03-14
   */
  function (window) {
    var i,
        support,
        Expr,
        getText,
        isXML,
        tokenize,
        compile,
        select,
        outermostContext,
        sortInput,
        hasDuplicate,
        // Local document vars
    setDocument,
        document,
        docElem,
        documentIsHTML,
        rbuggyQSA,
        rbuggyMatches,
        matches,
        contains,
        // Instance-specific data
    expando = "sizzle" + 1 * new Date(),
        preferredDoc = window.document,
        dirruns = 0,
        done = 0,
        classCache = createCache(),
        tokenCache = createCache(),
        compilerCache = createCache(),
        nonnativeSelectorCache = createCache(),
        sortOrder = function sortOrder(a, b) {
      if (a === b) {
        hasDuplicate = true;
      }

      return 0;
    },
        // Instance methods
    hasOwn = {}.hasOwnProperty,
        arr = [],
        pop = arr.pop,
        pushNative = arr.push,
        push = arr.push,
        slice = arr.slice,
        // Use a stripped-down indexOf as it's faster than native
    // https://jsperf.com/thor-indexof-vs-for/5
    indexOf = function indexOf(list, elem) {
      var i = 0,
          len = list.length;

      for (; i < len; i++) {
        if (list[i] === elem) {
          return i;
        }
      }

      return -1;
    },
        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" + "ismap|loop|multiple|open|readonly|required|scoped",
        // Regular expressions
    // http://www.w3.org/TR/css3-selectors/#whitespace
    whitespace = "[\\x20\\t\\r\\n\\f]",
        // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
    identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
    attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)
    "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5]
    // or strings [capture 3 or capture 4]"
    "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
        pseudos = ":(" + identifier + ")(?:\\((" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
    // 1. quoted (capture 3; capture 4 or capture 5)
    "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + // 2. simple (capture 6)
    "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + // 3. anything else (capture 2)
    ".*" + ")\\)|)",
        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
    rwhitespace = new RegExp(whitespace + "+", "g"),
        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
        rdescend = new RegExp(whitespace + "|>"),
        rpseudo = new RegExp(pseudos),
        ridentifier = new RegExp("^" + identifier + "$"),
        matchExpr = {
      "ID": new RegExp("^#(" + identifier + ")"),
      "CLASS": new RegExp("^\\.(" + identifier + ")"),
      "TAG": new RegExp("^(" + identifier + "|[*])"),
      "ATTR": new RegExp("^" + attributes),
      "PSEUDO": new RegExp("^" + pseudos),
      "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
      "bool": new RegExp("^(?:" + booleans + ")$", "i"),
      // For use in libraries implementing .is()
      // We use this for POS matching in `select`
      "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
    },
        rhtml = /HTML$/i,
        rinputs = /^(?:input|select|textarea|button)$/i,
        rheader = /^h\d$/i,
        rnative = /^[^{]+\{\s*\[native \w/,
        // Easily-parseable/retrievable ID or TAG or CLASS selectors
    rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        rsibling = /[+~]/,
        // CSS escapes
    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
    runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"),
        funescape = function funescape(escape, nonHex) {
      var high = "0x" + escape.slice(1) - 0x10000;
      return nonHex ? // Strip the backslash prefix from a non-hex escape sequence
      nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point
      // Support: IE <=11+
      // For values outside the Basic Multilingual Plane (BMP), manually construct a
      // surrogate pair
      high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
    },
        // CSS string/identifier serialization
    // https://drafts.csswg.org/cssom/#common-serializing-idioms
    rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
        fcssescape = function fcssescape(ch, asCodePoint) {
      if (asCodePoint) {
        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
        if (ch === "\0") {
          return "\uFFFD";
        } // Control characters and (dependent upon position) numbers get escaped as code points


        return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
      } // Other potentially-special ASCII characters get backslash-escaped


      return "\\" + ch;
    },
        // Used for iframes
    // See setDocument()
    // Removing the function wrapper causes a "Permission Denied"
    // error in IE
    unloadHandler = function unloadHandler() {
      setDocument();
    },
        inDisabledFieldset = addCombinator(function (elem) {
      return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
    }, {
      dir: "parentNode",
      next: "legend"
    }); // Optimize for push.apply( _, NodeList )


    try {
      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0
      // Detect silently failing push.apply
      // eslint-disable-next-line no-unused-expressions

      arr[preferredDoc.childNodes.length].nodeType;
    } catch (e) {
      push = {
        apply: arr.length ? // Leverage slice if possible
        function (target, els) {
          pushNative.apply(target, slice.call(els));
        } : // Support: IE<9
        // Otherwise append directly
        function (target, els) {
          var j = target.length,
              i = 0; // Can't trust NodeList.length

          while (target[j++] = els[i++]) {}

          target.length = j - 1;
        }
      };
    }

    function Sizzle(selector, context, results, seed) {
      var m,
          i,
          elem,
          nid,
          match,
          groups,
          newSelector,
          newContext = context && context.ownerDocument,
          // nodeType defaults to 9, since context defaults to document
      nodeType = context ? context.nodeType : 9;
      results = results || []; // Return early from calls with invalid selector or context

      if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
        return results;
      } // Try to shortcut find operations (as opposed to filters) in HTML documents


      if (!seed) {
        setDocument(context);
        context = context || document;

        if (documentIsHTML) {
          // If the selector is sufficiently simple, try using a "get*By*" DOM method
          // (excepting DocumentFragment context, where the methods don't exist)
          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
            // ID selector
            if (m = match[1]) {
              // Document context
              if (nodeType === 9) {
                if (elem = context.getElementById(m)) {
                  // Support: IE, Opera, Webkit
                  // TODO: identify versions
                  // getElementById can match elements by name instead of ID
                  if (elem.id === m) {
                    results.push(elem);
                    return results;
                  }
                } else {
                  return results;
                } // Element context

              } else {
                // Support: IE, Opera, Webkit
                // TODO: identify versions
                // getElementById can match elements by name instead of ID
                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                  results.push(elem);
                  return results;
                }
              } // Type selector

            } else if (match[2]) {
              push.apply(results, context.getElementsByTagName(selector));
              return results; // Class selector
            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
              push.apply(results, context.getElementsByClassName(m));
              return results;
            }
          } // Take advantage of querySelectorAll


          if (support.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && ( // Support: IE 8 only
          // Exclude object elements
          nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {
            newSelector = selector;
            newContext = context; // qSA considers elements outside a scoping root when evaluating child or
            // descendant combinators, which is not what we want.
            // In such cases, we work around the behavior by prefixing every selector in the
            // list with an ID selector referencing the scope context.
            // The technique has to be used as well when a leading combinator is used
            // as such selectors are not recognized by querySelectorAll.
            // Thanks to Andrew Dupont for this technique.

            if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {
              // Expand context for sibling selectors
              newContext = rsibling.test(selector) && testContext(context.parentNode) || context; // We can use :scope instead of the ID hack if the browser
              // supports it & if we're not changing the context.

              if (newContext !== context || !support.scope) {
                // Capture the context ID, setting it first if necessary
                if (nid = context.getAttribute("id")) {
                  nid = nid.replace(rcssescape, fcssescape);
                } else {
                  context.setAttribute("id", nid = expando);
                }
              } // Prefix every selector in the list


              groups = tokenize(selector);
              i = groups.length;

              while (i--) {
                groups[i] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i]);
              }

              newSelector = groups.join(",");
            }

            try {
              push.apply(results, newContext.querySelectorAll(newSelector));
              return results;
            } catch (qsaError) {
              nonnativeSelectorCache(selector, true);
            } finally {
              if (nid === expando) {
                context.removeAttribute("id");
              }
            }
          }
        }
      } // All others


      return select(selector.replace(rtrim, "$1"), context, results, seed);
    }
    /**
     * Create key-value caches of limited size
     * @returns {function(string, object)} Returns the Object data after storing it on itself with
     *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
     *	deleting the oldest entry
     */


    function createCache() {
      var keys = [];

      function cache(key, value) {
        // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
        if (keys.push(key + " ") > Expr.cacheLength) {
          // Only keep the most recent entries
          delete cache[keys.shift()];
        }

        return cache[key + " "] = value;
      }

      return cache;
    }
    /**
     * Mark a function for special use by Sizzle
     * @param {Function} fn The function to mark
     */


    function markFunction(fn) {
      fn[expando] = true;
      return fn;
    }
    /**
     * Support testing using an element
     * @param {Function} fn Passed the created element and returns a boolean result
     */


    function assert(fn) {
      var el = document.createElement("fieldset");

      try {
        return !!fn(el);
      } catch (e) {
        return false;
      } finally {
        // Remove from its parent by default
        if (el.parentNode) {
          el.parentNode.removeChild(el);
        } // release memory in IE


        el = null;
      }
    }
    /**
     * Adds the same handler for all of the specified attrs
     * @param {String} attrs Pipe-separated list of attributes
     * @param {Function} handler The method that will be applied
     */


    function addHandle(attrs, handler) {
      var arr = attrs.split("|"),
          i = arr.length;

      while (i--) {
        Expr.attrHandle[arr[i]] = handler;
      }
    }
    /**
     * Checks document order of two siblings
     * @param {Element} a
     * @param {Element} b
     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
     */


    function siblingCheck(a, b) {
      var cur = b && a,
          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes

      if (diff) {
        return diff;
      } // Check if b follows a


      if (cur) {
        while (cur = cur.nextSibling) {
          if (cur === b) {
            return -1;
          }
        }
      }

      return a ? 1 : -1;
    }
    /**
     * Returns a function to use in pseudos for input types
     * @param {String} type
     */


    function createInputPseudo(type) {
      return function (elem) {
        var name = elem.nodeName.toLowerCase();
        return name === "input" && elem.type === type;
      };
    }
    /**
     * Returns a function to use in pseudos for buttons
     * @param {String} type
     */


    function createButtonPseudo(type) {
      return function (elem) {
        var name = elem.nodeName.toLowerCase();
        return (name === "input" || name === "button") && elem.type === type;
      };
    }
    /**
     * Returns a function to use in pseudos for :enabled/:disabled
     * @param {Boolean} disabled true for :disabled; false for :enabled
     */


    function createDisabledPseudo(disabled) {
      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
      return function (elem) {
        // Only certain elements can match :enabled or :disabled
        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
        if ("form" in elem) {
          // Check for inherited disabledness on relevant non-disabled elements:
          // * listed form-associated elements in a disabled fieldset
          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
          // * option elements in a disabled optgroup
          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
          // All such elements have a "form" property.
          if (elem.parentNode && elem.disabled === false) {
            // Option elements defer to a parent optgroup if present
            if ("label" in elem) {
              if ("label" in elem.parentNode) {
                return elem.parentNode.disabled === disabled;
              } else {
                return elem.disabled === disabled;
              }
            } // Support: IE 6 - 11
            // Use the isDisabled shortcut property to check for disabled fieldset ancestors


            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually

            /* jshint -W018 */
            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
          }

          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.
          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't
          // even exist on them, let alone have a boolean value.
        } else if ("label" in elem) {
          return elem.disabled === disabled;
        } // Remaining elements are neither :enabled nor :disabled


        return false;
      };
    }
    /**
     * Returns a function to use in pseudos for positionals
     * @param {Function} fn
     */


    function createPositionalPseudo(fn) {
      return markFunction(function (argument) {
        argument = +argument;
        return markFunction(function (seed, matches) {
          var j,
              matchIndexes = fn([], seed.length, argument),
              i = matchIndexes.length; // Match elements found at the specified indexes

          while (i--) {
            if (seed[j = matchIndexes[i]]) {
              seed[j] = !(matches[j] = seed[j]);
            }
          }
        });
      });
    }
    /**
     * Checks a node for validity as a Sizzle context
     * @param {Element|Object=} context
     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
     */


    function testContext(context) {
      return context && typeof context.getElementsByTagName !== "undefined" && context;
    } // Expose support vars for convenience


    support = Sizzle.support = {};
    /**
     * Detects XML nodes
     * @param {Element|Object} elem An element or a document
     * @returns {Boolean} True iff elem is a non-HTML XML node
     */

    isXML = Sizzle.isXML = function (elem) {
      var namespace = elem.namespaceURI,
          docElem = (elem.ownerDocument || elem).documentElement; // Support: IE <=8
      // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
      // https://bugs.jquery.com/ticket/4833

      return !rhtml.test(namespace || docElem && docElem.nodeName || "HTML");
    };
    /**
     * Sets document-related variables once based on the current document
     * @param {Element|Object} [doc] An element or document object to use to set the document
     * @returns {Object} Returns the current document
     */


    setDocument = Sizzle.setDocument = function (node) {
      var hasCompare,
          subWindow,
          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected
      // Support: IE 11+, Edge 17 - 18+
      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
      // two documents; shallow comparisons work.
      // eslint-disable-next-line eqeqeq

      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {
        return document;
      } // Update global variables


      document = doc;
      docElem = document.documentElement;
      documentIsHTML = !isXML(document); // Support: IE 9 - 11+, Edge 12 - 18+
      // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
      // Support: IE 11+, Edge 17 - 18+
      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
      // two documents; shallow comparisons work.
      // eslint-disable-next-line eqeqeq

      if (preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {
        // Support: IE 11, Edge
        if (subWindow.addEventListener) {
          subWindow.addEventListener("unload", unloadHandler, false); // Support: IE 9 - 10 only
        } else if (subWindow.attachEvent) {
          subWindow.attachEvent("onunload", unloadHandler);
        }
      } // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
      // Safari 4 - 5 only, Opera <=11.6 - 12.x only
      // IE/Edge & older browsers don't support the :scope pseudo-class.
      // Support: Safari 6.0 only
      // Safari 6.0 supports :scope but it's an alias of :root there.


      support.scope = assert(function (el) {
        docElem.appendChild(el).appendChild(document.createElement("div"));
        return typeof el.querySelectorAll !== "undefined" && !el.querySelectorAll(":scope fieldset div").length;
      });
      /* Attributes
      ---------------------------------------------------------------------- */
      // Support: IE<8
      // Verify that getAttribute really returns attributes and not properties
      // (excepting IE8 booleans)

      support.attributes = assert(function (el) {
        el.className = "i";
        return !el.getAttribute("className");
      });
      /* getElement(s)By*
      ---------------------------------------------------------------------- */
      // Check if getElementsByTagName("*") returns only elements

      support.getElementsByTagName = assert(function (el) {
        el.appendChild(document.createComment(""));
        return !el.getElementsByTagName("*").length;
      }); // Support: IE<9

      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10
      // Check if getElementById returns elements by name
      // The broken getElementById methods don't pick up programmatically-set names,
      // so use a roundabout getElementsByName test

      support.getById = assert(function (el) {
        docElem.appendChild(el).id = expando;
        return !document.getElementsByName || !document.getElementsByName(expando).length;
      }); // ID filter and find

      if (support.getById) {
        Expr.filter["ID"] = function (id) {
          var attrId = id.replace(runescape, funescape);
          return function (elem) {
            return elem.getAttribute("id") === attrId;
          };
        };

        Expr.find["ID"] = function (id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var elem = context.getElementById(id);
            return elem ? [elem] : [];
          }
        };
      } else {
        Expr.filter["ID"] = function (id) {
          var attrId = id.replace(runescape, funescape);
          return function (elem) {
            var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
            return node && node.value === attrId;
          };
        }; // Support: IE 6 - 7 only
        // getElementById is not reliable as a find shortcut


        Expr.find["ID"] = function (id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var node,
                i,
                elems,
                elem = context.getElementById(id);

            if (elem) {
              // Verify the id attribute
              node = elem.getAttributeNode("id");

              if (node && node.value === id) {
                return [elem];
              } // Fall back on getElementsByName


              elems = context.getElementsByName(id);
              i = 0;

              while (elem = elems[i++]) {
                node = elem.getAttributeNode("id");

                if (node && node.value === id) {
                  return [elem];
                }
              }
            }

            return [];
          }
        };
      } // Tag


      Expr.find["TAG"] = support.getElementsByTagName ? function (tag, context) {
        if (typeof context.getElementsByTagName !== "undefined") {
          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN
        } else if (support.qsa) {
          return context.querySelectorAll(tag);
        }
      } : function (tag, context) {
        var elem,
            tmp = [],
            i = 0,
            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
        results = context.getElementsByTagName(tag); // Filter out possible comments

        if (tag === "*") {
          while (elem = results[i++]) {
            if (elem.nodeType === 1) {
              tmp.push(elem);
            }
          }

          return tmp;
        }

        return results;
      }; // Class

      Expr.find["CLASS"] = support.getElementsByClassName && function (className, context) {
        if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
          return context.getElementsByClassName(className);
        }
      };
      /* QSA/matchesSelector
      ---------------------------------------------------------------------- */
      // QSA and matchesSelector support
      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)


      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)
      // We allow this because of a bug in IE8/9 that throws an error
      // whenever `document.activeElement` is accessed on an iframe
      // So, we allow :focus to pass through QSA all the time to avoid the IE error
      // See https://bugs.jquery.com/ticket/13378

      rbuggyQSA = [];

      if (support.qsa = rnative.test(document.querySelectorAll)) {
        // Build QSA regex
        // Regex strategy adopted from Diego Perini
        assert(function (el) {
          var input; // Select is set to empty string on purpose
          // This is to test IE's treatment of not explicitly
          // setting a boolean content attribute,
          // since its presence should be enough
          // https://bugs.jquery.com/ticket/12359

          docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>"; // Support: IE8, Opera 11-12.16
          // Nothing should be selected when empty strings follow ^= or $= or *=
          // The test attribute must be unknown in Opera but "safe" for WinRT
          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section

          if (el.querySelectorAll("[msallowcapture^='']").length) {
            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
          } // Support: IE8
          // Boolean attributes and "value" are not treated correctly


          if (!el.querySelectorAll("[selected]").length) {
            rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+


          if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
            rbuggyQSA.push("~=");
          } // Support: IE 11+, Edge 15 - 18+
          // IE 11/Edge don't find elements on a `[name='']` query in some cases.
          // Adding a temporary attribute to the document before the selection works
          // around the issue.
          // Interestingly, IE 10 & older don't seem to have the issue.


          input = document.createElement("input");
          input.setAttribute("name", "");
          el.appendChild(input);

          if (!el.querySelectorAll("[name='']").length) {
            rbuggyQSA.push("\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + "*(?:''|\"\")");
          } // Webkit/Opera - :checked should return selected option elements
          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
          // IE8 throws error here and will not see later tests


          if (!el.querySelectorAll(":checked").length) {
            rbuggyQSA.push(":checked");
          } // Support: Safari 8+, iOS 8+
          // https://bugs.webkit.org/show_bug.cgi?id=136851
          // In-page `selector#id sibling-combinator selector` fails


          if (!el.querySelectorAll("a#" + expando + "+*").length) {
            rbuggyQSA.push(".#.+[+~]");
          } // Support: Firefox <=3.6 - 5 only
          // Old Firefox doesn't throw on a badly-escaped identifier.


          el.querySelectorAll("\\\f");
          rbuggyQSA.push("[\\r\\n\\f]");
        });
        assert(function (el) {
          el.innerHTML = "<a href='' disabled='disabled'></a>" + "<select disabled='disabled'><option/></select>"; // Support: Windows 8 Native Apps
          // The type and name attributes are restricted during .innerHTML assignment

          var input = document.createElement("input");
          input.setAttribute("type", "hidden");
          el.appendChild(input).setAttribute("name", "D"); // Support: IE8
          // Enforce case-sensitivity of name attribute

          if (el.querySelectorAll("[name=d]").length) {
            rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
          // IE8 throws error here and will not see later tests


          if (el.querySelectorAll(":enabled").length !== 2) {
            rbuggyQSA.push(":enabled", ":disabled");
          } // Support: IE9-11+
          // IE's :disabled selector does not pick up the children of disabled fieldsets


          docElem.appendChild(el).disabled = true;

          if (el.querySelectorAll(":disabled").length !== 2) {
            rbuggyQSA.push(":enabled", ":disabled");
          } // Support: Opera 10 - 11 only
          // Opera 10-11 does not throw on post-comma invalid pseudos


          el.querySelectorAll("*,:x");
          rbuggyQSA.push(",.*:");
        });
      }

      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
        assert(function (el) {
          // Check to see if it's possible to do matchesSelector
          // on a disconnected node (IE 9)
          support.disconnectedMatch = matches.call(el, "*"); // This should fail with an exception
          // Gecko does not error, returns false instead

          matches.call(el, "[s!='']:x");
          rbuggyMatches.push("!=", pseudos);
        });
      }

      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
      /* Contains
      ---------------------------------------------------------------------- */

      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another
      // Purposefully self-exclusive
      // As in, an element does not contain itself

      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
        var adown = a.nodeType === 9 ? a.documentElement : a,
            bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
      } : function (a, b) {
        if (b) {
          while (b = b.parentNode) {
            if (b === a) {
              return true;
            }
          }
        }

        return false;
      };
      /* Sorting
      ---------------------------------------------------------------------- */
      // Document order sorting

      sortOrder = hasCompare ? function (a, b) {
        // Flag for duplicate removal
        if (a === b) {
          hasDuplicate = true;
          return 0;
        } // Sort on method existence if only one input has compareDocumentPosition


        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;

        if (compare) {
          return compare;
        } // Calculate position if both inputs belong to the same document
        // Support: IE 11+, Edge 17 - 18+
        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
        // two documents; shallow comparisons work.
        // eslint-disable-next-line eqeqeq


        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected
        1; // Disconnected nodes

        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
          // Choose the first element that is related to our preferred document
          // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.
          // eslint-disable-next-line eqeqeq
          if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) {
            return -1;
          } // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.
          // eslint-disable-next-line eqeqeq


          if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) {
            return 1;
          } // Maintain original order


          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
        }

        return compare & 4 ? -1 : 1;
      } : function (a, b) {
        // Exit early if the nodes are identical
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }

        var cur,
            i = 0,
            aup = a.parentNode,
            bup = b.parentNode,
            ap = [a],
            bp = [b]; // Parentless nodes are either documents or disconnected

        if (!aup || !bup) {
          // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.

          /* eslint-disable eqeqeq */
          return a == document ? -1 : b == document ? 1 :
          /* eslint-enable eqeqeq */
          aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check
        } else if (aup === bup) {
          return siblingCheck(a, b);
        } // Otherwise we need full lists of their ancestors for comparison


        cur = a;

        while (cur = cur.parentNode) {
          ap.unshift(cur);
        }

        cur = b;

        while (cur = cur.parentNode) {
          bp.unshift(cur);
        } // Walk down the tree looking for a discrepancy


        while (ap[i] === bp[i]) {
          i++;
        }

        return i ? // Do a sibling check if the nodes have a common ancestor
        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first
        // Support: IE 11+, Edge 17 - 18+
        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
        // two documents; shallow comparisons work.

        /* eslint-disable eqeqeq */
        ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 :
        /* eslint-enable eqeqeq */
        0;
      };
      return document;
    };

    Sizzle.matches = function (expr, elements) {
      return Sizzle(expr, null, null, elements);
    };

    Sizzle.matchesSelector = function (elem, expr) {
      setDocument(elem);

      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
        try {
          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes

          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document
          // fragment in IE 9
          elem.document && elem.document.nodeType !== 11) {
            return ret;
          }
        } catch (e) {
          nonnativeSelectorCache(expr, true);
        }
      }

      return Sizzle(expr, document, null, [elem]).length > 0;
    };

    Sizzle.contains = function (context, elem) {
      // Set document vars if needed
      // Support: IE 11+, Edge 17 - 18+
      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
      // two documents; shallow comparisons work.
      // eslint-disable-next-line eqeqeq
      if ((context.ownerDocument || context) != document) {
        setDocument(context);
      }

      return contains(context, elem);
    };

    Sizzle.attr = function (elem, name) {
      // Set document vars if needed
      // Support: IE 11+, Edge 17 - 18+
      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
      // two documents; shallow comparisons work.
      // eslint-disable-next-line eqeqeq
      if ((elem.ownerDocument || elem) != document) {
        setDocument(elem);
      }

      var fn = Expr.attrHandle[name.toLowerCase()],
          // Don't get fooled by Object.prototype properties (jQuery #13807)
      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
    };

    Sizzle.escape = function (sel) {
      return (sel + "").replace(rcssescape, fcssescape);
    };

    Sizzle.error = function (msg) {
      throw new Error("Syntax error, unrecognized expression: " + msg);
    };
    /**
     * Document sorting and removing duplicates
     * @param {ArrayLike} results
     */


    Sizzle.uniqueSort = function (results) {
      var elem,
          duplicates = [],
          j = 0,
          i = 0; // Unless we *know* we can detect duplicates, assume their presence

      hasDuplicate = !support.detectDuplicates;
      sortInput = !support.sortStable && results.slice(0);
      results.sort(sortOrder);

      if (hasDuplicate) {
        while (elem = results[i++]) {
          if (elem === results[i]) {
            j = duplicates.push(i);
          }
        }

        while (j--) {
          results.splice(duplicates[j], 1);
        }
      } // Clear input after sorting to release objects
      // See https://github.com/jquery/sizzle/pull/225


      sortInput = null;
      return results;
    };
    /**
     * Utility function for retrieving the text value of an array of DOM nodes
     * @param {Array|Element} elem
     */


    getText = Sizzle.getText = function (elem) {
      var node,
          ret = "",
          i = 0,
          nodeType = elem.nodeType;

      if (!nodeType) {
        // If no nodeType, this is expected to be an array
        while (node = elem[i++]) {
          // Do not traverse comment nodes
          ret += getText(node);
        }
      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
        // Use textContent for elements
        // innerText usage removed for consistency of new lines (jQuery #11153)
        if (typeof elem.textContent === "string") {
          return elem.textContent;
        } else {
          // Traverse its children
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            ret += getText(elem);
          }
        }
      } else if (nodeType === 3 || nodeType === 4) {
        return elem.nodeValue;
      } // Do not include comment or processing instruction nodes


      return ret;
    };

    Expr = Sizzle.selectors = {
      // Can be adjusted by the user
      cacheLength: 50,
      createPseudo: markFunction,
      match: matchExpr,
      attrHandle: {},
      find: {},
      relative: {
        ">": {
          dir: "parentNode",
          first: true
        },
        " ": {
          dir: "parentNode"
        },
        "+": {
          dir: "previousSibling",
          first: true
        },
        "~": {
          dir: "previousSibling"
        }
      },
      preFilter: {
        "ATTR": function ATTR(match) {
          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted

          match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);

          if (match[2] === "~=") {
            match[3] = " " + match[3] + " ";
          }

          return match.slice(0, 4);
        },
        "CHILD": function CHILD(match) {
          /* matches from matchExpr["CHILD"]
          	1 type (only|nth|...)
          	2 what (child|of-type)
          	3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
          	4 xn-component of xn+y argument ([+-]?\d*n|)
          	5 sign of xn-component
          	6 x of xn-component
          	7 sign of y-component
          	8 y of y-component
          */
          match[1] = match[1].toLowerCase();

          if (match[1].slice(0, 3) === "nth") {
            // nth-* requires argument
            if (!match[3]) {
              Sizzle.error(match[0]);
            } // numeric x and y parameters for Expr.filter.CHILD
            // remember that false/true cast respectively to 0/1


            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
            match[5] = +(match[7] + match[8] || match[3] === "odd"); // other types prohibit arguments
          } else if (match[3]) {
            Sizzle.error(match[0]);
          }

          return match;
        },
        "PSEUDO": function PSEUDO(match) {
          var excess,
              unquoted = !match[6] && match[2];

          if (matchExpr["CHILD"].test(match[0])) {
            return null;
          } // Accept quoted arguments as-is


          if (match[3]) {
            match[2] = match[4] || match[5] || ""; // Strip excess characters from unquoted arguments
          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)
          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis
          excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
            // excess is a negative index
            match[0] = match[0].slice(0, excess);
            match[2] = unquoted.slice(0, excess);
          } // Return only captures needed by the pseudo filter method (type and argument)


          return match.slice(0, 3);
        }
      },
      filter: {
        "TAG": function TAG(nodeNameSelector) {
          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
          return nodeNameSelector === "*" ? function () {
            return true;
          } : function (elem) {
            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
          };
        },
        "CLASS": function CLASS(className) {
          var pattern = classCache[className + " "];
          return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function (elem) {
            return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
          });
        },
        "ATTR": function ATTR(name, operator, check) {
          return function (elem) {
            var result = Sizzle.attr(elem, name);

            if (result == null) {
              return operator === "!=";
            }

            if (!operator) {
              return true;
            }

            result += "";
            /* eslint-disable max-len */

            return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
            /* eslint-enable max-len */
          };
        },
        "CHILD": function CHILD(type, what, _argument, first, last) {
          var simple = type.slice(0, 3) !== "nth",
              forward = type.slice(-4) !== "last",
              ofType = what === "of-type";
          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)
          function (elem) {
            return !!elem.parentNode;
          } : function (elem, _context, xml) {
            var cache,
                uniqueCache,
                outerCache,
                node,
                nodeIndex,
                start,
                dir = simple !== forward ? "nextSibling" : "previousSibling",
                parent = elem.parentNode,
                name = ofType && elem.nodeName.toLowerCase(),
                useCache = !xml && !ofType,
                diff = false;

            if (parent) {
              // :(first|last|only)-(child|of-type)
              if (simple) {
                while (dir) {
                  node = elem;

                  while (node = node[dir]) {
                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                      return false;
                    }
                  } // Reverse direction for :only-* (if we haven't yet done so)


                  start = dir = type === "only" && !start && "nextSibling";
                }

                return true;
              }

              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`

              if (forward && useCache) {
                // Seek `elem` from a previously-cached index
                // ...in a gzip-friendly way
                node = parent;
                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only
                // Defend against cloned attroperties (jQuery gh-1709)

                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                cache = uniqueCache[type] || [];
                nodeIndex = cache[0] === dirruns && cache[1];
                diff = nodeIndex && cache[2];
                node = nodeIndex && parent.childNodes[nodeIndex];

                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start
                diff = nodeIndex = 0) || start.pop()) {
                  // When found, cache indexes on `parent` and break
                  if (node.nodeType === 1 && ++diff && node === elem) {
                    uniqueCache[type] = [dirruns, nodeIndex, diff];
                    break;
                  }
                }
              } else {
                // Use previously-cached element index if available
                if (useCache) {
                  // ...in a gzip-friendly way
                  node = elem;
                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only
                  // Defend against cloned attroperties (jQuery gh-1709)

                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                  cache = uniqueCache[type] || [];
                  nodeIndex = cache[0] === dirruns && cache[1];
                  diff = nodeIndex;
                } // xml :nth-child(...)
                // or :nth-last-child(...) or :nth(-last)?-of-type(...)


                if (diff === false) {
                  // Use the same loop as above to seek `elem` from the start
                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                      // Cache the index of each encountered element
                      if (useCache) {
                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only
                        // Defend against cloned attroperties (jQuery gh-1709)

                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                        uniqueCache[type] = [dirruns, diff];
                      }

                      if (node === elem) {
                        break;
                      }
                    }
                  }
                }
              } // Incorporate the offset, then check against cycle size


              diff -= last;
              return diff === first || diff % first === 0 && diff / first >= 0;
            }
          };
        },
        "PSEUDO": function PSEUDO(pseudo, argument) {
          // pseudo-class names are case-insensitive
          // http://www.w3.org/TR/selectors/#pseudo-classes
          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
          // Remember that setFilters inherits from pseudos
          var args,
              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo); // The user may use createPseudo to indicate that
          // arguments are needed to create the filter function
          // just as Sizzle does

          if (fn[expando]) {
            return fn(argument);
          } // But maintain support for old signatures


          if (fn.length > 1) {
            args = [pseudo, pseudo, "", argument];
            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
              var idx,
                  matched = fn(seed, argument),
                  i = matched.length;

              while (i--) {
                idx = indexOf(seed, matched[i]);
                seed[idx] = !(matches[idx] = matched[i]);
              }
            }) : function (elem) {
              return fn(elem, 0, args);
            };
          }

          return fn;
        }
      },
      pseudos: {
        // Potentially complex pseudos
        "not": markFunction(function (selector) {
          // Trim the selector passed to compile
          // to avoid treating leading and trailing
          // spaces as combinators
          var input = [],
              results = [],
              matcher = compile(selector.replace(rtrim, "$1"));
          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {
            var elem,
                unmatched = matcher(seed, null, xml, []),
                i = seed.length; // Match elements unmatched by `matcher`

            while (i--) {
              if (elem = unmatched[i]) {
                seed[i] = !(matches[i] = elem);
              }
            }
          }) : function (elem, _context, xml) {
            input[0] = elem;
            matcher(input, null, xml, results); // Don't keep the element (issue #299)

            input[0] = null;
            return !results.pop();
          };
        }),
        "has": markFunction(function (selector) {
          return function (elem) {
            return Sizzle(selector, elem).length > 0;
          };
        }),
        "contains": markFunction(function (text) {
          text = text.replace(runescape, funescape);
          return function (elem) {
            return (elem.textContent || getText(elem)).indexOf(text) > -1;
          };
        }),
        // "Whether an element is represented by a :lang() selector
        // is based solely on the element's language value
        // being equal to the identifier C,
        // or beginning with the identifier C immediately followed by "-".
        // The matching of C against the element's language value is performed case-insensitively.
        // The identifier C does not have to be a valid language name."
        // http://www.w3.org/TR/selectors/#lang-pseudo
        "lang": markFunction(function (lang) {
          // lang value must be a valid identifier
          if (!ridentifier.test(lang || "")) {
            Sizzle.error("unsupported lang: " + lang);
          }

          lang = lang.replace(runescape, funescape).toLowerCase();
          return function (elem) {
            var elemLang;

            do {
              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                elemLang = elemLang.toLowerCase();
                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
              }
            } while ((elem = elem.parentNode) && elem.nodeType === 1);

            return false;
          };
        }),
        // Miscellaneous
        "target": function target(elem) {
          var hash = window.location && window.location.hash;
          return hash && hash.slice(1) === elem.id;
        },
        "root": function root(elem) {
          return elem === docElem;
        },
        "focus": function focus(elem) {
          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
        },
        // Boolean properties
        "enabled": createDisabledPseudo(false),
        "disabled": createDisabledPseudo(true),
        "checked": function checked(elem) {
          // In CSS3, :checked should return both checked and selected elements
          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
          var nodeName = elem.nodeName.toLowerCase();
          return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected;
        },
        "selected": function selected(elem) {
          // Accessing this property makes selected-by-default
          // options in Safari work properly
          if (elem.parentNode) {
            // eslint-disable-next-line no-unused-expressions
            elem.parentNode.selectedIndex;
          }

          return elem.selected === true;
        },
        // Contents
        "empty": function empty(elem) {
          // http://www.w3.org/TR/selectors/#empty-pseudo
          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
          //   but not by others (comment: 8; processing instruction: 7; etc.)
          // nodeType < 6 works because attributes (2) do not appear as children
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            if (elem.nodeType < 6) {
              return false;
            }
          }

          return true;
        },
        "parent": function parent(elem) {
          return !Expr.pseudos["empty"](elem);
        },
        // Element/input types
        "header": function header(elem) {
          return rheader.test(elem.nodeName);
        },
        "input": function input(elem) {
          return rinputs.test(elem.nodeName);
        },
        "button": function button(elem) {
          var name = elem.nodeName.toLowerCase();
          return name === "input" && elem.type === "button" || name === "button";
        },
        "text": function text(elem) {
          var attr;
          return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ( // Support: IE<8
          // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
          (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
        },
        // Position-in-collection
        "first": createPositionalPseudo(function () {
          return [0];
        }),
        "last": createPositionalPseudo(function (_matchIndexes, length) {
          return [length - 1];
        }),
        "eq": createPositionalPseudo(function (_matchIndexes, length, argument) {
          return [argument < 0 ? argument + length : argument];
        }),
        "even": createPositionalPseudo(function (matchIndexes, length) {
          var i = 0;

          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),
        "odd": createPositionalPseudo(function (matchIndexes, length) {
          var i = 1;

          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),
        "lt": createPositionalPseudo(function (matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument > length ? length : argument;

          for (; --i >= 0;) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),
        "gt": createPositionalPseudo(function (matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;

          for (; ++i < length;) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        })
      }
    };
    Expr.pseudos["nth"] = Expr.pseudos["eq"]; // Add button/input type pseudos

    for (i in {
      radio: true,
      checkbox: true,
      file: true,
      password: true,
      image: true
    }) {
      Expr.pseudos[i] = createInputPseudo(i);
    }

    for (i in {
      submit: true,
      reset: true
    }) {
      Expr.pseudos[i] = createButtonPseudo(i);
    } // Easy API for creating new setFilters


    function setFilters() {}

    setFilters.prototype = Expr.filters = Expr.pseudos;
    Expr.setFilters = new setFilters();

    tokenize = Sizzle.tokenize = function (selector, parseOnly) {
      var matched,
          match,
          tokens,
          type,
          soFar,
          groups,
          preFilters,
          cached = tokenCache[selector + " "];

      if (cached) {
        return parseOnly ? 0 : cached.slice(0);
      }

      soFar = selector;
      groups = [];
      preFilters = Expr.preFilter;

      while (soFar) {
        // Comma and first run
        if (!matched || (match = rcomma.exec(soFar))) {
          if (match) {
            // Don't consume trailing commas as valid
            soFar = soFar.slice(match[0].length) || soFar;
          }

          groups.push(tokens = []);
        }

        matched = false; // Combinators

        if (match = rcombinators.exec(soFar)) {
          matched = match.shift();
          tokens.push({
            value: matched,
            // Cast descendant combinators to space
            type: match[0].replace(rtrim, " ")
          });
          soFar = soFar.slice(matched.length);
        } // Filters


        for (type in Expr.filter) {
          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
            matched = match.shift();
            tokens.push({
              value: matched,
              type: type,
              matches: match
            });
            soFar = soFar.slice(matched.length);
          }
        }

        if (!matched) {
          break;
        }
      } // Return the length of the invalid excess
      // if we're just parsing
      // Otherwise, throw an error or return tokens


      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens
      tokenCache(selector, groups).slice(0);
    };

    function toSelector(tokens) {
      var i = 0,
          len = tokens.length,
          selector = "";

      for (; i < len; i++) {
        selector += tokens[i].value;
      }

      return selector;
    }

    function addCombinator(matcher, combinator, base) {
      var dir = combinator.dir,
          skip = combinator.next,
          key = skip || dir,
          checkNonElements = base && key === "parentNode",
          doneName = done++;
      return combinator.first ? // Check against closest ancestor/preceding element
      function (elem, context, xml) {
        while (elem = elem[dir]) {
          if (elem.nodeType === 1 || checkNonElements) {
            return matcher(elem, context, xml);
          }
        }

        return false;
      } : // Check against all ancestor/preceding elements
      function (elem, context, xml) {
        var oldCache,
            uniqueCache,
            outerCache,
            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching

        if (xml) {
          while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
              if (matcher(elem, context, xml)) {
                return true;
              }
            }
          }
        } else {
          while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only
              // Defend against cloned attroperties (jQuery gh-1709)

              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});

              if (skip && skip === elem.nodeName.toLowerCase()) {
                elem = elem[dir] || elem;
              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                // Assign to newCache so results back-propagate to previous elements
                return newCache[2] = oldCache[2];
              } else {
                // Reuse newcache so results back-propagate to previous elements
                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking

                if (newCache[2] = matcher(elem, context, xml)) {
                  return true;
                }
              }
            }
          }
        }

        return false;
      };
    }

    function elementMatcher(matchers) {
      return matchers.length > 1 ? function (elem, context, xml) {
        var i = matchers.length;

        while (i--) {
          if (!matchers[i](elem, context, xml)) {
            return false;
          }
        }

        return true;
      } : matchers[0];
    }

    function multipleContexts(selector, contexts, results) {
      var i = 0,
          len = contexts.length;

      for (; i < len; i++) {
        Sizzle(selector, contexts[i], results);
      }

      return results;
    }

    function condense(unmatched, map, filter, context, xml) {
      var elem,
          newUnmatched = [],
          i = 0,
          len = unmatched.length,
          mapped = map != null;

      for (; i < len; i++) {
        if (elem = unmatched[i]) {
          if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);

            if (mapped) {
              map.push(i);
            }
          }
        }
      }

      return newUnmatched;
    }

    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
      if (postFilter && !postFilter[expando]) {
        postFilter = setMatcher(postFilter);
      }

      if (postFinder && !postFinder[expando]) {
        postFinder = setMatcher(postFinder, postSelector);
      }

      return markFunction(function (seed, results, context, xml) {
        var temp,
            i,
            elem,
            preMap = [],
            postMap = [],
            preexisting = results.length,
            // Get initial elements from seed or context
        elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
            // Prefilter to get matcher input, preserving a map for seed-results synchronization
        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary
        [] : // ...otherwise use results directly
        results : matcherIn; // Find primary matches

        if (matcher) {
          matcher(matcherIn, matcherOut, context, xml);
        } // Apply postFilter


        if (postFilter) {
          temp = condense(matcherOut, postMap);
          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn

          i = temp.length;

          while (i--) {
            if (elem = temp[i]) {
              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
            }
          }
        }

        if (seed) {
          if (postFinder || preFilter) {
            if (postFinder) {
              // Get the final matcherOut by condensing this intermediate into postFinder contexts
              temp = [];
              i = matcherOut.length;

              while (i--) {
                if (elem = matcherOut[i]) {
                  // Restore matcherIn since elem is not yet a final match
                  temp.push(matcherIn[i] = elem);
                }
              }

              postFinder(null, matcherOut = [], temp, xml);
            } // Move matched elements from seed to results to keep them synchronized


            i = matcherOut.length;

            while (i--) {
              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                seed[temp] = !(results[temp] = elem);
              }
            }
          } // Add elements to results, through postFinder if defined

        } else {
          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);

          if (postFinder) {
            postFinder(null, results, matcherOut, xml);
          } else {
            push.apply(results, matcherOut);
          }
        }
      });
    }

    function matcherFromTokens(tokens) {
      var checkContext,
          matcher,
          j,
          len = tokens.length,
          leadingRelative = Expr.relative[tokens[0].type],
          implicitRelative = leadingRelative || Expr.relative[" "],
          i = leadingRelative ? 1 : 0,
          // The foundational matcher ensures that elements are reachable from top-level context(s)
      matchContext = addCombinator(function (elem) {
        return elem === checkContext;
      }, implicitRelative, true),
          matchAnyContext = addCombinator(function (elem) {
        return indexOf(checkContext, elem) > -1;
      }, implicitRelative, true),
          matchers = [function (elem, context, xml) {
        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)

        checkContext = null;
        return ret;
      }];

      for (; i < len; i++) {
        if (matcher = Expr.relative[tokens[i].type]) {
          matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher

          if (matcher[expando]) {
            // Find the next relative operator (if any) for proper handling
            j = ++i;

            for (; j < len; j++) {
              if (Expr.relative[tokens[j].type]) {
                break;
              }
            }

            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`
            tokens.slice(0, i - 1).concat({
              value: tokens[i - 2].type === " " ? "*" : ""
            })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
          }

          matchers.push(matcher);
        }
      }

      return elementMatcher(matchers);
    }

    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
      var bySet = setMatchers.length > 0,
          byElement = elementMatchers.length > 0,
          superMatcher = function superMatcher(seed, context, xml, results, outermost) {
        var elem,
            j,
            matcher,
            matchedCount = 0,
            i = "0",
            unmatched = seed && [],
            setMatched = [],
            contextBackup = outermostContext,
            // We must always have either seed elements or outermost context
        elems = seed || byElement && Expr.find["TAG"]("*", outermost),
            // Use integer dirruns iff this is the outermost matcher
        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,
            len = elems.length;

        if (outermost) {
          // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.
          // eslint-disable-next-line eqeqeq
          outermostContext = context == document || context || outermost;
        } // Add elements passing elementMatchers directly to results
        // Support: IE<9, Safari
        // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id


        for (; i !== len && (elem = elems[i]) != null; i++) {
          if (byElement && elem) {
            j = 0; // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq

            if (!context && elem.ownerDocument != document) {
              setDocument(elem);
              xml = !documentIsHTML;
            }

            while (matcher = elementMatchers[j++]) {
              if (matcher(elem, context || document, xml)) {
                results.push(elem);
                break;
              }
            }

            if (outermost) {
              dirruns = dirrunsUnique;
            }
          } // Track unmatched elements for set filters


          if (bySet) {
            // They will have gone through all possible matchers
            if (elem = !matcher && elem) {
              matchedCount--;
            } // Lengthen the array for every element, matched or not


            if (seed) {
              unmatched.push(elem);
            }
          }
        } // `i` is now the count of elements visited above, and adding it to `matchedCount`
        // makes the latter nonnegative.


        matchedCount += i; // Apply set filters to unmatched elements
        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
        // no element matchers and no seed.
        // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
        // case, which will result in a "00" `matchedCount` that differs from `i` but is also
        // numerically zero.

        if (bySet && i !== matchedCount) {
          j = 0;

          while (matcher = setMatchers[j++]) {
            matcher(unmatched, setMatched, context, xml);
          }

          if (seed) {
            // Reintegrate element matches to eliminate the need for sorting
            if (matchedCount > 0) {
              while (i--) {
                if (!(unmatched[i] || setMatched[i])) {
                  setMatched[i] = pop.call(results);
                }
              }
            } // Discard index placeholder values to get only actual matches


            setMatched = condense(setMatched);
          } // Add matches to results


          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting

          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
            Sizzle.uniqueSort(results);
          }
        } // Override manipulation of globals by nested matchers


        if (outermost) {
          dirruns = dirrunsUnique;
          outermostContext = contextBackup;
        }

        return unmatched;
      };

      return bySet ? markFunction(superMatcher) : superMatcher;
    }

    compile = Sizzle.compile = function (selector, match
    /* Internal Use Only */
    ) {
      var i,
          setMatchers = [],
          elementMatchers = [],
          cached = compilerCache[selector + " "];

      if (!cached) {
        // Generate a function of recursive functions that can be used to check each element
        if (!match) {
          match = tokenize(selector);
        }

        i = match.length;

        while (i--) {
          cached = matcherFromTokens(match[i]);

          if (cached[expando]) {
            setMatchers.push(cached);
          } else {
            elementMatchers.push(cached);
          }
        } // Cache the compiled function


        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization

        cached.selector = selector;
      }

      return cached;
    };
    /**
     * A low-level selection function that works with Sizzle's compiled
     *  selector functions
     * @param {String|Function} selector A selector or a pre-compiled
     *  selector function built with Sizzle.compile
     * @param {Element} context
     * @param {Array} [results]
     * @param {Array} [seed] A set of elements to match against
     */


    select = Sizzle.select = function (selector, context, results, seed) {
      var i,
          tokens,
          token,
          type,
          find,
          compiled = typeof selector === "function" && selector,
          match = !seed && tokenize(selector = compiled.selector || selector);
      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed
      // (the latter of which guarantees us context)

      if (match.length === 1) {
        // Reduce context if the leading compound selector is an ID
        tokens = match[0] = match[0].slice(0);

        if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
          context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];

          if (!context) {
            return results; // Precompiled matchers will still verify ancestry, so step up a level
          } else if (compiled) {
            context = context.parentNode;
          }

          selector = selector.slice(tokens.shift().value.length);
        } // Fetch a seed set for right-to-left matching


        i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;

        while (i--) {
          token = tokens[i]; // Abort if we hit a combinator

          if (Expr.relative[type = token.type]) {
            break;
          }

          if (find = Expr.find[type]) {
            // Search, expanding context for leading sibling combinators
            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
              // If seed is empty or no tokens remain, we can return early
              tokens.splice(i, 1);
              selector = seed.length && toSelector(tokens);

              if (!selector) {
                push.apply(results, seed);
                return results;
              }

              break;
            }
          }
        }
      } // Compile and execute a filtering function if one is not provided
      // Provide `match` to avoid retokenization if we modified the selector above


      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
      return results;
    }; // One-time assignments
    // Sort stability


    support.sortStable = expando.split("").sort(sortOrder).join("") === expando; // Support: Chrome 14-35+
    // Always assume duplicates if they aren't passed to the comparison function

    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document

    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
    // Detached nodes confoundingly follow *each other*

    support.sortDetached = assert(function (el) {
      // Should return 1, but returns 4 (following)
      return el.compareDocumentPosition(document.createElement("fieldset")) & 1;
    }); // Support: IE<8
    // Prevent attribute/property "interpolation"
    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx

    if (!assert(function (el) {
      el.innerHTML = "<a href='#'></a>";
      return el.firstChild.getAttribute("href") === "#";
    })) {
      addHandle("type|href|height|width", function (elem, name, isXML) {
        if (!isXML) {
          return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
        }
      });
    } // Support: IE<9
    // Use defaultValue in place of getAttribute("value")


    if (!support.attributes || !assert(function (el) {
      el.innerHTML = "<input/>";
      el.firstChild.setAttribute("value", "");
      return el.firstChild.getAttribute("value") === "";
    })) {
      addHandle("value", function (elem, _name, isXML) {
        if (!isXML && elem.nodeName.toLowerCase() === "input") {
          return elem.defaultValue;
        }
      });
    } // Support: IE<9
    // Use getAttributeNode to fetch booleans when getAttribute lies


    if (!assert(function (el) {
      return el.getAttribute("disabled") == null;
    })) {
      addHandle(booleans, function (elem, name, isXML) {
        var val;

        if (!isXML) {
          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        }
      });
    }

    return Sizzle;
  }(window);

  jQuery.find = Sizzle;
  jQuery.expr = Sizzle.selectors; // Deprecated

  jQuery.expr[":"] = jQuery.expr.pseudos;
  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
  jQuery.text = Sizzle.getText;
  jQuery.isXMLDoc = Sizzle.isXML;
  jQuery.contains = Sizzle.contains;
  jQuery.escapeSelector = Sizzle.escape;

  var dir = function dir(elem, _dir, until) {
    var matched = [],
        truncate = until !== undefined;

    while ((elem = elem[_dir]) && elem.nodeType !== 9) {
      if (elem.nodeType === 1) {
        if (truncate && jQuery(elem).is(until)) {
          break;
        }

        matched.push(elem);
      }
    }

    return matched;
  };

  var _siblings = function siblings(n, elem) {
    var matched = [];

    for (; n; n = n.nextSibling) {
      if (n.nodeType === 1 && n !== elem) {
        matched.push(n);
      }
    }

    return matched;
  };

  var rneedsContext = jQuery.expr.match.needsContext;

  function nodeName(elem, name) {
    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
  }

  ;
  var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i; // Implement the identical functionality for filter and not

  function winnow(elements, qualifier, not) {
    if (isFunction(qualifier)) {
      return jQuery.grep(elements, function (elem, i) {
        return !!qualifier.call(elem, i, elem) !== not;
      });
    } // Single element


    if (qualifier.nodeType) {
      return jQuery.grep(elements, function (elem) {
        return elem === qualifier !== not;
      });
    } // Arraylike of elements (jQuery, arguments, Array)


    if (typeof qualifier !== "string") {
      return jQuery.grep(elements, function (elem) {
        return indexOf.call(qualifier, elem) > -1 !== not;
      });
    } // Filtered directly for both simple and complex selectors


    return jQuery.filter(qualifier, elements, not);
  }

  jQuery.filter = function (expr, elems, not) {
    var elem = elems[0];

    if (not) {
      expr = ":not(" + expr + ")";
    }

    if (elems.length === 1 && elem.nodeType === 1) {
      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
    }

    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
      return elem.nodeType === 1;
    }));
  };

  jQuery.fn.extend({
    find: function find(selector) {
      var i,
          ret,
          len = this.length,
          self = this;

      if (typeof selector !== "string") {
        return this.pushStack(jQuery(selector).filter(function () {
          for (i = 0; i < len; i++) {
            if (jQuery.contains(self[i], this)) {
              return true;
            }
          }
        }));
      }

      ret = this.pushStack([]);

      for (i = 0; i < len; i++) {
        jQuery.find(selector, self[i], ret);
      }

      return len > 1 ? jQuery.uniqueSort(ret) : ret;
    },
    filter: function filter(selector) {
      return this.pushStack(winnow(this, selector || [], false));
    },
    not: function not(selector) {
      return this.pushStack(winnow(this, selector || [], true));
    },
    is: function is(selector) {
      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set
      // so $("p:first").is("p:last") won't return true for a doc with two "p".
      typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
    }
  }); // Initialize a jQuery object
  // A central reference to the root jQuery(document)

  var rootjQuery,
      // A simple way to check for HTML strings
  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
  // Strict HTML recognition (#11290: must start with <)
  // Shortcut simple #id case for speed
  rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
      init = jQuery.fn.init = function (selector, context, root) {
    var match, elem; // HANDLE: $(""), $(null), $(undefined), $(false)

    if (!selector) {
      return this;
    } // Method init() accepts an alternate rootjQuery
    // so migrate can support jQuery.sub (gh-2101)


    root = root || rootjQuery; // Handle HTML strings

    if (typeof selector === "string") {
      if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
        // Assume that strings that start and end with <> are HTML and skip the regex check
        match = [null, selector, null];
      } else {
        match = rquickExpr.exec(selector);
      } // Match html or make sure no context is specified for #id


      if (match && (match[1] || !context)) {
        // HANDLE: $(html) -> $(array)
        if (match[1]) {
          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat
          // Intentionally let the error be thrown if parseHTML is not present

          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)

          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
            for (match in context) {
              // Properties of context are called as methods if possible
              if (isFunction(this[match])) {
                this[match](context[match]); // ...and otherwise set as attributes
              } else {
                this.attr(match, context[match]);
              }
            }
          }

          return this; // HANDLE: $(#id)
        } else {
          elem = document.getElementById(match[2]);

          if (elem) {
            // Inject the element directly into the jQuery object
            this[0] = elem;
            this.length = 1;
          }

          return this;
        } // HANDLE: $(expr, $(...))

      } else if (!context || context.jquery) {
        return (context || root).find(selector); // HANDLE: $(expr, context)
        // (which is just equivalent to: $(context).find(expr)
      } else {
        return this.constructor(context).find(selector);
      } // HANDLE: $(DOMElement)

    } else if (selector.nodeType) {
      this[0] = selector;
      this.length = 1;
      return this; // HANDLE: $(function)
      // Shortcut for document ready
    } else if (isFunction(selector)) {
      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present
      selector(jQuery);
    }

    return jQuery.makeArray(selector, this);
  }; // Give the init function the jQuery prototype for later instantiation


  init.prototype = jQuery.fn; // Initialize central reference

  rootjQuery = jQuery(document);
  var rparentsprev = /^(?:parents|prev(?:Until|All))/,
      // Methods guaranteed to produce a unique set when starting from a unique set
  guaranteedUnique = {
    children: true,
    contents: true,
    next: true,
    prev: true
  };
  jQuery.fn.extend({
    has: function has(target) {
      var targets = jQuery(target, this),
          l = targets.length;
      return this.filter(function () {
        var i = 0;

        for (; i < l; i++) {
          if (jQuery.contains(this, targets[i])) {
            return true;
          }
        }
      });
    },
    closest: function closest(selectors, context) {
      var cur,
          i = 0,
          l = this.length,
          matched = [],
          targets = typeof selectors !== "string" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context

      if (!rneedsContext.test(selectors)) {
        for (; i < l; i++) {
          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
            // Always skip document fragments
            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle
            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
              matched.push(cur);
              break;
            }
          }
        }
      }

      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
    },
    // Determine the position of an element within the set
    index: function index(elem) {
      // No argument, return index in parent
      if (!elem) {
        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
      } // Index in selector


      if (typeof elem === "string") {
        return indexOf.call(jQuery(elem), this[0]);
      } // Locate the position of the desired element


      return indexOf.call(this, // If it receives a jQuery object, the first element is used
      elem.jquery ? elem[0] : elem);
    },
    add: function add(selector, context) {
      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
    },
    addBack: function addBack(selector) {
      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
    }
  });

  function sibling(cur, dir) {
    while ((cur = cur[dir]) && cur.nodeType !== 1) {}

    return cur;
  }

  jQuery.each({
    parent: function parent(elem) {
      var parent = elem.parentNode;
      return parent && parent.nodeType !== 11 ? parent : null;
    },
    parents: function parents(elem) {
      return dir(elem, "parentNode");
    },
    parentsUntil: function parentsUntil(elem, _i, until) {
      return dir(elem, "parentNode", until);
    },
    next: function next(elem) {
      return sibling(elem, "nextSibling");
    },
    prev: function prev(elem) {
      return sibling(elem, "previousSibling");
    },
    nextAll: function nextAll(elem) {
      return dir(elem, "nextSibling");
    },
    prevAll: function prevAll(elem) {
      return dir(elem, "previousSibling");
    },
    nextUntil: function nextUntil(elem, _i, until) {
      return dir(elem, "nextSibling", until);
    },
    prevUntil: function prevUntil(elem, _i, until) {
      return dir(elem, "previousSibling", until);
    },
    siblings: function siblings(elem) {
      return _siblings((elem.parentNode || {}).firstChild, elem);
    },
    children: function children(elem) {
      return _siblings(elem.firstChild);
    },
    contents: function contents(elem) {
      if (elem.contentDocument != null && // Support: IE 11+
      // <object> elements with no `data` attribute has an object
      // `contentDocument` with a `null` prototype.
      getProto(elem.contentDocument)) {
        return elem.contentDocument;
      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
      // Treat the template element as a regular one in browsers that
      // don't support it.


      if (nodeName(elem, "template")) {
        elem = elem.content || elem;
      }

      return jQuery.merge([], elem.childNodes);
    }
  }, function (name, fn) {
    jQuery.fn[name] = function (until, selector) {
      var matched = jQuery.map(this, fn, until);

      if (name.slice(-5) !== "Until") {
        selector = until;
      }

      if (selector && typeof selector === "string") {
        matched = jQuery.filter(selector, matched);
      }

      if (this.length > 1) {
        // Remove duplicates
        if (!guaranteedUnique[name]) {
          jQuery.uniqueSort(matched);
        } // Reverse order for parents* and prev-derivatives


        if (rparentsprev.test(name)) {
          matched.reverse();
        }
      }

      return this.pushStack(matched);
    };
  });
  var rnothtmlwhite = /[^\x20\t\r\n\f]+/g; // Convert String-formatted options into Object-formatted ones

  function createOptions(options) {
    var object = {};
    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
      object[flag] = true;
    });
    return object;
  }
  /*
   * Create a callback list using the following parameters:
   *
   *	options: an optional list of space-separated options that will change how
   *			the callback list behaves or a more traditional option object
   *
   * By default a callback list will act like an event callback list and can be
   * "fired" multiple times.
   *
   * Possible options:
   *
   *	once:			will ensure the callback list can only be fired once (like a Deferred)
   *
   *	memory:			will keep track of previous values and will call any callback added
   *					after the list has been fired right away with the latest "memorized"
   *					values (like a Deferred)
   *
   *	unique:			will ensure a callback can only be added once (no duplicate in the list)
   *
   *	stopOnFalse:	interrupt callings when a callback returns false
   *
   */


  jQuery.Callbacks = function (options) {
    // Convert options from String-formatted to Object-formatted if needed
    // (we check in cache first)
    options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);

    var // Flag to know if list is currently firing
    firing,
        // Last fire value for non-forgettable lists
    memory,
        // Flag to know if list was already fired
    _fired,
        // Flag to prevent firing
    _locked,
        // Actual callback list
    list = [],
        // Queue of execution data for repeatable lists
    queue = [],
        // Index of currently firing callback (modified by add/remove as needed)
    firingIndex = -1,
        // Fire callbacks
    fire = function fire() {
      // Enforce single-firing
      _locked = _locked || options.once; // Execute callbacks for all pending executions,
      // respecting firingIndex overrides and runtime changes

      _fired = firing = true;

      for (; queue.length; firingIndex = -1) {
        memory = queue.shift();

        while (++firingIndex < list.length) {
          // Run callback and check for early termination
          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
            // Jump to end and forget the data so .add doesn't re-fire
            firingIndex = list.length;
            memory = false;
          }
        }
      } // Forget the data if we're done with it


      if (!options.memory) {
        memory = false;
      }

      firing = false; // Clean up if we're done firing for good

      if (_locked) {
        // Keep an empty list if we have data for future add calls
        if (memory) {
          list = []; // Otherwise, this object is spent
        } else {
          list = "";
        }
      }
    },
        // Actual Callbacks object
    self = {
      // Add a callback or a collection of callbacks to the list
      add: function add() {
        if (list) {
          // If we have memory from a past run, we should fire after adding
          if (memory && !firing) {
            firingIndex = list.length - 1;
            queue.push(memory);
          }

          (function add(args) {
            jQuery.each(args, function (_, arg) {
              if (isFunction(arg)) {
                if (!options.unique || !self.has(arg)) {
                  list.push(arg);
                }
              } else if (arg && arg.length && toType(arg) !== "string") {
                // Inspect recursively
                add(arg);
              }
            });
          })(arguments);

          if (memory && !firing) {
            fire();
          }
        }

        return this;
      },
      // Remove a callback from the list
      remove: function remove() {
        jQuery.each(arguments, function (_, arg) {
          var index;

          while ((index = jQuery.inArray(arg, list, index)) > -1) {
            list.splice(index, 1); // Handle firing indexes

            if (index <= firingIndex) {
              firingIndex--;
            }
          }
        });
        return this;
      },
      // Check if a given callback is in the list.
      // If no argument is given, return whether or not list has callbacks attached.
      has: function has(fn) {
        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
      },
      // Remove all callbacks from the list
      empty: function empty() {
        if (list) {
          list = [];
        }

        return this;
      },
      // Disable .fire and .add
      // Abort any current/pending executions
      // Clear all callbacks and values
      disable: function disable() {
        _locked = queue = [];
        list = memory = "";
        return this;
      },
      disabled: function disabled() {
        return !list;
      },
      // Disable .fire
      // Also disable .add unless we have memory (since it would have no effect)
      // Abort any pending executions
      lock: function lock() {
        _locked = queue = [];

        if (!memory && !firing) {
          list = memory = "";
        }

        return this;
      },
      locked: function locked() {
        return !!_locked;
      },
      // Call all callbacks with the given context and arguments
      fireWith: function fireWith(context, args) {
        if (!_locked) {
          args = args || [];
          args = [context, args.slice ? args.slice() : args];
          queue.push(args);

          if (!firing) {
            fire();
          }
        }

        return this;
      },
      // Call all the callbacks with the given arguments
      fire: function fire() {
        self.fireWith(this, arguments);
        return this;
      },
      // To know if the callbacks have already been called at least once
      fired: function fired() {
        return !!_fired;
      }
    };

    return self;
  };

  function Identity(v) {
    return v;
  }

  function Thrower(ex) {
    throw ex;
  }

  function adoptValue(value, resolve, reject, noValue) {
    var method;

    try {
      // Check for promise aspect first to privilege synchronous behavior
      if (value && isFunction(method = value.promise)) {
        method.call(value).done(resolve).fail(reject); // Other thenables
      } else if (value && isFunction(method = value.then)) {
        method.call(value, resolve, reject); // Other non-thenables
      } else {
        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
        // * false: [ value ].slice( 0 ) => resolve( value )
        // * true: [ value ].slice( 1 ) => resolve()
        resolve.apply(undefined, [value].slice(noValue));
      } // For Promises/A+, convert exceptions into rejections
      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
      // Deferred#then to conditionally suppress rejection.

    } catch (value) {
      // Support: Android 4.0 only
      // Strict mode functions invoked without .call/.apply get global-object context
      reject.apply(undefined, [value]);
    }
  }

  jQuery.extend({
    Deferred: function Deferred(func) {
      var tuples = [// action, add listener, callbacks,
      // ... .then handlers, argument index, [final state]
      ["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2], ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"]],
          _state = "pending",
          _promise = {
        state: function state() {
          return _state;
        },
        always: function always() {
          deferred.done(arguments).fail(arguments);
          return this;
        },
        "catch": function _catch(fn) {
          return _promise.then(null, fn);
        },
        // Keep pipe for back-compat
        pipe: function pipe()
        /* fnDone, fnFail, fnProgress */
        {
          var fns = arguments;
          return jQuery.Deferred(function (newDefer) {
            jQuery.each(tuples, function (_i, tuple) {
              // Map tuples (progress, done, fail) to arguments (done, fail, progress)
              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })
              // deferred.done(function() { bind to newDefer or newDefer.resolve })
              // deferred.fail(function() { bind to newDefer or newDefer.reject })

              deferred[tuple[1]](function () {
                var returned = fn && fn.apply(this, arguments);

                if (returned && isFunction(returned.promise)) {
                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                } else {
                  newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments);
                }
              });
            });
            fns = null;
          }).promise();
        },
        then: function then(onFulfilled, onRejected, onProgress) {
          var maxDepth = 0;

          function resolve(depth, deferred, handler, special) {
            return function () {
              var that = this,
                  args = arguments,
                  mightThrow = function mightThrow() {
                var returned, then; // Support: Promises/A+ section 2.3.3.3.3
                // https://promisesaplus.com/#point-59
                // Ignore double-resolution attempts

                if (depth < maxDepth) {
                  return;
                }

                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1
                // https://promisesaplus.com/#point-48

                if (returned === deferred.promise()) {
                  throw new TypeError("Thenable self-resolution");
                } // Support: Promises/A+ sections 2.3.3.1, 3.5
                // https://promisesaplus.com/#point-54
                // https://promisesaplus.com/#point-75
                // Retrieve `then` only once


                then = returned && ( // Support: Promises/A+ section 2.3.4
                // https://promisesaplus.com/#point-64
                // Only check objects and functions for thenability
                _typeof(returned) === "object" || typeof returned === "function") && returned.then; // Handle a returned thenable

                if (isFunction(then)) {
                  // Special processors (notify) just wait for resolution
                  if (special) {
                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress
                  } else {
                    // ...and disregard older resolution values
                    maxDepth++;
                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
                  } // Handle all other returned values

                } else {
                  // Only substitute handlers pass on context
                  // and multiple values (non-spec behavior)
                  if (handler !== Identity) {
                    that = undefined;
                    args = [returned];
                  } // Process the value(s)
                  // Default process is resolve


                  (special || deferred.resolveWith)(that, args);
                }
              },
                  // Only normal processors (resolve) catch and reject exceptions
              process = special ? mightThrow : function () {
                try {
                  mightThrow();
                } catch (e) {
                  if (jQuery.Deferred.exceptionHook) {
                    jQuery.Deferred.exceptionHook(e, process.stackTrace);
                  } // Support: Promises/A+ section 2.3.3.3.4.1
                  // https://promisesaplus.com/#point-61
                  // Ignore post-resolution exceptions


                  if (depth + 1 >= maxDepth) {
                    // Only substitute handlers pass on context
                    // and multiple values (non-spec behavior)
                    if (handler !== Thrower) {
                      that = undefined;
                      args = [e];
                    }

                    deferred.rejectWith(that, args);
                  }
                }
              }; // Support: Promises/A+ section 2.3.3.3.1
              // https://promisesaplus.com/#point-57
              // Re-resolve promises immediately to dodge false rejection from
              // subsequent errors


              if (depth) {
                process();
              } else {
                // Call an optional hook to record the stack, in case of exception
                // since it's otherwise lost when execution goes async
                if (jQuery.Deferred.getStackHook) {
                  process.stackTrace = jQuery.Deferred.getStackHook();
                }

                window.setTimeout(process);
              }
            };
          }

          return jQuery.Deferred(function (newDefer) {
            // progress_handlers.add( ... )
            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )

            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )

            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
          }).promise();
        },
        // Get a promise for this deferred
        // If obj is provided, the promise aspect is added to the object
        promise: function promise(obj) {
          return obj != null ? jQuery.extend(obj, _promise) : _promise;
        }
      },
          deferred = {}; // Add list-specific methods

      jQuery.each(tuples, function (i, tuple) {
        var list = tuple[2],
            stateString = tuple[5]; // promise.progress = list.add
        // promise.done = list.add
        // promise.fail = list.add

        _promise[tuple[1]] = list.add; // Handle state

        if (stateString) {
          list.add(function () {
            // state = "resolved" (i.e., fulfilled)
            // state = "rejected"
            _state = stateString;
          }, // rejected_callbacks.disable
          // fulfilled_callbacks.disable
          tuples[3 - i][2].disable, // rejected_handlers.disable
          // fulfilled_handlers.disable
          tuples[3 - i][3].disable, // progress_callbacks.lock
          tuples[0][2].lock, // progress_handlers.lock
          tuples[0][3].lock);
        } // progress_handlers.fire
        // fulfilled_handlers.fire
        // rejected_handlers.fire


        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }
        // deferred.resolve = function() { deferred.resolveWith(...) }
        // deferred.reject = function() { deferred.rejectWith(...) }

        deferred[tuple[0]] = function () {
          deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);
          return this;
        }; // deferred.notifyWith = list.fireWith
        // deferred.resolveWith = list.fireWith
        // deferred.rejectWith = list.fireWith


        deferred[tuple[0] + "With"] = list.fireWith;
      }); // Make the deferred a promise

      _promise.promise(deferred); // Call given func if any


      if (func) {
        func.call(deferred, deferred);
      } // All done!


      return deferred;
    },
    // Deferred helper
    when: function when(singleValue) {
      var // count of uncompleted subordinates
      remaining = arguments.length,
          // count of unprocessed arguments
      i = remaining,
          // subordinate fulfillment data
      resolveContexts = Array(i),
          resolveValues = _slice.call(arguments),
          // the master Deferred
      master = jQuery.Deferred(),
          // subordinate callback factory
      updateFunc = function updateFunc(i) {
        return function (value) {
          resolveContexts[i] = this;
          resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;

          if (! --remaining) {
            master.resolveWith(resolveContexts, resolveValues);
          }
        };
      }; // Single- and empty arguments are adopted like Promise.resolve


      if (remaining <= 1) {
        adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)

        if (master.state() === "pending" || isFunction(resolveValues[i] && resolveValues[i].then)) {
          return master.then();
        }
      } // Multiple arguments are aggregated like Promise.all array elements


      while (i--) {
        adoptValue(resolveValues[i], updateFunc(i), master.reject);
      }

      return master.promise();
    }
  }); // These usually indicate a programmer mistake during development,
  // warn about them ASAP rather than swallowing them by default.

  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

  jQuery.Deferred.exceptionHook = function (error, stack) {
    // Support: IE 8 - 9 only
    // Console exists when dev tools are open, which can happen at any time
    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {
      window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
    }
  };

  jQuery.readyException = function (error) {
    window.setTimeout(function () {
      throw error;
    });
  }; // The deferred used on DOM ready


  var readyList = jQuery.Deferred();

  jQuery.fn.ready = function (fn) {
    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup
    // happens at the time of error handling instead of callback
    // registration.
    .catch(function (error) {
      jQuery.readyException(error);
    });
    return this;
  };

  jQuery.extend({
    // Is the DOM ready to be used? Set to true once it occurs.
    isReady: false,
    // A counter to track how many items to wait for before
    // the ready event fires. See #6781
    readyWait: 1,
    // Handle when the DOM is ready
    ready: function ready(wait) {
      // Abort if there are pending holds or we're already ready
      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
        return;
      } // Remember that the DOM is ready


      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be

      if (wait !== true && --jQuery.readyWait > 0) {
        return;
      } // If there are functions bound, to execute


      readyList.resolveWith(document, [jQuery]);
    }
  });
  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method

  function completed() {
    document.removeEventListener("DOMContentLoaded", completed);
    window.removeEventListener("load", completed);
    jQuery.ready();
  } // Catch cases where $(document).ready() is called
  // after the browser event has already occurred.
  // Support: IE <=9 - 10 only
  // Older IE sometimes signals "interactive" too soon


  if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {
    // Handle it asynchronously to allow scripts the opportunity to delay ready
    window.setTimeout(jQuery.ready);
  } else {
    // Use the handy event callback
    document.addEventListener("DOMContentLoaded", completed); // A fallback to window.onload, that will always work

    window.addEventListener("load", completed);
  } // Multifunctional method to get and set values of a collection
  // The value/s can optionally be executed if it's a function


  var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {
    var i = 0,
        len = elems.length,
        bulk = key == null; // Sets many values

    if (toType(key) === "object") {
      chainable = true;

      for (i in key) {
        access(elems, fn, i, key[i], true, emptyGet, raw);
      } // Sets one value

    } else if (value !== undefined) {
      chainable = true;

      if (!isFunction(value)) {
        raw = true;
      }

      if (bulk) {
        // Bulk operations run against the entire set
        if (raw) {
          fn.call(elems, value);
          fn = null; // ...except when executing function values
        } else {
          bulk = fn;

          fn = function fn(elem, _key, value) {
            return bulk.call(jQuery(elem), value);
          };
        }
      }

      if (fn) {
        for (; i < len; i++) {
          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
        }
      }
    }

    if (chainable) {
      return elems;
    } // Gets


    if (bulk) {
      return fn.call(elems);
    }

    return len ? fn(elems[0], key) : emptyGet;
  }; // Matches dashed string for camelizing


  var rmsPrefix = /^-ms-/,
      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()

  function fcamelCase(_all, letter) {
    return letter.toUpperCase();
  } // Convert dashed to camelCase; used by the css and data modules
  // Support: IE <=9 - 11, Edge 12 - 15
  // Microsoft forgot to hump their vendor prefix (#9572)


  function camelCase(string) {
    return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
  }

  var acceptData = function acceptData(owner) {
    // Accepts only:
    //  - Node
    //    - Node.ELEMENT_NODE
    //    - Node.DOCUMENT_NODE
    //  - Object
    //    - Any
    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
  };

  function Data() {
    this.expando = jQuery.expando + Data.uid++;
  }

  Data.uid = 1;
  Data.prototype = {
    cache: function cache(owner) {
      // Check if the owner object already has a cache
      var value = owner[this.expando]; // If not, create one

      if (!value) {
        value = {}; // We can accept data for non-element nodes in modern browsers,
        // but we should not, see #8335.
        // Always return an empty object.

        if (acceptData(owner)) {
          // If it is a node unlikely to be stringify-ed or looped over
          // use plain assignment
          if (owner.nodeType) {
            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property
            // configurable must be true to allow the property to be
            // deleted when data is removed
          } else {
            Object.defineProperty(owner, this.expando, {
              value: value,
              configurable: true
            });
          }
        }
      }

      return value;
    },
    set: function set(owner, data, value) {
      var prop,
          cache = this.cache(owner); // Handle: [ owner, key, value ] args
      // Always use camelCase key (gh-2257)

      if (typeof data === "string") {
        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args
      } else {
        // Copy the properties one-by-one to the cache object
        for (prop in data) {
          cache[camelCase(prop)] = data[prop];
        }
      }

      return cache;
    },
    get: function get(owner, key) {
      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)
      owner[this.expando] && owner[this.expando][camelCase(key)];
    },
    access: function access(owner, key, value) {
      // In cases where either:
      //
      //   1. No key was specified
      //   2. A string key was specified, but no value provided
      //
      // Take the "read" path and allow the get method to determine
      // which value to return, respectively either:
      //
      //   1. The entire cache object
      //   2. The data stored at the key
      //
      if (key === undefined || key && typeof key === "string" && value === undefined) {
        return this.get(owner, key);
      } // When the key is not a string, or both a key and value
      // are specified, set or extend (existing objects) with either:
      //
      //   1. An object of properties
      //   2. A key and value
      //


      this.set(owner, key, value); // Since the "set" path can have two possible entry points
      // return the expected data based on which path was taken[*]

      return value !== undefined ? value : key;
    },
    remove: function remove(owner, key) {
      var i,
          cache = owner[this.expando];

      if (cache === undefined) {
        return;
      }

      if (key !== undefined) {
        // Support array or space separated string of keys
        if (Array.isArray(key)) {
          // If key is an array of keys...
          // We always set camelCase keys, so remove that.
          key = key.map(camelCase);
        } else {
          key = camelCase(key); // If a key with the spaces exists, use it.
          // Otherwise, create an array by matching non-whitespace

          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
        }

        i = key.length;

        while (i--) {
          delete cache[key[i]];
        }
      } // Remove the expando if there's no more data


      if (key === undefined || jQuery.isEmptyObject(cache)) {
        // Support: Chrome <=35 - 45
        // Webkit & Blink performance suffers when deleting properties
        // from DOM nodes, so set to undefined instead
        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
        if (owner.nodeType) {
          owner[this.expando] = undefined;
        } else {
          delete owner[this.expando];
        }
      }
    },
    hasData: function hasData(owner) {
      var cache = owner[this.expando];
      return cache !== undefined && !jQuery.isEmptyObject(cache);
    }
  };
  var dataPriv = new Data();
  var dataUser = new Data(); //	Implementation Summary
  //
  //	1. Enforce API surface and semantic compatibility with 1.9.x branch
  //	2. Improve the module's maintainability by reducing the storage
  //		paths to a single mechanism.
  //	3. Use the same single mechanism to support "private" and "user" data.
  //	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
  //	5. Avoid exposing implementation details on user objects (eg. expando properties)
  //	6. Provide a clear path for implementation upgrade to WeakMap in 2014

  var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      rmultiDash = /[A-Z]/g;

  function getData(data) {
    if (data === "true") {
      return true;
    }

    if (data === "false") {
      return false;
    }

    if (data === "null") {
      return null;
    } // Only convert to a number if it doesn't change the string


    if (data === +data + "") {
      return +data;
    }

    if (rbrace.test(data)) {
      return JSON.parse(data);
    }

    return data;
  }

  function dataAttr(elem, key, data) {
    var name; // If nothing was found internally, try to fetch any
    // data from the HTML5 data-* attribute

    if (data === undefined && elem.nodeType === 1) {
      name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
      data = elem.getAttribute(name);

      if (typeof data === "string") {
        try {
          data = getData(data);
        } catch (e) {} // Make sure we set the data so it isn't changed later


        dataUser.set(elem, key, data);
      } else {
        data = undefined;
      }
    }

    return data;
  }

  jQuery.extend({
    hasData: function hasData(elem) {
      return dataUser.hasData(elem) || dataPriv.hasData(elem);
    },
    data: function data(elem, name, _data) {
      return dataUser.access(elem, name, _data);
    },
    removeData: function removeData(elem, name) {
      dataUser.remove(elem, name);
    },
    // TODO: Now that all calls to _data and _removeData have been replaced
    // with direct calls to dataPriv methods, these can be deprecated.
    _data: function _data(elem, name, data) {
      return dataPriv.access(elem, name, data);
    },
    _removeData: function _removeData(elem, name) {
      dataPriv.remove(elem, name);
    }
  });
  jQuery.fn.extend({
    data: function data(key, value) {
      var i,
          name,
          data,
          elem = this[0],
          attrs = elem && elem.attributes; // Gets all values

      if (key === undefined) {
        if (this.length) {
          data = dataUser.get(elem);

          if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
            i = attrs.length;

            while (i--) {
              // Support: IE 11 only
              // The attrs elements can be null (#14894)
              if (attrs[i]) {
                name = attrs[i].name;

                if (name.indexOf("data-") === 0) {
                  name = camelCase(name.slice(5));
                  dataAttr(elem, name, data[name]);
                }
              }
            }

            dataPriv.set(elem, "hasDataAttrs", true);
          }
        }

        return data;
      } // Sets multiple values


      if (_typeof(key) === "object") {
        return this.each(function () {
          dataUser.set(this, key);
        });
      }

      return access(this, function (value) {
        var data; // The calling jQuery object (element matches) is not empty
        // (and therefore has an element appears at this[ 0 ]) and the
        // `value` parameter was not undefined. An empty jQuery object
        // will result in `undefined` for elem = this[ 0 ] which will
        // throw an exception if an attempt to read a data cache is made.

        if (elem && value === undefined) {
          // Attempt to get data from the cache
          // The key will always be camelCased in Data
          data = dataUser.get(elem, key);

          if (data !== undefined) {
            return data;
          } // Attempt to "discover" the data in
          // HTML5 custom data-* attrs


          data = dataAttr(elem, key);

          if (data !== undefined) {
            return data;
          } // We tried really hard, but the data doesn't exist.


          return;
        } // Set the data...


        this.each(function () {
          // We always store the camelCased key
          dataUser.set(this, key, value);
        });
      }, null, value, arguments.length > 1, null, true);
    },
    removeData: function removeData(key) {
      return this.each(function () {
        dataUser.remove(this, key);
      });
    }
  });
  jQuery.extend({
    queue: function queue(elem, type, data) {
      var queue;

      if (elem) {
        type = (type || "fx") + "queue";
        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup

        if (data) {
          if (!queue || Array.isArray(data)) {
            queue = dataPriv.access(elem, type, jQuery.makeArray(data));
          } else {
            queue.push(data);
          }
        }

        return queue || [];
      }
    },
    dequeue: function dequeue(elem, type) {
      type = type || "fx";

      var queue = jQuery.queue(elem, type),
          startLength = queue.length,
          fn = queue.shift(),
          hooks = jQuery._queueHooks(elem, type),
          next = function next() {
        jQuery.dequeue(elem, type);
      }; // If the fx queue is dequeued, always remove the progress sentinel


      if (fn === "inprogress") {
        fn = queue.shift();
        startLength--;
      }

      if (fn) {
        // Add a progress sentinel to prevent the fx queue from being
        // automatically dequeued
        if (type === "fx") {
          queue.unshift("inprogress");
        } // Clear up the last queue stop function


        delete hooks.stop;
        fn.call(elem, next, hooks);
      }

      if (!startLength && hooks) {
        hooks.empty.fire();
      }
    },
    // Not public - generate a queueHooks object, or return the current one
    _queueHooks: function _queueHooks(elem, type) {
      var key = type + "queueHooks";
      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
        empty: jQuery.Callbacks("once memory").add(function () {
          dataPriv.remove(elem, [type + "queue", key]);
        })
      });
    }
  });
  jQuery.fn.extend({
    queue: function queue(type, data) {
      var setter = 2;

      if (typeof type !== "string") {
        data = type;
        type = "fx";
        setter--;
      }

      if (arguments.length < setter) {
        return jQuery.queue(this[0], type);
      }

      return data === undefined ? this : this.each(function () {
        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue

        jQuery._queueHooks(this, type);

        if (type === "fx" && queue[0] !== "inprogress") {
          jQuery.dequeue(this, type);
        }
      });
    },
    dequeue: function dequeue(type) {
      return this.each(function () {
        jQuery.dequeue(this, type);
      });
    },
    clearQueue: function clearQueue(type) {
      return this.queue(type || "fx", []);
    },
    // Get a promise resolved when queues of a certain type
    // are emptied (fx is the type by default)
    promise: function promise(type, obj) {
      var tmp,
          count = 1,
          defer = jQuery.Deferred(),
          elements = this,
          i = this.length,
          resolve = function resolve() {
        if (! --count) {
          defer.resolveWith(elements, [elements]);
        }
      };

      if (typeof type !== "string") {
        obj = type;
        type = undefined;
      }

      type = type || "fx";

      while (i--) {
        tmp = dataPriv.get(elements[i], type + "queueHooks");

        if (tmp && tmp.empty) {
          count++;
          tmp.empty.add(resolve);
        }
      }

      resolve();
      return defer.promise(obj);
    }
  });
  var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
  var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
  var cssExpand = ["Top", "Right", "Bottom", "Left"];
  var documentElement = document.documentElement;

  var isAttached = function isAttached(elem) {
    return jQuery.contains(elem.ownerDocument, elem);
  },
      composed = {
    composed: true
  }; // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
  // Check attachment across shadow DOM boundaries when possible (gh-3504)
  // Support: iOS 10.0-10.2 only
  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,
  // leading to errors. We need to check for `getRootNode`.


  if (documentElement.getRootNode) {
    isAttached = function isAttached(elem) {
      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
    };
  }

  var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {
    // isHiddenWithinTree might be called from jQuery#filter function;
    // in that case, element will be second argument
    elem = el || elem; // Inline style trumps all

    return elem.style.display === "none" || elem.style.display === "" && // Otherwise, check computed style
    // Support: Firefox <=43 - 45
    // Disconnected elements can have computed display: none, so first confirm that elem is
    // in the document.
    isAttached(elem) && jQuery.css(elem, "display") === "none";
  };

  function adjustCSS(elem, prop, valueParts, tween) {
    var adjusted,
        scale,
        maxIterations = 20,
        currentValue = tween ? function () {
      return tween.cur();
    } : function () {
      return jQuery.css(elem, prop, "");
    },
        initial = currentValue(),
        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
        // Starting value computation is required for potential unit mismatches
    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));

    if (initialInUnit && initialInUnit[3] !== unit) {
      // Support: Firefox <=54
      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
      initial = initial / 2; // Trust units reported by jQuery.css

      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point

      initialInUnit = +initial || 1;

      while (maxIterations--) {
        // Evaluate and update our best guess (doubling guesses that zero out).
        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).
        jQuery.style(elem, prop, initialInUnit + unit);

        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
          maxIterations = 0;
        }

        initialInUnit = initialInUnit / scale;
      }

      initialInUnit = initialInUnit * 2;
      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on

      valueParts = valueParts || [];
    }

    if (valueParts) {
      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified

      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];

      if (tween) {
        tween.unit = unit;
        tween.start = initialInUnit;
        tween.end = adjusted;
      }
    }

    return adjusted;
  }

  var defaultDisplayMap = {};

  function getDefaultDisplay(elem) {
    var temp,
        doc = elem.ownerDocument,
        nodeName = elem.nodeName,
        display = defaultDisplayMap[nodeName];

    if (display) {
      return display;
    }

    temp = doc.body.appendChild(doc.createElement(nodeName));
    display = jQuery.css(temp, "display");
    temp.parentNode.removeChild(temp);

    if (display === "none") {
      display = "block";
    }

    defaultDisplayMap[nodeName] = display;
    return display;
  }

  function showHide(elements, show) {
    var display,
        elem,
        values = [],
        index = 0,
        length = elements.length; // Determine new display value for elements that need to change

    for (; index < length; index++) {
      elem = elements[index];

      if (!elem.style) {
        continue;
      }

      display = elem.style.display;

      if (show) {
        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)
        // check is required in this first loop unless we have a nonempty display value (either
        // inline or about-to-be-restored)
        if (display === "none") {
          values[index] = dataPriv.get(elem, "display") || null;

          if (!values[index]) {
            elem.style.display = "";
          }
        }

        if (elem.style.display === "" && isHiddenWithinTree(elem)) {
          values[index] = getDefaultDisplay(elem);
        }
      } else {
        if (display !== "none") {
          values[index] = "none"; // Remember what we're overwriting

          dataPriv.set(elem, "display", display);
        }
      }
    } // Set the display of the elements in a second loop to avoid constant reflow


    for (index = 0; index < length; index++) {
      if (values[index] != null) {
        elements[index].style.display = values[index];
      }
    }

    return elements;
  }

  jQuery.fn.extend({
    show: function show() {
      return showHide(this, true);
    },
    hide: function hide() {
      return showHide(this);
    },
    toggle: function toggle(state) {
      if (typeof state === "boolean") {
        return state ? this.show() : this.hide();
      }

      return this.each(function () {
        if (isHiddenWithinTree(this)) {
          jQuery(this).show();
        } else {
          jQuery(this).hide();
        }
      });
    }
  });
  var rcheckableType = /^(?:checkbox|radio)$/i;
  var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
  var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;

  (function () {
    var fragment = document.createDocumentFragment(),
        div = fragment.appendChild(document.createElement("div")),
        input = document.createElement("input"); // Support: Android 4.0 - 4.3 only
    // Check state lost if the name is set (#11217)
    // Support: Windows Web Apps (WWA)
    // `name` and `type` must use .setAttribute for WWA (#14901)

    input.setAttribute("type", "radio");
    input.setAttribute("checked", "checked");
    input.setAttribute("name", "t");
    div.appendChild(input); // Support: Android <=4.1 only
    // Older WebKit doesn't clone checked state correctly in fragments

    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only
    // Make sure textarea (and checkbox) defaultValue is properly cloned

    div.innerHTML = "<textarea>x</textarea>";
    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue; // Support: IE <=9 only
    // IE <=9 replaces <option> tags with their contents when inserted outside of
    // the select element.

    div.innerHTML = "<option></option>";
    support.option = !!div.lastChild;
  })(); // We have to close these tags to support XHTML (#13200)


  var wrapMap = {
    // XHTML parsers do not magically insert elements in the
    // same way that tag soup parsers do. So we cannot shorten
    // this by omitting <tbody> or other required elements.
    thead: [1, "<table>", "</table>"],
    col: [2, "<table><colgroup>", "</colgroup></table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: [0, "", ""]
  };
  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
  wrapMap.th = wrapMap.td; // Support: IE <=9 only

  if (!support.option) {
    wrapMap.optgroup = wrapMap.option = [1, "<select multiple='multiple'>", "</select>"];
  }

  function getAll(context, tag) {
    // Support: IE <=9 - 11 only
    // Use typeof to avoid zero-argument method invocation on host objects (#15151)
    var ret;

    if (typeof context.getElementsByTagName !== "undefined") {
      ret = context.getElementsByTagName(tag || "*");
    } else if (typeof context.querySelectorAll !== "undefined") {
      ret = context.querySelectorAll(tag || "*");
    } else {
      ret = [];
    }

    if (tag === undefined || tag && nodeName(context, tag)) {
      return jQuery.merge([context], ret);
    }

    return ret;
  } // Mark scripts as having already been evaluated


  function setGlobalEval(elems, refElements) {
    var i = 0,
        l = elems.length;

    for (; i < l; i++) {
      dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
    }
  }

  var rhtml = /<|&#?\w+;/;

  function buildFragment(elems, context, scripts, selection, ignored) {
    var elem,
        tmp,
        tag,
        wrap,
        attached,
        j,
        fragment = context.createDocumentFragment(),
        nodes = [],
        i = 0,
        l = elems.length;

    for (; i < l; i++) {
      elem = elems[i];

      if (elem || elem === 0) {
        // Add nodes directly
        if (toType(elem) === "object") {
          // Support: Android <=4.0 only, PhantomJS 1 only
          // push.apply(_, arraylike) throws on ancient WebKit
          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node
        } else if (!rhtml.test(elem)) {
          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes
        } else {
          tmp = tmp || fragment.appendChild(context.createElement("div")); // Deserialize a standard representation

          tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
          wrap = wrapMap[tag] || wrapMap._default;
          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content

          j = wrap[0];

          while (j--) {
            tmp = tmp.lastChild;
          } // Support: Android <=4.0 only, PhantomJS 1 only
          // push.apply(_, arraylike) throws on ancient WebKit


          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container

          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)

          tmp.textContent = "";
        }
      }
    } // Remove wrapper from fragment


    fragment.textContent = "";
    i = 0;

    while (elem = nodes[i++]) {
      // Skip elements already in the context collection (trac-4087)
      if (selection && jQuery.inArray(elem, selection) > -1) {
        if (ignored) {
          ignored.push(elem);
        }

        continue;
      }

      attached = isAttached(elem); // Append to fragment

      tmp = getAll(fragment.appendChild(elem), "script"); // Preserve script evaluation history

      if (attached) {
        setGlobalEval(tmp);
      } // Capture executables


      if (scripts) {
        j = 0;

        while (elem = tmp[j++]) {
          if (rscriptType.test(elem.type || "")) {
            scripts.push(elem);
          }
        }
      }
    }

    return fragment;
  }

  var rkeyEvent = /^key/,
      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
      rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

  function returnTrue() {
    return true;
  }

  function returnFalse() {
    return false;
  } // Support: IE <=9 - 11+
  // focus() and blur() are asynchronous, except when they are no-op.
  // So expect focus to be synchronous when the element is already active,
  // and blur to be synchronous when the element is not already active.
  // (focus and blur are always synchronous in other supported browsers,
  // this just defines when we can count on it).


  function expectSync(elem, type) {
    return elem === safeActiveElement() === (type === "focus");
  } // Support: IE <=9 only
  // Accessing document.activeElement can throw unexpectedly
  // https://bugs.jquery.com/ticket/13393


  function safeActiveElement() {
    try {
      return document.activeElement;
    } catch (err) {}
  }

  function _on(elem, types, selector, data, fn, one) {
    var origFn, type; // Types can be a map of types/handlers

    if (_typeof(types) === "object") {
      // ( types-Object, selector, data )
      if (typeof selector !== "string") {
        // ( types-Object, data )
        data = data || selector;
        selector = undefined;
      }

      for (type in types) {
        _on(elem, type, selector, data, types[type], one);
      }

      return elem;
    }

    if (data == null && fn == null) {
      // ( types, fn )
      fn = selector;
      data = selector = undefined;
    } else if (fn == null) {
      if (typeof selector === "string") {
        // ( types, selector, fn )
        fn = data;
        data = undefined;
      } else {
        // ( types, data, fn )
        fn = data;
        data = selector;
        selector = undefined;
      }
    }

    if (fn === false) {
      fn = returnFalse;
    } else if (!fn) {
      return elem;
    }

    if (one === 1) {
      origFn = fn;

      fn = function fn(event) {
        // Can use an empty set, since event contains the info
        jQuery().off(event);
        return origFn.apply(this, arguments);
      }; // Use same guid so caller can remove using origFn


      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
    }

    return elem.each(function () {
      jQuery.event.add(this, types, fn, data, selector);
    });
  }
  /*
   * Helper functions for managing events -- not part of the public interface.
   * Props to Dean Edwards' addEvent library for many of the ideas.
   */


  jQuery.event = {
    global: {},
    add: function add(elem, types, handler, data, selector) {
      var handleObjIn,
          eventHandle,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = dataPriv.get(elem); // Only attach events to objects that accept data

      if (!acceptData(elem)) {
        return;
      } // Caller can pass in an object of custom data in lieu of the handler


      if (handler.handler) {
        handleObjIn = handler;
        handler = handleObjIn.handler;
        selector = handleObjIn.selector;
      } // Ensure that invalid selectors throw exceptions at attach time
      // Evaluate against documentElement in case elem is a non-element node (e.g., document)


      if (selector) {
        jQuery.find.matchesSelector(documentElement, selector);
      } // Make sure that the handler has a unique ID, used to find/remove it later


      if (!handler.guid) {
        handler.guid = jQuery.guid++;
      } // Init the element's event structure and main handler, if this is the first


      if (!(events = elemData.events)) {
        events = elemData.events = Object.create(null);
      }

      if (!(eventHandle = elemData.handle)) {
        eventHandle = elemData.handle = function (e) {
          // Discard the second event of a jQuery.event.trigger() and
          // when an event is called after a page has unloaded
          return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
        };
      } // Handle multiple events separated by a space


      types = (types || "").match(rnothtmlwhite) || [""];
      t = types.length;

      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort(); // There *must* be a type, no attaching namespace-only handlers

        if (!type) {
          continue;
        } // If event changes its type, use the special event handlers for the changed type


        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type

        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type

        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers

        handleObj = jQuery.extend({
          type: type,
          origType: origType,
          data: data,
          handler: handler,
          guid: handler.guid,
          selector: selector,
          needsContext: selector && jQuery.expr.match.needsContext.test(selector),
          namespace: namespaces.join(".")
        }, handleObjIn); // Init the event handler queue if we're the first

        if (!(handlers = events[type])) {
          handlers = events[type] = [];
          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false

          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
            if (elem.addEventListener) {
              elem.addEventListener(type, eventHandle);
            }
          }
        }

        if (special.add) {
          special.add.call(elem, handleObj);

          if (!handleObj.handler.guid) {
            handleObj.handler.guid = handler.guid;
          }
        } // Add to the element's handler list, delegates in front


        if (selector) {
          handlers.splice(handlers.delegateCount++, 0, handleObj);
        } else {
          handlers.push(handleObj);
        } // Keep track of which events have ever been used, for event optimization


        jQuery.event.global[type] = true;
      }
    },
    // Detach an event or set of events from an element
    remove: function remove(elem, types, handler, selector, mappedTypes) {
      var j,
          origCount,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);

      if (!elemData || !(events = elemData.events)) {
        return;
      } // Once for each type.namespace in types; type may be omitted


      types = (types || "").match(rnothtmlwhite) || [""];
      t = types.length;

      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort(); // Unbind all events (on this namespace, if provided) for the element

        if (!type) {
          for (type in events) {
            jQuery.event.remove(elem, type + types[t], handler, selector, true);
          }

          continue;
        }

        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        handlers = events[type] || [];
        tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"); // Remove matching events

        origCount = j = handlers.length;

        while (j--) {
          handleObj = handlers[j];

          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
            handlers.splice(j, 1);

            if (handleObj.selector) {
              handlers.delegateCount--;
            }

            if (special.remove) {
              special.remove.call(elem, handleObj);
            }
          }
        } // Remove generic event handler if we removed something and no more handlers exist
        // (avoids potential for endless recursion during removal of special event handlers)


        if (origCount && !handlers.length) {
          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
            jQuery.removeEvent(elem, type, elemData.handle);
          }

          delete events[type];
        }
      } // Remove data and the expando if it's no longer used


      if (jQuery.isEmptyObject(events)) {
        dataPriv.remove(elem, "handle events");
      }
    },
    dispatch: function dispatch(nativeEvent) {
      var i,
          j,
          ret,
          matched,
          handleObj,
          handlerQueue,
          args = new Array(arguments.length),
          // Make a writable jQuery.Event from the native event object
      event = jQuery.event.fix(nativeEvent),
          handlers = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [],
          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event

      args[0] = event;

      for (i = 1; i < arguments.length; i++) {
        args[i] = arguments[i];
      }

      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired

      if (special.preDispatch && special.preDispatch.call(this, event) === false) {
        return;
      } // Determine handlers


      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us

      i = 0;

      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
        event.currentTarget = matched.elem;
        j = 0;

        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
          // If the event is namespaced, then each handler is only invoked if it is
          // specially universal or its namespaces are a superset of the event's.
          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {
            event.handleObj = handleObj;
            event.data = handleObj.data;
            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);

            if (ret !== undefined) {
              if ((event.result = ret) === false) {
                event.preventDefault();
                event.stopPropagation();
              }
            }
          }
        }
      } // Call the postDispatch hook for the mapped type


      if (special.postDispatch) {
        special.postDispatch.call(this, event);
      }

      return event.result;
    },
    handlers: function handlers(event, _handlers) {
      var i,
          handleObj,
          sel,
          matchedHandlers,
          matchedSelectors,
          handlerQueue = [],
          delegateCount = _handlers.delegateCount,
          cur = event.target; // Find delegate handlers

      if (delegateCount && // Support: IE <=9
      // Black-hole SVG <use> instance trees (trac-13180)
      cur.nodeType && // Support: Firefox <=42
      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
      // Support: IE 11 only
      // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
      !(event.type === "click" && event.button >= 1)) {
        for (; cur !== this; cur = cur.parentNode || this) {
          // Don't check non-elements (#13208)
          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
          if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {
            matchedHandlers = [];
            matchedSelectors = {};

            for (i = 0; i < delegateCount; i++) {
              handleObj = _handlers[i]; // Don't conflict with Object.prototype properties (#13203)

              sel = handleObj.selector + " ";

              if (matchedSelectors[sel] === undefined) {
                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
              }

              if (matchedSelectors[sel]) {
                matchedHandlers.push(handleObj);
              }
            }

            if (matchedHandlers.length) {
              handlerQueue.push({
                elem: cur,
                handlers: matchedHandlers
              });
            }
          }
        }
      } // Add the remaining (directly-bound) handlers


      cur = this;

      if (delegateCount < _handlers.length) {
        handlerQueue.push({
          elem: cur,
          handlers: _handlers.slice(delegateCount)
        });
      }

      return handlerQueue;
    },
    addProp: function addProp(name, hook) {
      Object.defineProperty(jQuery.Event.prototype, name, {
        enumerable: true,
        configurable: true,
        get: isFunction(hook) ? function () {
          if (this.originalEvent) {
            return hook(this.originalEvent);
          }
        } : function () {
          if (this.originalEvent) {
            return this.originalEvent[name];
          }
        },
        set: function set(value) {
          Object.defineProperty(this, name, {
            enumerable: true,
            configurable: true,
            writable: true,
            value: value
          });
        }
      });
    },
    fix: function fix(originalEvent) {
      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
    },
    special: {
      load: {
        // Prevent triggered image.load events from bubbling to window.load
        noBubble: true
      },
      click: {
        // Utilize native event to ensure correct state for checkable inputs
        setup: function setup(data) {
          // For mutual compressibility with _default, replace `this` access with a local var.
          // `|| data` is dead code meant only to preserve the variable through minification.
          var el = this || data; // Claim the first handler

          if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
            // dataPriv.set( el, "click", ... )
            leverageNative(el, "click", returnTrue);
          } // Return false to allow normal processing in the caller


          return false;
        },
        trigger: function trigger(data) {
          // For mutual compressibility with _default, replace `this` access with a local var.
          // `|| data` is dead code meant only to preserve the variable through minification.
          var el = this || data; // Force setup before triggering a click

          if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
            leverageNative(el, "click");
          } // Return non-false to allow normal event-path propagation


          return true;
        },
        // For cross-browser consistency, suppress native .click() on links
        // Also prevent it if we're currently inside a leveraged native-event stack
        _default: function _default(event) {
          var target = event.target;
          return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
        }
      },
      beforeunload: {
        postDispatch: function postDispatch(event) {
          // Support: Firefox 20+
          // Firefox doesn't alert if the returnValue field is not set.
          if (event.result !== undefined && event.originalEvent) {
            event.originalEvent.returnValue = event.result;
          }
        }
      }
    }
  }; // Ensure the presence of an event listener that handles manually-triggered
  // synthetic events by interrupting progress until reinvoked in response to
  // *native* events that it fires directly, ensuring that state changes have
  // already occurred before other listeners are invoked.

  function leverageNative(el, type, expectSync) {
    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
    if (!expectSync) {
      if (dataPriv.get(el, type) === undefined) {
        jQuery.event.add(el, type, returnTrue);
      }

      return;
    } // Register the controller as a special universal handler for all event namespaces


    dataPriv.set(el, type, false);
    jQuery.event.add(el, type, {
      namespace: false,
      handler: function handler(event) {
        var notAsync,
            result,
            saved = dataPriv.get(this, type);

        if (event.isTrigger & 1 && this[type]) {
          // Interrupt processing of the outer synthetic .trigger()ed event
          // Saved data should be false in such cases, but might be a leftover capture object
          // from an async native handler (gh-4350)
          if (!saved.length) {
            // Store arguments for use when handling the inner native event
            // There will always be at least one argument (an event object), so this array
            // will not be confused with a leftover capture object.
            saved = _slice.call(arguments);
            dataPriv.set(this, type, saved); // Trigger the native event and capture its result
            // Support: IE <=9 - 11+
            // focus() and blur() are asynchronous

            notAsync = expectSync(this, type);
            this[type]();
            result = dataPriv.get(this, type);

            if (saved !== result || notAsync) {
              dataPriv.set(this, type, false);
            } else {
              result = {};
            }

            if (saved !== result) {
              // Cancel the outer synthetic event
              event.stopImmediatePropagation();
              event.preventDefault();
              return result.value;
            } // If this is an inner synthetic event for an event with a bubbling surrogate
            // (focus or blur), assume that the surrogate already propagated from triggering the
            // native event and prevent that from happening again here.
            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
            // bubbling surrogate propagates *after* the non-bubbling base), but that seems
            // less bad than duplication.

          } else if ((jQuery.event.special[type] || {}).delegateType) {
            event.stopPropagation();
          } // If this is a native event triggered above, everything is now in order
          // Fire an inner synthetic event with the original arguments

        } else if (saved.length) {
          // ...and capture the result
          dataPriv.set(this, type, {
            value: jQuery.event.trigger( // Support: IE <=9 - 11+
            // Extend with the prototype to reset the above stopImmediatePropagation()
            jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)
          }); // Abort handling of the native event

          event.stopImmediatePropagation();
        }
      }
    });
  }

  jQuery.removeEvent = function (elem, type, handle) {
    // This "if" is needed for plain objects
    if (elem.removeEventListener) {
      elem.removeEventListener(type, handle);
    }
  };

  jQuery.Event = function (src, props) {
    // Allow instantiation without the 'new' keyword
    if (!(this instanceof jQuery.Event)) {
      return new jQuery.Event(src, props);
    } // Event object


    if (src && src.type) {
      this.originalEvent = src;
      this.type = src.type; // Events bubbling up the document may have been marked as prevented
      // by a handler lower down the tree; reflect the correct value.

      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only
      src.returnValue === false ? returnTrue : returnFalse; // Create target properties
      // Support: Safari <=6 - 7 only
      // Target should not be a text node (#504, #13143)

      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
      this.currentTarget = src.currentTarget;
      this.relatedTarget = src.relatedTarget; // Event type
    } else {
      this.type = src;
    } // Put explicitly provided properties onto the event object


    if (props) {
      jQuery.extend(this, props);
    } // Create a timestamp if incoming event doesn't have one


    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed

    this[jQuery.expando] = true;
  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html


  jQuery.Event.prototype = {
    constructor: jQuery.Event,
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse,
    isSimulated: false,
    preventDefault: function preventDefault() {
      var e = this.originalEvent;
      this.isDefaultPrevented = returnTrue;

      if (e && !this.isSimulated) {
        e.preventDefault();
      }
    },
    stopPropagation: function stopPropagation() {
      var e = this.originalEvent;
      this.isPropagationStopped = returnTrue;

      if (e && !this.isSimulated) {
        e.stopPropagation();
      }
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var e = this.originalEvent;
      this.isImmediatePropagationStopped = returnTrue;

      if (e && !this.isSimulated) {
        e.stopImmediatePropagation();
      }

      this.stopPropagation();
    }
  }; // Includes all common event props including KeyEvent and MouseEvent specific props

  jQuery.each({
    altKey: true,
    bubbles: true,
    cancelable: true,
    changedTouches: true,
    ctrlKey: true,
    detail: true,
    eventPhase: true,
    metaKey: true,
    pageX: true,
    pageY: true,
    shiftKey: true,
    view: true,
    "char": true,
    code: true,
    charCode: true,
    key: true,
    keyCode: true,
    button: true,
    buttons: true,
    clientX: true,
    clientY: true,
    offsetX: true,
    offsetY: true,
    pointerId: true,
    pointerType: true,
    screenX: true,
    screenY: true,
    targetTouches: true,
    toElement: true,
    touches: true,
    which: function which(event) {
      var button = event.button; // Add which for key events

      if (event.which == null && rkeyEvent.test(event.type)) {
        return event.charCode != null ? event.charCode : event.keyCode;
      } // Add which for click: 1 === left; 2 === middle; 3 === right


      if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {
        if (button & 1) {
          return 1;
        }

        if (button & 2) {
          return 3;
        }

        if (button & 4) {
          return 2;
        }

        return 0;
      }

      return event.which;
    }
  }, jQuery.event.addProp);
  jQuery.each({
    focus: "focusin",
    blur: "focusout"
  }, function (type, delegateType) {
    jQuery.event.special[type] = {
      // Utilize native event if possible so blur/focus sequence is correct
      setup: function setup() {
        // Claim the first handler
        // dataPriv.set( this, "focus", ... )
        // dataPriv.set( this, "blur", ... )
        leverageNative(this, type, expectSync); // Return false to allow normal processing in the caller

        return false;
      },
      trigger: function trigger() {
        // Force setup before trigger
        leverageNative(this, type); // Return non-false to allow normal event-path propagation

        return true;
      },
      delegateType: delegateType
    };
  }); // Create mouseenter/leave events using mouseover/out and event-time checks
  // so that event delegation works in jQuery.
  // Do the same for pointerenter/pointerleave and pointerover/pointerout
  //
  // Support: Safari 7 only
  // Safari sends mouseenter too often; see:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258
  // for the description of the bug (it existed in older Chrome versions as well).

  jQuery.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout",
    pointerenter: "pointerover",
    pointerleave: "pointerout"
  }, function (orig, fix) {
    jQuery.event.special[orig] = {
      delegateType: fix,
      bindType: fix,
      handle: function handle(event) {
        var ret,
            target = this,
            related = event.relatedTarget,
            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.
        // NB: No relatedTarget if the mouse left/entered the browser window

        if (!related || related !== target && !jQuery.contains(target, related)) {
          event.type = handleObj.origType;
          ret = handleObj.handler.apply(this, arguments);
          event.type = fix;
        }

        return ret;
      }
    };
  });
  jQuery.fn.extend({
    on: function on(types, selector, data, fn) {
      return _on(this, types, selector, data, fn);
    },
    one: function one(types, selector, data, fn) {
      return _on(this, types, selector, data, fn, 1);
    },
    off: function off(types, selector, fn) {
      var handleObj, type;

      if (types && types.preventDefault && types.handleObj) {
        // ( event )  dispatched jQuery.Event
        handleObj = types.handleObj;
        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
        return this;
      }

      if (_typeof(types) === "object") {
        // ( types-object [, selector] )
        for (type in types) {
          this.off(type, selector, types[type]);
        }

        return this;
      }

      if (selector === false || typeof selector === "function") {
        // ( types [, fn] )
        fn = selector;
        selector = undefined;
      }

      if (fn === false) {
        fn = returnFalse;
      }

      return this.each(function () {
        jQuery.event.remove(this, types, fn, selector);
      });
    }
  });
  var // Support: IE <=10 - 11, Edge 12 - 13 only
  // In IE/Edge using regex groups here causes severe slowdowns.
  // See https://connect.microsoft.com/IE/feedback/details/1736512/
  rnoInnerhtml = /<script|<style|<link/i,
      // checked="checked" or checked
  rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
      rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g; // Prefer a tbody over its parent table for containing new rows

  function manipulationTarget(elem, content) {
    if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {
      return jQuery(elem).children("tbody")[0] || elem;
    }

    return elem;
  } // Replace/restore the type attribute of script elements for safe DOM manipulation


  function disableScript(elem) {
    elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
    return elem;
  }

  function restoreScript(elem) {
    if ((elem.type || "").slice(0, 5) === "true/") {
      elem.type = elem.type.slice(5);
    } else {
      elem.removeAttribute("type");
    }

    return elem;
  }

  function cloneCopyEvent(src, dest) {
    var i, l, type, pdataOld, udataOld, udataCur, events;

    if (dest.nodeType !== 1) {
      return;
    } // 1. Copy private data: events, handlers, etc.


    if (dataPriv.hasData(src)) {
      pdataOld = dataPriv.get(src);
      events = pdataOld.events;

      if (events) {
        dataPriv.remove(dest, "handle events");

        for (type in events) {
          for (i = 0, l = events[type].length; i < l; i++) {
            jQuery.event.add(dest, type, events[type][i]);
          }
        }
      }
    } // 2. Copy user data


    if (dataUser.hasData(src)) {
      udataOld = dataUser.access(src);
      udataCur = jQuery.extend({}, udataOld);
      dataUser.set(dest, udataCur);
    }
  } // Fix IE bugs, see support tests


  function fixInput(src, dest) {
    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.

    if (nodeName === "input" && rcheckableType.test(src.type)) {
      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options
    } else if (nodeName === "input" || nodeName === "textarea") {
      dest.defaultValue = src.defaultValue;
    }
  }

  function domManip(collection, args, callback, ignored) {
    // Flatten any nested arrays
    args = flat(args);
    var fragment,
        first,
        scripts,
        hasScripts,
        node,
        doc,
        i = 0,
        l = collection.length,
        iNoClone = l - 1,
        value = args[0],
        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit

    if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
      return collection.each(function (index) {
        var self = collection.eq(index);

        if (valueIsFunction) {
          args[0] = value.call(this, index, self.html());
        }

        domManip(self, args, callback, ignored);
      });
    }

    if (l) {
      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
      first = fragment.firstChild;

      if (fragment.childNodes.length === 1) {
        fragment = first;
      } // Require either new content or an interest in ignored elements to invoke the callback


      if (first || ignored) {
        scripts = jQuery.map(getAll(fragment, "script"), disableScript);
        hasScripts = scripts.length; // Use the original fragment for the last item
        // instead of the first because it can end up
        // being emptied incorrectly in certain situations (#8070).

        for (; i < l; i++) {
          node = fragment;

          if (i !== iNoClone) {
            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration

            if (hasScripts) {
              // Support: Android <=4.0 only, PhantomJS 1 only
              // push.apply(_, arraylike) throws on ancient WebKit
              jQuery.merge(scripts, getAll(node, "script"));
            }
          }

          callback.call(collection[i], node, i);
        }

        if (hasScripts) {
          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts

          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion

          for (i = 0; i < hasScripts; i++) {
            node = scripts[i];

            if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {
              if (node.src && (node.type || "").toLowerCase() !== "module") {
                // Optional AJAX dependency, but won't run scripts if not present
                if (jQuery._evalUrl && !node.noModule) {
                  jQuery._evalUrl(node.src, {
                    nonce: node.nonce || node.getAttribute("nonce")
                  }, doc);
                }
              } else {
                DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
              }
            }
          }
        }
      }
    }

    return collection;
  }

  function _remove(elem, selector, keepData) {
    var node,
        nodes = selector ? jQuery.filter(selector, elem) : elem,
        i = 0;

    for (; (node = nodes[i]) != null; i++) {
      if (!keepData && node.nodeType === 1) {
        jQuery.cleanData(getAll(node));
      }

      if (node.parentNode) {
        if (keepData && isAttached(node)) {
          setGlobalEval(getAll(node, "script"));
        }

        node.parentNode.removeChild(node);
      }
    }

    return elem;
  }

  jQuery.extend({
    htmlPrefilter: function htmlPrefilter(html) {
      return html;
    },
    clone: function clone(elem, dataAndEvents, deepDataAndEvents) {
      var i,
          l,
          srcElements,
          destElements,
          clone = elem.cloneNode(true),
          inPage = isAttached(elem); // Fix IE cloning issues

      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
        destElements = getAll(clone);
        srcElements = getAll(elem);

        for (i = 0, l = srcElements.length; i < l; i++) {
          fixInput(srcElements[i], destElements[i]);
        }
      } // Copy the events from the original to the clone


      if (dataAndEvents) {
        if (deepDataAndEvents) {
          srcElements = srcElements || getAll(elem);
          destElements = destElements || getAll(clone);

          for (i = 0, l = srcElements.length; i < l; i++) {
            cloneCopyEvent(srcElements[i], destElements[i]);
          }
        } else {
          cloneCopyEvent(elem, clone);
        }
      } // Preserve script evaluation history


      destElements = getAll(clone, "script");

      if (destElements.length > 0) {
        setGlobalEval(destElements, !inPage && getAll(elem, "script"));
      } // Return the cloned set


      return clone;
    },
    cleanData: function cleanData(elems) {
      var data,
          elem,
          type,
          special = jQuery.event.special,
          i = 0;

      for (; (elem = elems[i]) !== undefined; i++) {
        if (acceptData(elem)) {
          if (data = elem[dataPriv.expando]) {
            if (data.events) {
              for (type in data.events) {
                if (special[type]) {
                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead
                } else {
                  jQuery.removeEvent(elem, type, data.handle);
                }
              }
            } // Support: Chrome <=35 - 45+
            // Assign undefined instead of using delete, see Data#remove


            elem[dataPriv.expando] = undefined;
          }

          if (elem[dataUser.expando]) {
            // Support: Chrome <=35 - 45+
            // Assign undefined instead of using delete, see Data#remove
            elem[dataUser.expando] = undefined;
          }
        }
      }
    }
  });
  jQuery.fn.extend({
    detach: function detach(selector) {
      return _remove(this, selector, true);
    },
    remove: function remove(selector) {
      return _remove(this, selector);
    },
    text: function text(value) {
      return access(this, function (value) {
        return value === undefined ? jQuery.text(this) : this.empty().each(function () {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            this.textContent = value;
          }
        });
      }, null, value, arguments.length);
    },
    append: function append() {
      return domManip(this, arguments, function (elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.appendChild(elem);
        }
      });
    },
    prepend: function prepend() {
      return domManip(this, arguments, function (elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.insertBefore(elem, target.firstChild);
        }
      });
    },
    before: function before() {
      return domManip(this, arguments, function (elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this);
        }
      });
    },
    after: function after() {
      return domManip(this, arguments, function (elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this.nextSibling);
        }
      });
    },
    empty: function empty() {
      var elem,
          i = 0;

      for (; (elem = this[i]) != null; i++) {
        if (elem.nodeType === 1) {
          // Prevent memory leaks
          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes

          elem.textContent = "";
        }
      }

      return this;
    },
    clone: function clone(dataAndEvents, deepDataAndEvents) {
      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
      return this.map(function () {
        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
      });
    },
    html: function html(value) {
      return access(this, function (value) {
        var elem = this[0] || {},
            i = 0,
            l = this.length;

        if (value === undefined && elem.nodeType === 1) {
          return elem.innerHTML;
        } // See if we can take a shortcut and just use innerHTML


        if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
          value = jQuery.htmlPrefilter(value);

          try {
            for (; i < l; i++) {
              elem = this[i] || {}; // Remove element nodes and prevent memory leaks

              if (elem.nodeType === 1) {
                jQuery.cleanData(getAll(elem, false));
                elem.innerHTML = value;
              }
            }

            elem = 0; // If using innerHTML throws an exception, use the fallback method
          } catch (e) {}
        }

        if (elem) {
          this.empty().append(value);
        }
      }, null, value, arguments.length);
    },
    replaceWith: function replaceWith() {
      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content

      return domManip(this, arguments, function (elem) {
        var parent = this.parentNode;

        if (jQuery.inArray(this, ignored) < 0) {
          jQuery.cleanData(getAll(this));

          if (parent) {
            parent.replaceChild(elem, this);
          }
        } // Force callback invocation

      }, ignored);
    }
  });
  jQuery.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function (name, original) {
    jQuery.fn[name] = function (selector) {
      var elems,
          ret = [],
          insert = jQuery(selector),
          last = insert.length - 1,
          i = 0;

      for (; i <= last; i++) {
        elems = i === last ? this : this.clone(true);
        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only
        // .get() because push.apply(_, arraylike) throws on ancient WebKit

        push.apply(ret, elems.get());
      }

      return this.pushStack(ret);
    };
  });
  var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");

  var getStyles = function getStyles(elem) {
    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
    // IE throws on elements created in popups
    // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
    var view = elem.ownerDocument.defaultView;

    if (!view || !view.opener) {
      view = window;
    }

    return view.getComputedStyle(elem);
  };

  var swap = function swap(elem, options, callback) {
    var ret,
        name,
        old = {}; // Remember the old values, and insert the new ones

    for (name in options) {
      old[name] = elem.style[name];
      elem.style[name] = options[name];
    }

    ret = callback.call(elem); // Revert the old values

    for (name in options) {
      elem.style[name] = old[name];
    }

    return ret;
  };

  var rboxStyle = new RegExp(cssExpand.join("|"), "i");

  (function () {
    // Executing both pixelPosition & boxSizingReliable tests require only one layout
    // so they're executed at the same time to save the second computation.
    function computeStyleTests() {
      // This is a singleton, we need to execute it only once
      if (!div) {
        return;
      }

      container.style.cssText = "position:absolute;left:-11111px;width:60px;" + "margin-top:1px;padding:0;border:0";
      div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;" + "margin:auto;border:1px;padding:1px;" + "width:60%;top:1%";
      documentElement.appendChild(container).appendChild(div);
      var divStyle = window.getComputedStyle(div);
      pixelPositionVal = divStyle.top !== "1%"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44

      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
      // Some styles come back with percentage values, even though they shouldn't

      div.style.right = "60%";
      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only
      // Detect misreporting of content dimensions for box-sizing:border-box elements

      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only
      // Detect overflow:scroll screwiness (gh-3699)
      // Support: Chrome <=64
      // Don't get tricked when zoom affects offsetWidth (gh-4029)

      div.style.position = "absolute";
      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;
      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and
      // it will also be a sign that checks already performed

      div = null;
    }

    function roundPixelMeasures(measure) {
      return Math.round(parseFloat(measure));
    }

    var pixelPositionVal,
        boxSizingReliableVal,
        scrollboxSizeVal,
        pixelBoxStylesVal,
        reliableTrDimensionsVal,
        reliableMarginLeftVal,
        container = document.createElement("div"),
        div = document.createElement("div"); // Finish early in limited (non-browser) environments

    if (!div.style) {
      return;
    } // Support: IE <=9 - 11 only
    // Style of cloned element affects source element cloned (#8908)


    div.style.backgroundClip = "content-box";
    div.cloneNode(true).style.backgroundClip = "";
    support.clearCloneStyle = div.style.backgroundClip === "content-box";
    jQuery.extend(support, {
      boxSizingReliable: function boxSizingReliable() {
        computeStyleTests();
        return boxSizingReliableVal;
      },
      pixelBoxStyles: function pixelBoxStyles() {
        computeStyleTests();
        return pixelBoxStylesVal;
      },
      pixelPosition: function pixelPosition() {
        computeStyleTests();
        return pixelPositionVal;
      },
      reliableMarginLeft: function reliableMarginLeft() {
        computeStyleTests();
        return reliableMarginLeftVal;
      },
      scrollboxSize: function scrollboxSize() {
        computeStyleTests();
        return scrollboxSizeVal;
      },
      // Support: IE 9 - 11+, Edge 15 - 18+
      // IE/Edge misreport `getComputedStyle` of table rows with width/height
      // set in CSS while `offset*` properties report correct values.
      // Behavior in IE 9 is more subtle than in newer versions & it passes
      // some versions of this test; make sure not to make it pass there!
      reliableTrDimensions: function reliableTrDimensions() {
        var table, tr, trChild, trStyle;

        if (reliableTrDimensionsVal == null) {
          table = document.createElement("table");
          tr = document.createElement("tr");
          trChild = document.createElement("div");
          table.style.cssText = "position:absolute;left:-11111px";
          tr.style.height = "1px";
          trChild.style.height = "9px";
          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);
          trStyle = window.getComputedStyle(tr);
          reliableTrDimensionsVal = parseInt(trStyle.height) > 3;
          documentElement.removeChild(table);
        }

        return reliableTrDimensionsVal;
      }
    });
  })();

  function curCSS(elem, name, computed) {
    var width,
        minWidth,
        maxWidth,
        ret,
        // Support: Firefox 51+
    // Retrieving style before computed somehow
    // fixes an issue with getting wrong values
    // on detached elements
    style = elem.style;
    computed = computed || getStyles(elem); // getPropertyValue is needed for:
    //   .css('filter') (IE 9 only, #12537)
    //   .css('--customProperty) (#3144)

    if (computed) {
      ret = computed.getPropertyValue(name) || computed[name];

      if (ret === "" && !isAttached(elem)) {
        ret = jQuery.style(elem, name);
      } // A tribute to the "awesome hack by Dean Edwards"
      // Android Browser returns percentage for some values,
      // but width seems to be reliably pixels.
      // This is against the CSSOM draft spec:
      // https://drafts.csswg.org/cssom/#resolved-values


      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
        // Remember the original values
        width = style.width;
        minWidth = style.minWidth;
        maxWidth = style.maxWidth; // Put in the new values to get a computed value out

        style.minWidth = style.maxWidth = style.width = ret;
        ret = computed.width; // Revert the changed values

        style.width = width;
        style.minWidth = minWidth;
        style.maxWidth = maxWidth;
      }
    }

    return ret !== undefined ? // Support: IE <=9 - 11 only
    // IE returns zIndex value as an integer.
    ret + "" : ret;
  }

  function addGetHookIf(conditionFn, hookFn) {
    // Define the hook, we'll check on the first run if it's really needed.
    return {
      get: function get() {
        if (conditionFn()) {
          // Hook not needed (or it's not possible to use it due
          // to missing dependency), remove it.
          delete this.get;
          return;
        } // Hook needed; redefine it so that the support test is not executed again.


        return (this.get = hookFn).apply(this, arguments);
      }
    };
  }

  var cssPrefixes = ["Webkit", "Moz", "ms"],
      emptyStyle = document.createElement("div").style,
      vendorProps = {}; // Return a vendor-prefixed property or undefined

  function vendorPropName(name) {
    // Check for vendor prefixed names
    var capName = name[0].toUpperCase() + name.slice(1),
        i = cssPrefixes.length;

    while (i--) {
      name = cssPrefixes[i] + capName;

      if (name in emptyStyle) {
        return name;
      }
    }
  } // Return a potentially-mapped jQuery.cssProps or vendor prefixed property


  function finalPropName(name) {
    var final = jQuery.cssProps[name] || vendorProps[name];

    if (final) {
      return final;
    }

    if (name in emptyStyle) {
      return name;
    }

    return vendorProps[name] = vendorPropName(name) || name;
  }

  var // Swappable if display is none or starts with table
  // except "table", "table-cell", or "table-caption"
  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
  rdisplayswap = /^(none|table(?!-c[ea]).+)/,
      rcustomProp = /^--/,
      cssShow = {
    position: "absolute",
    visibility: "hidden",
    display: "block"
  },
      cssNormalTransform = {
    letterSpacing: "0",
    fontWeight: "400"
  };

  function setPositiveNumber(_elem, value, subtract) {
    // Any relative (+/-) values have already been
    // normalized at this point
    var matches = rcssNum.exec(value);
    return matches ? // Guard against undefined "subtract", e.g., when used as in cssHooks
    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
  }

  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
    var i = dimension === "width" ? 1 : 0,
        extra = 0,
        delta = 0; // Adjustment may not be necessary

    if (box === (isBorderBox ? "border" : "content")) {
      return 0;
    }

    for (; i < 4; i += 2) {
      // Both box models exclude margin
      if (box === "margin") {
        delta += jQuery.css(elem, box + cssExpand[i], true, styles);
      } // If we get here with a content-box, we're seeking "padding" or "border" or "margin"


      if (!isBorderBox) {
        // Add padding
        delta += jQuery.css(elem, "padding" + cssExpand[i], true, styles); // For "border" or "margin", add border

        if (box !== "padding") {
          delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles); // But still keep track of it otherwise
        } else {
          extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        } // If we get here with a border-box (content + padding + border), we're seeking "content" or
        // "padding" or "margin"

      } else {
        // For "content", subtract padding
        if (box === "content") {
          delta -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
        } // For "content" or "padding", subtract border


        if (box !== "margin") {
          delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        }
      }
    } // Account for positive content-box scroll gutter when requested by providing computedVal


    if (!isBorderBox && computedVal >= 0) {
      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
      // Assuming integer scroll gutter, subtract the rest and round down
      delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5 // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
      // Use an explicit zero to avoid NaN (gh-3964)
      )) || 0;
    }

    return delta;
  }

  function getWidthOrHeight(elem, dimension, extra) {
    // Start with computed style
    var styles = getStyles(elem),
        // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
    // Fake content-box until we know it's needed to know the true value.
    boxSizingNeeded = !support.boxSizingReliable() || extra,
        isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",
        valueIsBorderBox = isBorderBox,
        val = curCSS(elem, dimension, styles),
        offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1); // Support: Firefox <=54
    // Return a confounding non-pixel value or feign ignorance, as appropriate.

    if (rnumnonpx.test(val)) {
      if (!extra) {
        return val;
      }

      val = "auto";
    } // Support: IE 9 - 11 only
    // Use offsetWidth/offsetHeight for when box sizing is unreliable.
    // In those cases, the computed value can be trusted to be border-box.


    if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+
    // IE/Edge misreport `getComputedStyle` of table rows with width/height
    // set in CSS while `offset*` properties report correct values.
    // Interestingly, in some cases IE 9 doesn't suffer from this issue.
    !support.reliableTrDimensions() && nodeName(elem, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"
    // This happens for inline elements with no explicit setting (gh-3571)
    val === "auto" || // Support: Android <=4.1 - 4.3 only
    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
    !parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") && // Make sure the element is visible & connected
    elem.getClientRects().length) {
      isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box"; // Where available, offsetWidth/offsetHeight approximate border box dimensions.
      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
      // retrieved value as a content box dimension.

      valueIsBorderBox = offsetProp in elem;

      if (valueIsBorderBox) {
        val = elem[offsetProp];
      }
    } // Normalize "" and auto


    val = parseFloat(val) || 0; // Adjust for the element's box model

    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)
    val) + "px";
  }

  jQuery.extend({
    // Add in style property hooks for overriding the default
    // behavior of getting and setting a style property
    cssHooks: {
      opacity: {
        get: function get(elem, computed) {
          if (computed) {
            // We should always get a number back from opacity
            var ret = curCSS(elem, "opacity");
            return ret === "" ? "1" : ret;
          }
        }
      }
    },
    // Don't automatically add "px" to these possibly-unitless properties
    cssNumber: {
      "animationIterationCount": true,
      "columnCount": true,
      "fillOpacity": true,
      "flexGrow": true,
      "flexShrink": true,
      "fontWeight": true,
      "gridArea": true,
      "gridColumn": true,
      "gridColumnEnd": true,
      "gridColumnStart": true,
      "gridRow": true,
      "gridRowEnd": true,
      "gridRowStart": true,
      "lineHeight": true,
      "opacity": true,
      "order": true,
      "orphans": true,
      "widows": true,
      "zIndex": true,
      "zoom": true
    },
    // Add in properties whose names you wish to fix before
    // setting or getting the value
    cssProps: {},
    // Get and set the style property on a DOM Node
    style: function style(elem, name, value, extra) {
      // Don't set styles on text and comment nodes
      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
        return;
      } // Make sure that we're working with the right name


      var ret,
          type,
          hooks,
          origName = camelCase(name),
          isCustomProp = rcustomProp.test(name),
          style = elem.style; // Make sure that we're working with the right name. We don't
      // want to query the value if it is a CSS custom property
      // since they are user-defined.

      if (!isCustomProp) {
        name = finalPropName(origName);
      } // Gets hook for the prefixed version, then unprefixed version


      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value

      if (value !== undefined) {
        type = _typeof(value); // Convert "+=" or "-=" to relative numbers (#7345)

        if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
          value = adjustCSS(elem, name, ret); // Fixes bug #9237

          type = "number";
        } // Make sure that null and NaN values aren't set (#7116)


        if (value == null || value !== value) {
          return;
        } // If a number was passed in, add the unit (except for certain CSS properties)
        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
        // "px" to a few hardcoded values.


        if (type === "number" && !isCustomProp) {
          value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
        } // background-* props affect original clone's values


        if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
          style[name] = "inherit";
        } // If a hook was provided, use that value, otherwise just set the specified value


        if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
          if (isCustomProp) {
            style.setProperty(name, value);
          } else {
            style[name] = value;
          }
        }
      } else {
        // If a hook was provided get the non-computed value from there
        if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
          return ret;
        } // Otherwise just get the value from the style object


        return style[name];
      }
    },
    css: function css(elem, name, extra, styles) {
      var val,
          num,
          hooks,
          origName = camelCase(name),
          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't
      // want to modify the value if it is a CSS custom property
      // since they are user-defined.

      if (!isCustomProp) {
        name = finalPropName(origName);
      } // Try prefixed name followed by the unprefixed name


      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there

      if (hooks && "get" in hooks) {
        val = hooks.get(elem, true, extra);
      } // Otherwise, if a way to get the computed value exists, use that


      if (val === undefined) {
        val = curCSS(elem, name, styles);
      } // Convert "normal" to computed value


      if (val === "normal" && name in cssNormalTransform) {
        val = cssNormalTransform[name];
      } // Make numeric if forced or a qualifier was provided and val looks numeric


      if (extra === "" || extra) {
        num = parseFloat(val);
        return extra === true || isFinite(num) ? num || 0 : val;
      }

      return val;
    }
  });
  jQuery.each(["height", "width"], function (_i, dimension) {
    jQuery.cssHooks[dimension] = {
      get: function get(elem, computed, extra) {
        if (computed) {
          // Certain elements can have dimension info if we invisibly show them
          // but it must have a current display style that would benefit
          return rdisplayswap.test(jQuery.css(elem, "display")) && ( // Support: Safari 8+
          // Table columns in Safari have non-zero offsetWidth & zero
          // getBoundingClientRect().width unless display is changed.
          // Support: IE <=11 only
          // Running getBoundingClientRect on a disconnected node
          // in IE throws an error.
          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {
            return getWidthOrHeight(elem, dimension, extra);
          }) : getWidthOrHeight(elem, dimension, extra);
        }
      },
      set: function set(elem, value, extra) {
        var matches,
            styles = getStyles(elem),
            // Only read styles.position if the test has a chance to fail
        // to avoid forcing a reflow.
        scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute",
            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
        boxSizingNeeded = scrollboxSizeBuggy || extra,
            isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",
            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0; // Account for unreliable border-box dimensions by comparing offset* to computed and
        // faking a content-box to get border and padding (gh-3699)

        if (isBorderBox && scrollboxSizeBuggy) {
          subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);
        } // Convert to pixels if value adjustment is needed


        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
          elem.style[dimension] = value;
          value = jQuery.css(elem, dimension);
        }

        return setPositiveNumber(elem, value, subtract);
      }
    };
  });
  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {
    if (computed) {
      return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {
        marginLeft: 0
      }, function () {
        return elem.getBoundingClientRect().left;
      })) + "px";
    }
  }); // These hooks are used by animate to expand properties

  jQuery.each({
    margin: "",
    padding: "",
    border: "Width"
  }, function (prefix, suffix) {
    jQuery.cssHooks[prefix + suffix] = {
      expand: function expand(value) {
        var i = 0,
            expanded = {},
            // Assumes a single number if not a string
        parts = typeof value === "string" ? value.split(" ") : [value];

        for (; i < 4; i++) {
          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
        }

        return expanded;
      }
    };

    if (prefix !== "margin") {
      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    }
  });
  jQuery.fn.extend({
    css: function css(name, value) {
      return access(this, function (elem, name, value) {
        var styles,
            len,
            map = {},
            i = 0;

        if (Array.isArray(name)) {
          styles = getStyles(elem);
          len = name.length;

          for (; i < len; i++) {
            map[name[i]] = jQuery.css(elem, name[i], false, styles);
          }

          return map;
        }

        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
      }, name, value, arguments.length > 1);
    }
  });

  function Tween(elem, options, prop, end, easing) {
    return new Tween.prototype.init(elem, options, prop, end, easing);
  }

  jQuery.Tween = Tween;
  Tween.prototype = {
    constructor: Tween,
    init: function init(elem, options, prop, end, easing, unit) {
      this.elem = elem;
      this.prop = prop;
      this.easing = easing || jQuery.easing._default;
      this.options = options;
      this.start = this.now = this.cur();
      this.end = end;
      this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
    },
    cur: function cur() {
      var hooks = Tween.propHooks[this.prop];
      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
    },
    run: function run(percent) {
      var eased,
          hooks = Tween.propHooks[this.prop];

      if (this.options.duration) {
        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
      } else {
        this.pos = eased = percent;
      }

      this.now = (this.end - this.start) * eased + this.start;

      if (this.options.step) {
        this.options.step.call(this.elem, this.now, this);
      }

      if (hooks && hooks.set) {
        hooks.set(this);
      } else {
        Tween.propHooks._default.set(this);
      }

      return this;
    }
  };
  Tween.prototype.init.prototype = Tween.prototype;
  Tween.propHooks = {
    _default: {
      get: function get(tween) {
        var result; // Use a property on the element directly when it is not a DOM element,
        // or when there is no matching style property that exists.

        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
          return tween.elem[tween.prop];
        } // Passing an empty string as a 3rd parameter to .css will automatically
        // attempt a parseFloat and fallback to a string if the parse fails.
        // Simple values such as "10px" are parsed to Float;
        // complex values such as "rotate(1rad)" are returned as-is.


        result = jQuery.css(tween.elem, tween.prop, ""); // Empty strings, null, undefined and "auto" are converted to 0.

        return !result || result === "auto" ? 0 : result;
      },
      set: function set(tween) {
        // Use step hook for back compat.
        // Use cssHook if its there.
        // Use .style if available and use plain properties where available.
        if (jQuery.fx.step[tween.prop]) {
          jQuery.fx.step[tween.prop](tween);
        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {
          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
        } else {
          tween.elem[tween.prop] = tween.now;
        }
      }
    }
  }; // Support: IE <=9 only
  // Panic based approach to setting things on disconnected nodes

  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
    set: function set(tween) {
      if (tween.elem.nodeType && tween.elem.parentNode) {
        tween.elem[tween.prop] = tween.now;
      }
    }
  };
  jQuery.easing = {
    linear: function linear(p) {
      return p;
    },
    swing: function swing(p) {
      return 0.5 - Math.cos(p * Math.PI) / 2;
    },
    _default: "swing"
  };
  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point

  jQuery.fx.step = {};
  var fxNow,
      inProgress,
      rfxtypes = /^(?:toggle|show|hide)$/,
      rrun = /queueHooks$/;

  function schedule() {
    if (inProgress) {
      if (document.hidden === false && window.requestAnimationFrame) {
        window.requestAnimationFrame(schedule);
      } else {
        window.setTimeout(schedule, jQuery.fx.interval);
      }

      jQuery.fx.tick();
    }
  } // Animations created synchronously will run synchronously


  function createFxNow() {
    window.setTimeout(function () {
      fxNow = undefined;
    });
    return fxNow = Date.now();
  } // Generate parameters to create a standard animation


  function genFx(type, includeWidth) {
    var which,
        i = 0,
        attrs = {
      height: type
    }; // If we include width, step value is 1 to do all cssExpand values,
    // otherwise step value is 2 to skip over Left and Right

    includeWidth = includeWidth ? 1 : 0;

    for (; i < 4; i += 2 - includeWidth) {
      which = cssExpand[i];
      attrs["margin" + which] = attrs["padding" + which] = type;
    }

    if (includeWidth) {
      attrs.opacity = attrs.width = type;
    }

    return attrs;
  }

  function createTween(value, prop, animation) {
    var tween,
        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
        index = 0,
        length = collection.length;

    for (; index < length; index++) {
      if (tween = collection[index].call(animation, prop, value)) {
        // We're done with this property
        return tween;
      }
    }
  }

  function defaultPrefilter(elem, props, opts) {
    var prop,
        value,
        toggle,
        hooks,
        oldfire,
        propTween,
        restoreDisplay,
        display,
        isBox = "width" in props || "height" in props,
        anim = this,
        orig = {},
        style = elem.style,
        hidden = elem.nodeType && isHiddenWithinTree(elem),
        dataShow = dataPriv.get(elem, "fxshow"); // Queue-skipping animations hijack the fx hooks

    if (!opts.queue) {
      hooks = jQuery._queueHooks(elem, "fx");

      if (hooks.unqueued == null) {
        hooks.unqueued = 0;
        oldfire = hooks.empty.fire;

        hooks.empty.fire = function () {
          if (!hooks.unqueued) {
            oldfire();
          }
        };
      }

      hooks.unqueued++;
      anim.always(function () {
        // Ensure the complete handler is called before this completes
        anim.always(function () {
          hooks.unqueued--;

          if (!jQuery.queue(elem, "fx").length) {
            hooks.empty.fire();
          }
        });
      });
    } // Detect show/hide animations


    for (prop in props) {
      value = props[prop];

      if (rfxtypes.test(value)) {
        delete props[prop];
        toggle = toggle || value === "toggle";

        if (value === (hidden ? "hide" : "show")) {
          // Pretend to be hidden if this is a "show" and
          // there is still data from a stopped show/hide
          if (value === "show" && dataShow && dataShow[prop] !== undefined) {
            hidden = true; // Ignore all other no-op show/hide data
          } else {
            continue;
          }
        }

        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
      }
    } // Bail out if this is a no-op like .hide().hide()


    propTween = !jQuery.isEmptyObject(props);

    if (!propTween && jQuery.isEmptyObject(orig)) {
      return;
    } // Restrict "overflow" and "display" styles during box animations


    if (isBox && elem.nodeType === 1) {
      // Support: IE <=9 - 11, Edge 12 - 15
      // Record all 3 overflow attributes because IE does not infer the shorthand
      // from identically-valued overflowX and overflowY and Edge just mirrors
      // the overflowX value there.
      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade

      restoreDisplay = dataShow && dataShow.display;

      if (restoreDisplay == null) {
        restoreDisplay = dataPriv.get(elem, "display");
      }

      display = jQuery.css(elem, "display");

      if (display === "none") {
        if (restoreDisplay) {
          display = restoreDisplay;
        } else {
          // Get nonempty value(s) by temporarily forcing visibility
          showHide([elem], true);
          restoreDisplay = elem.style.display || restoreDisplay;
          display = jQuery.css(elem, "display");
          showHide([elem]);
        }
      } // Animate inline elements as inline-block


      if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
        if (jQuery.css(elem, "float") === "none") {
          // Restore the original display value at the end of pure show/hide animations
          if (!propTween) {
            anim.done(function () {
              style.display = restoreDisplay;
            });

            if (restoreDisplay == null) {
              display = style.display;
              restoreDisplay = display === "none" ? "" : display;
            }
          }

          style.display = "inline-block";
        }
      }
    }

    if (opts.overflow) {
      style.overflow = "hidden";
      anim.always(function () {
        style.overflow = opts.overflow[0];
        style.overflowX = opts.overflow[1];
        style.overflowY = opts.overflow[2];
      });
    } // Implement show/hide animations


    propTween = false;

    for (prop in orig) {
      // General show/hide setup for this element animation
      if (!propTween) {
        if (dataShow) {
          if ("hidden" in dataShow) {
            hidden = dataShow.hidden;
          }
        } else {
          dataShow = dataPriv.access(elem, "fxshow", {
            display: restoreDisplay
          });
        } // Store hidden/visible for toggle so `.stop().toggle()` "reverses"


        if (toggle) {
          dataShow.hidden = !hidden;
        } // Show elements before animating them


        if (hidden) {
          showHide([elem], true);
        }
        /* eslint-disable no-loop-func */


        anim.done(function () {
          /* eslint-enable no-loop-func */
          // The final step of a "hide" animation is actually hiding the element
          if (!hidden) {
            showHide([elem]);
          }

          dataPriv.remove(elem, "fxshow");

          for (prop in orig) {
            jQuery.style(elem, prop, orig[prop]);
          }
        });
      } // Per-property setup


      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);

      if (!(prop in dataShow)) {
        dataShow[prop] = propTween.start;

        if (hidden) {
          propTween.end = propTween.start;
          propTween.start = 0;
        }
      }
    }
  }

  function propFilter(props, specialEasing) {
    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass

    for (index in props) {
      name = camelCase(index);
      easing = specialEasing[name];
      value = props[index];

      if (Array.isArray(value)) {
        easing = value[1];
        value = props[index] = value[0];
      }

      if (index !== name) {
        props[name] = value;
        delete props[index];
      }

      hooks = jQuery.cssHooks[name];

      if (hooks && "expand" in hooks) {
        value = hooks.expand(value);
        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.
        // Reusing 'index' because we have the correct "name"

        for (index in value) {
          if (!(index in props)) {
            props[index] = value[index];
            specialEasing[index] = easing;
          }
        }
      } else {
        specialEasing[name] = easing;
      }
    }
  }

  function Animation(elem, properties, options) {
    var result,
        stopped,
        index = 0,
        length = Animation.prefilters.length,
        deferred = jQuery.Deferred().always(function () {
      // Don't match elem in the :animated selector
      delete tick.elem;
    }),
        tick = function tick() {
      if (stopped) {
        return false;
      }

      var currentTime = fxNow || createFxNow(),
          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
          // Support: Android 2.3 only
      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
      temp = remaining / animation.duration || 0,
          percent = 1 - temp,
          index = 0,
          length = animation.tweens.length;

      for (; index < length; index++) {
        animation.tweens[index].run(percent);
      }

      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield

      if (percent < 1 && length) {
        return remaining;
      } // If this was an empty animation, synthesize a final progress notification


      if (!length) {
        deferred.notifyWith(elem, [animation, 1, 0]);
      } // Resolve the animation and report its conclusion


      deferred.resolveWith(elem, [animation]);
      return false;
    },
        animation = deferred.promise({
      elem: elem,
      props: jQuery.extend({}, properties),
      opts: jQuery.extend(true, {
        specialEasing: {},
        easing: jQuery.easing._default
      }, options),
      originalProperties: properties,
      originalOptions: options,
      startTime: fxNow || createFxNow(),
      duration: options.duration,
      tweens: [],
      createTween: function createTween(prop, end) {
        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
        animation.tweens.push(tween);
        return tween;
      },
      stop: function stop(gotoEnd) {
        var index = 0,
            // If we are going to the end, we want to run all the tweens
        // otherwise we skip this part
        length = gotoEnd ? animation.tweens.length : 0;

        if (stopped) {
          return this;
        }

        stopped = true;

        for (; index < length; index++) {
          animation.tweens[index].run(1);
        } // Resolve when we played the last frame; otherwise, reject


        if (gotoEnd) {
          deferred.notifyWith(elem, [animation, 1, 0]);
          deferred.resolveWith(elem, [animation, gotoEnd]);
        } else {
          deferred.rejectWith(elem, [animation, gotoEnd]);
        }

        return this;
      }
    }),
        props = animation.props;

    propFilter(props, animation.opts.specialEasing);

    for (; index < length; index++) {
      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);

      if (result) {
        if (isFunction(result.stop)) {
          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
        }

        return result;
      }
    }

    jQuery.map(props, createTween, animation);

    if (isFunction(animation.opts.start)) {
      animation.opts.start.call(elem, animation);
    } // Attach callbacks from options


    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
    jQuery.fx.timer(jQuery.extend(tick, {
      elem: elem,
      anim: animation,
      queue: animation.opts.queue
    }));
    return animation;
  }

  jQuery.Animation = jQuery.extend(Animation, {
    tweeners: {
      "*": [function (prop, value) {
        var tween = this.createTween(prop, value);
        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
        return tween;
      }]
    },
    tweener: function tweener(props, callback) {
      if (isFunction(props)) {
        callback = props;
        props = ["*"];
      } else {
        props = props.match(rnothtmlwhite);
      }

      var prop,
          index = 0,
          length = props.length;

      for (; index < length; index++) {
        prop = props[index];
        Animation.tweeners[prop] = Animation.tweeners[prop] || [];
        Animation.tweeners[prop].unshift(callback);
      }
    },
    prefilters: [defaultPrefilter],
    prefilter: function prefilter(callback, prepend) {
      if (prepend) {
        Animation.prefilters.unshift(callback);
      } else {
        Animation.prefilters.push(callback);
      }
    }
  });

  jQuery.speed = function (speed, easing, fn) {
    var opt = speed && _typeof(speed) === "object" ? jQuery.extend({}, speed) : {
      complete: fn || !fn && easing || isFunction(speed) && speed,
      duration: speed,
      easing: fn && easing || easing && !isFunction(easing) && easing
    }; // Go to the end state if fx are off

    if (jQuery.fx.off) {
      opt.duration = 0;
    } else {
      if (typeof opt.duration !== "number") {
        if (opt.duration in jQuery.fx.speeds) {
          opt.duration = jQuery.fx.speeds[opt.duration];
        } else {
          opt.duration = jQuery.fx.speeds._default;
        }
      }
    } // Normalize opt.queue - true/undefined/null -> "fx"


    if (opt.queue == null || opt.queue === true) {
      opt.queue = "fx";
    } // Queueing


    opt.old = opt.complete;

    opt.complete = function () {
      if (isFunction(opt.old)) {
        opt.old.call(this);
      }

      if (opt.queue) {
        jQuery.dequeue(this, opt.queue);
      }
    };

    return opt;
  };

  jQuery.fn.extend({
    fadeTo: function fadeTo(speed, to, easing, callback) {
      // Show any hidden elements after setting opacity to 0
      return this.filter(isHiddenWithinTree).css("opacity", 0).show() // Animate to the value specified
      .end().animate({
        opacity: to
      }, speed, easing, callback);
    },
    animate: function animate(prop, speed, easing, callback) {
      var empty = jQuery.isEmptyObject(prop),
          optall = jQuery.speed(speed, easing, callback),
          doAnimation = function doAnimation() {
        // Operate on a copy of prop so per-property easing won't be lost
        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately

        if (empty || dataPriv.get(this, "finish")) {
          anim.stop(true);
        }
      };

      doAnimation.finish = doAnimation;
      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
    },
    stop: function stop(type, clearQueue, gotoEnd) {
      var stopQueue = function stopQueue(hooks) {
        var stop = hooks.stop;
        delete hooks.stop;
        stop(gotoEnd);
      };

      if (typeof type !== "string") {
        gotoEnd = clearQueue;
        clearQueue = type;
        type = undefined;
      }

      if (clearQueue) {
        this.queue(type || "fx", []);
      }

      return this.each(function () {
        var dequeue = true,
            index = type != null && type + "queueHooks",
            timers = jQuery.timers,
            data = dataPriv.get(this);

        if (index) {
          if (data[index] && data[index].stop) {
            stopQueue(data[index]);
          }
        } else {
          for (index in data) {
            if (data[index] && data[index].stop && rrun.test(index)) {
              stopQueue(data[index]);
            }
          }
        }

        for (index = timers.length; index--;) {
          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
            timers[index].anim.stop(gotoEnd);
            dequeue = false;
            timers.splice(index, 1);
          }
        } // Start the next in the queue if the last step wasn't forced.
        // Timers currently will call their complete callbacks, which
        // will dequeue but only if they were gotoEnd.


        if (dequeue || !gotoEnd) {
          jQuery.dequeue(this, type);
        }
      });
    },
    finish: function finish(type) {
      if (type !== false) {
        type = type || "fx";
      }

      return this.each(function () {
        var index,
            data = dataPriv.get(this),
            queue = data[type + "queue"],
            hooks = data[type + "queueHooks"],
            timers = jQuery.timers,
            length = queue ? queue.length : 0; // Enable finishing flag on private data

        data.finish = true; // Empty the queue first

        jQuery.queue(this, type, []);

        if (hooks && hooks.stop) {
          hooks.stop.call(this, true);
        } // Look for any active animations, and finish them


        for (index = timers.length; index--;) {
          if (timers[index].elem === this && timers[index].queue === type) {
            timers[index].anim.stop(true);
            timers.splice(index, 1);
          }
        } // Look for any animations in the old queue and finish them


        for (index = 0; index < length; index++) {
          if (queue[index] && queue[index].finish) {
            queue[index].finish.call(this);
          }
        } // Turn off finishing flag


        delete data.finish;
      });
    }
  });
  jQuery.each(["toggle", "show", "hide"], function (_i, name) {
    var cssFn = jQuery.fn[name];

    jQuery.fn[name] = function (speed, easing, callback) {
      return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
    };
  }); // Generate shortcuts for custom animations

  jQuery.each({
    slideDown: genFx("show"),
    slideUp: genFx("hide"),
    slideToggle: genFx("toggle"),
    fadeIn: {
      opacity: "show"
    },
    fadeOut: {
      opacity: "hide"
    },
    fadeToggle: {
      opacity: "toggle"
    }
  }, function (name, props) {
    jQuery.fn[name] = function (speed, easing, callback) {
      return this.animate(props, speed, easing, callback);
    };
  });
  jQuery.timers = [];

  jQuery.fx.tick = function () {
    var timer,
        i = 0,
        timers = jQuery.timers;
    fxNow = Date.now();

    for (; i < timers.length; i++) {
      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)

      if (!timer() && timers[i] === timer) {
        timers.splice(i--, 1);
      }
    }

    if (!timers.length) {
      jQuery.fx.stop();
    }

    fxNow = undefined;
  };

  jQuery.fx.timer = function (timer) {
    jQuery.timers.push(timer);
    jQuery.fx.start();
  };

  jQuery.fx.interval = 13;

  jQuery.fx.start = function () {
    if (inProgress) {
      return;
    }

    inProgress = true;
    schedule();
  };

  jQuery.fx.stop = function () {
    inProgress = null;
  };

  jQuery.fx.speeds = {
    slow: 600,
    fast: 200,
    // Default speed
    _default: 400
  }; // Based off of the plugin by Clint Helfers, with permission.
  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/

  jQuery.fn.delay = function (time, type) {
    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
    type = type || "fx";
    return this.queue(type, function (next, hooks) {
      var timeout = window.setTimeout(next, time);

      hooks.stop = function () {
        window.clearTimeout(timeout);
      };
    });
  };

  (function () {
    var input = document.createElement("input"),
        select = document.createElement("select"),
        opt = select.appendChild(document.createElement("option"));
    input.type = "checkbox"; // Support: Android <=4.3 only
    // Default value for a checkbox should be "on"

    support.checkOn = input.value !== ""; // Support: IE <=11 only
    // Must access selectedIndex to make default options select

    support.optSelected = opt.selected; // Support: IE <=11 only
    // An input loses its value after becoming a radio

    input = document.createElement("input");
    input.value = "t";
    input.type = "radio";
    support.radioValue = input.value === "t";
  })();

  var boolHook,
      attrHandle = jQuery.expr.attrHandle;
  jQuery.fn.extend({
    attr: function attr(name, value) {
      return access(this, jQuery.attr, name, value, arguments.length > 1);
    },
    removeAttr: function removeAttr(name) {
      return this.each(function () {
        jQuery.removeAttr(this, name);
      });
    }
  });
  jQuery.extend({
    attr: function attr(elem, name, value) {
      var ret,
          hooks,
          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes

      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      } // Fallback to prop when attributes are not supported


      if (typeof elem.getAttribute === "undefined") {
        return jQuery.prop(elem, name, value);
      } // Attribute hooks are determined by the lowercase version
      // Grab necessary hook if one is defined


      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
      }

      if (value !== undefined) {
        if (value === null) {
          jQuery.removeAttr(elem, name);
          return;
        }

        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        }

        elem.setAttribute(name, value + "");
        return value;
      }

      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }

      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined

      return ret == null ? undefined : ret;
    },
    attrHooks: {
      type: {
        set: function set(elem, value) {
          if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
            var val = elem.value;
            elem.setAttribute("type", value);

            if (val) {
              elem.value = val;
            }

            return value;
          }
        }
      }
    },
    removeAttr: function removeAttr(elem, value) {
      var name,
          i = 0,
          // Attribute names can contain non-HTML whitespace characters
      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
      attrNames = value && value.match(rnothtmlwhite);

      if (attrNames && elem.nodeType === 1) {
        while (name = attrNames[i++]) {
          elem.removeAttribute(name);
        }
      }
    }
  }); // Hooks for boolean attributes

  boolHook = {
    set: function set(elem, value, name) {
      if (value === false) {
        // Remove boolean attributes when set to false
        jQuery.removeAttr(elem, name);
      } else {
        elem.setAttribute(name, name);
      }

      return name;
    }
  };
  jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (_i, name) {
    var getter = attrHandle[name] || jQuery.find.attr;

    attrHandle[name] = function (elem, name, isXML) {
      var ret,
          handle,
          lowercaseName = name.toLowerCase();

      if (!isXML) {
        // Avoid an infinite loop by temporarily removing this function from the getter
        handle = attrHandle[lowercaseName];
        attrHandle[lowercaseName] = ret;
        ret = getter(elem, name, isXML) != null ? lowercaseName : null;
        attrHandle[lowercaseName] = handle;
      }

      return ret;
    };
  });
  var rfocusable = /^(?:input|select|textarea|button)$/i,
      rclickable = /^(?:a|area)$/i;
  jQuery.fn.extend({
    prop: function prop(name, value) {
      return access(this, jQuery.prop, name, value, arguments.length > 1);
    },
    removeProp: function removeProp(name) {
      return this.each(function () {
        delete this[jQuery.propFix[name] || name];
      });
    }
  });
  jQuery.extend({
    prop: function prop(elem, name, value) {
      var ret,
          hooks,
          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes

      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      }

      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        // Fix name and attach hooks
        name = jQuery.propFix[name] || name;
        hooks = jQuery.propHooks[name];
      }

      if (value !== undefined) {
        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        }

        return elem[name] = value;
      }

      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }

      return elem[name];
    },
    propHooks: {
      tabIndex: {
        get: function get(elem) {
          // Support: IE <=9 - 11 only
          // elem.tabIndex doesn't always return the
          // correct value when it hasn't been explicitly set
          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
          // Use proper attribute retrieval(#12072)
          var tabindex = jQuery.find.attr(elem, "tabindex");

          if (tabindex) {
            return parseInt(tabindex, 10);
          }

          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
            return 0;
          }

          return -1;
        }
      }
    },
    propFix: {
      "for": "htmlFor",
      "class": "className"
    }
  }); // Support: IE <=11 only
  // Accessing the selectedIndex property
  // forces the browser to respect setting selected
  // on the option
  // The getter ensures a default option is selected
  // when in an optgroup
  // eslint rule "no-unused-expressions" is disabled for this code
  // since it considers such accessions noop

  if (!support.optSelected) {
    jQuery.propHooks.selected = {
      get: function get(elem) {
        /* eslint no-unused-expressions: "off" */
        var parent = elem.parentNode;

        if (parent && parent.parentNode) {
          parent.parentNode.selectedIndex;
        }

        return null;
      },
      set: function set(elem) {
        /* eslint no-unused-expressions: "off" */
        var parent = elem.parentNode;

        if (parent) {
          parent.selectedIndex;

          if (parent.parentNode) {
            parent.parentNode.selectedIndex;
          }
        }
      }
    };
  }

  jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
    jQuery.propFix[this.toLowerCase()] = this;
  }); // Strip and collapse whitespace according to HTML spec
  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace

  function stripAndCollapse(value) {
    var tokens = value.match(rnothtmlwhite) || [];
    return tokens.join(" ");
  }

  function getClass(elem) {
    return elem.getAttribute && elem.getAttribute("class") || "";
  }

  function classesToArray(value) {
    if (Array.isArray(value)) {
      return value;
    }

    if (typeof value === "string") {
      return value.match(rnothtmlwhite) || [];
    }

    return [];
  }

  jQuery.fn.extend({
    addClass: function addClass(value) {
      var classes,
          elem,
          cur,
          curValue,
          clazz,
          j,
          finalValue,
          i = 0;

      if (isFunction(value)) {
        return this.each(function (j) {
          jQuery(this).addClass(value.call(this, j, getClass(this)));
        });
      }

      classes = classesToArray(value);

      if (classes.length) {
        while (elem = this[i++]) {
          curValue = getClass(elem);
          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

          if (cur) {
            j = 0;

            while (clazz = classes[j++]) {
              if (cur.indexOf(" " + clazz + " ") < 0) {
                cur += clazz + " ";
              }
            } // Only assign if different to avoid unneeded rendering.


            finalValue = stripAndCollapse(cur);

            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }

      return this;
    },
    removeClass: function removeClass(value) {
      var classes,
          elem,
          cur,
          curValue,
          clazz,
          j,
          finalValue,
          i = 0;

      if (isFunction(value)) {
        return this.each(function (j) {
          jQuery(this).removeClass(value.call(this, j, getClass(this)));
        });
      }

      if (!arguments.length) {
        return this.attr("class", "");
      }

      classes = classesToArray(value);

      if (classes.length) {
        while (elem = this[i++]) {
          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)

          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

          if (cur) {
            j = 0;

            while (clazz = classes[j++]) {
              // Remove *all* instances
              while (cur.indexOf(" " + clazz + " ") > -1) {
                cur = cur.replace(" " + clazz + " ", " ");
              }
            } // Only assign if different to avoid unneeded rendering.


            finalValue = stripAndCollapse(cur);

            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }

      return this;
    },
    toggleClass: function toggleClass(value, stateVal) {
      var type = _typeof(value),
          isValidValue = type === "string" || Array.isArray(value);

      if (typeof stateVal === "boolean" && isValidValue) {
        return stateVal ? this.addClass(value) : this.removeClass(value);
      }

      if (isFunction(value)) {
        return this.each(function (i) {
          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
        });
      }

      return this.each(function () {
        var className, i, self, classNames;

        if (isValidValue) {
          // Toggle individual class names
          i = 0;
          self = jQuery(this);
          classNames = classesToArray(value);

          while (className = classNames[i++]) {
            // Check each className given, space separated list
            if (self.hasClass(className)) {
              self.removeClass(className);
            } else {
              self.addClass(className);
            }
          } // Toggle whole class name

        } else if (value === undefined || type === "boolean") {
          className = getClass(this);

          if (className) {
            // Store className if set
            dataPriv.set(this, "__className__", className);
          } // If the element has a class name or if we're passed `false`,
          // then remove the whole classname (if there was one, the above saved it).
          // Otherwise bring back whatever was previously saved (if anything),
          // falling back to the empty string if nothing was stored.


          if (this.setAttribute) {
            this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
          }
        }
      });
    },
    hasClass: function hasClass(selector) {
      var className,
          elem,
          i = 0;
      className = " " + selector + " ";

      while (elem = this[i++]) {
        if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
          return true;
        }
      }

      return false;
    }
  });
  var rreturn = /\r/g;
  jQuery.fn.extend({
    val: function val(value) {
      var hooks,
          ret,
          valueIsFunction,
          elem = this[0];

      if (!arguments.length) {
        if (elem) {
          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];

          if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
            return ret;
          }

          ret = elem.value; // Handle most common string cases

          if (typeof ret === "string") {
            return ret.replace(rreturn, "");
          } // Handle cases where value is null/undef or number


          return ret == null ? "" : ret;
        }

        return;
      }

      valueIsFunction = isFunction(value);
      return this.each(function (i) {
        var val;

        if (this.nodeType !== 1) {
          return;
        }

        if (valueIsFunction) {
          val = value.call(this, i, jQuery(this).val());
        } else {
          val = value;
        } // Treat null/undefined as ""; convert numbers to string


        if (val == null) {
          val = "";
        } else if (typeof val === "number") {
          val += "";
        } else if (Array.isArray(val)) {
          val = jQuery.map(val, function (value) {
            return value == null ? "" : value + "";
          });
        }

        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting

        if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
          this.value = val;
        }
      });
    }
  });
  jQuery.extend({
    valHooks: {
      option: {
        get: function get(elem) {
          var val = jQuery.find.attr(elem, "value");
          return val != null ? val : // Support: IE <=10 - 11 only
          // option.text throws exceptions (#14686, #14858)
          // Strip and collapse whitespace
          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
          stripAndCollapse(jQuery.text(elem));
        }
      },
      select: {
        get: function get(elem) {
          var value,
              option,
              i,
              options = elem.options,
              index = elem.selectedIndex,
              one = elem.type === "select-one",
              values = one ? null : [],
              max = one ? index + 1 : options.length;

          if (index < 0) {
            i = max;
          } else {
            i = one ? index : 0;
          } // Loop through all the selected options


          for (; i < max; i++) {
            option = options[i]; // Support: IE <=9 only
            // IE8-9 doesn't update selected after form reset (#2551)

            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup
            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
              // Get the specific value for the option
              value = jQuery(option).val(); // We don't need an array for one selects

              if (one) {
                return value;
              } // Multi-Selects return an array


              values.push(value);
            }
          }

          return values;
        },
        set: function set(elem, value) {
          var optionSet,
              option,
              options = elem.options,
              values = jQuery.makeArray(value),
              i = options.length;

          while (i--) {
            option = options[i];
            /* eslint-disable no-cond-assign */

            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
              optionSet = true;
            }
            /* eslint-enable no-cond-assign */

          } // Force browsers to behave consistently when non-matching value is set


          if (!optionSet) {
            elem.selectedIndex = -1;
          }

          return values;
        }
      }
    }
  }); // Radios and checkboxes getter/setter

  jQuery.each(["radio", "checkbox"], function () {
    jQuery.valHooks[this] = {
      set: function set(elem, value) {
        if (Array.isArray(value)) {
          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
        }
      }
    };

    if (!support.checkOn) {
      jQuery.valHooks[this].get = function (elem) {
        return elem.getAttribute("value") === null ? "on" : elem.value;
      };
    }
  }); // Return jQuery for attributes-only inclusion

  support.focusin = "onfocusin" in window;

  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
      stopPropagationCallback = function stopPropagationCallback(e) {
    e.stopPropagation();
  };

  jQuery.extend(jQuery.event, {
    trigger: function trigger(event, data, elem, onlyHandlers) {
      var i,
          cur,
          tmp,
          bubbleType,
          ontype,
          handle,
          special,
          lastElement,
          eventPath = [elem || document],
          type = hasOwn.call(event, "type") ? event.type : event,
          namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes

      if (elem.nodeType === 3 || elem.nodeType === 8) {
        return;
      } // focus/blur morphs to focusin/out; ensure we're not firing them right now


      if (rfocusMorph.test(type + jQuery.event.triggered)) {
        return;
      }

      if (type.indexOf(".") > -1) {
        // Namespaced trigger; create a regexp to match event type in handle()
        namespaces = type.split(".");
        type = namespaces.shift();
        namespaces.sort();
      }

      ontype = type.indexOf(":") < 0 && "on" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string

      event = event[jQuery.expando] ? event : new jQuery.Event(type, _typeof(event) === "object" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)

      event.isTrigger = onlyHandlers ? 2 : 3;
      event.namespace = namespaces.join(".");
      event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null; // Clean up the event in case it is being reused

      event.result = undefined;

      if (!event.target) {
        event.target = elem;
      } // Clone any incoming data and prepend the event, creating the handler arg list


      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines

      special = jQuery.event.special[type] || {};

      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
        return;
      } // Determine event propagation path in advance, per W3C events spec (#9951)
      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)


      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
        bubbleType = special.delegateType || type;

        if (!rfocusMorph.test(bubbleType + type)) {
          cur = cur.parentNode;
        }

        for (; cur; cur = cur.parentNode) {
          eventPath.push(cur);
          tmp = cur;
        } // Only add window if we got to document (e.g., not plain obj or detached DOM)


        if (tmp === (elem.ownerDocument || document)) {
          eventPath.push(tmp.defaultView || tmp.parentWindow || window);
        }
      } // Fire handlers on the event path


      i = 0;

      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
        lastElement = cur;
        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler

        handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle");

        if (handle) {
          handle.apply(cur, data);
        } // Native handler


        handle = ontype && cur[ontype];

        if (handle && handle.apply && acceptData(cur)) {
          event.result = handle.apply(cur, data);

          if (event.result === false) {
            event.preventDefault();
          }
        }
      }

      event.type = type; // If nobody prevented the default action, do it now

      if (!onlyHandlers && !event.isDefaultPrevented()) {
        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
          // Call a native DOM method on the target with the same name as the event.
          // Don't do default actions on window, that's where global variables be (#6170)
          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
            // Don't re-trigger an onFOO event when we call its FOO() method
            tmp = elem[ontype];

            if (tmp) {
              elem[ontype] = null;
            } // Prevent re-triggering of the same event, since we already bubbled it above


            jQuery.event.triggered = type;

            if (event.isPropagationStopped()) {
              lastElement.addEventListener(type, stopPropagationCallback);
            }

            elem[type]();

            if (event.isPropagationStopped()) {
              lastElement.removeEventListener(type, stopPropagationCallback);
            }

            jQuery.event.triggered = undefined;

            if (tmp) {
              elem[ontype] = tmp;
            }
          }
        }
      }

      return event.result;
    },
    // Piggyback on a donor event to simulate a different one
    // Used only for `focus(in | out)` events
    simulate: function simulate(type, elem, event) {
      var e = jQuery.extend(new jQuery.Event(), event, {
        type: type,
        isSimulated: true
      });
      jQuery.event.trigger(e, null, elem);
    }
  });
  jQuery.fn.extend({
    trigger: function trigger(type, data) {
      return this.each(function () {
        jQuery.event.trigger(type, data, this);
      });
    },
    triggerHandler: function triggerHandler(type, data) {
      var elem = this[0];

      if (elem) {
        return jQuery.event.trigger(type, data, elem, true);
      }
    }
  }); // Support: Firefox <=44
  // Firefox doesn't have focus(in | out) events
  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
  //
  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
  // focus(in | out) events fire after focus & blur events,
  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857

  if (!support.focusin) {
    jQuery.each({
      focus: "focusin",
      blur: "focusout"
    }, function (orig, fix) {
      // Attach a single capturing handler on the document while someone wants focusin/focusout
      var handler = function handler(event) {
        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
      };

      jQuery.event.special[fix] = {
        setup: function setup() {
          // Handle: regular nodes (via `this.ownerDocument`), window
          // (via `this.document`) & document (via `this`).
          var doc = this.ownerDocument || this.document || this,
              attaches = dataPriv.access(doc, fix);

          if (!attaches) {
            doc.addEventListener(orig, handler, true);
          }

          dataPriv.access(doc, fix, (attaches || 0) + 1);
        },
        teardown: function teardown() {
          var doc = this.ownerDocument || this.document || this,
              attaches = dataPriv.access(doc, fix) - 1;

          if (!attaches) {
            doc.removeEventListener(orig, handler, true);
            dataPriv.remove(doc, fix);
          } else {
            dataPriv.access(doc, fix, attaches);
          }
        }
      };
    });
  }

  var location = window.location;
  var nonce = {
    guid: Date.now()
  };
  var rquery = /\?/; // Cross-browser xml parsing

  jQuery.parseXML = function (data) {
    var xml;

    if (!data || typeof data !== "string") {
      return null;
    } // Support: IE 9 - 11 only
    // IE throws on parseFromString with invalid input.


    try {
      xml = new window.DOMParser().parseFromString(data, "text/xml");
    } catch (e) {
      xml = undefined;
    }

    if (!xml || xml.getElementsByTagName("parsererror").length) {
      jQuery.error("Invalid XML: " + data);
    }

    return xml;
  };

  var rbracket = /\[\]$/,
      rCRLF = /\r?\n/g,
      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
      rsubmittable = /^(?:input|select|textarea|keygen)/i;

  function buildParams(prefix, obj, traditional, add) {
    var name;

    if (Array.isArray(obj)) {
      // Serialize array item.
      jQuery.each(obj, function (i, v) {
        if (traditional || rbracket.test(prefix)) {
          // Treat each array item as a scalar.
          add(prefix, v);
        } else {
          // Item is non-scalar (array or object), encode its numeric index.
          buildParams(prefix + "[" + (_typeof(v) === "object" && v != null ? i : "") + "]", v, traditional, add);
        }
      });
    } else if (!traditional && toType(obj) === "object") {
      // Serialize object item.
      for (name in obj) {
        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
      }
    } else {
      // Serialize scalar item.
      add(prefix, obj);
    }
  } // Serialize an array of form elements or a set of
  // key/values into a query string


  jQuery.param = function (a, traditional) {
    var prefix,
        s = [],
        add = function add(key, valueOrFunction) {
      // If value is a function, invoke it and use its return value
      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
      s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
    };

    if (a == null) {
      return "";
    } // If an array was passed in, assume that it is an array of form elements.


    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
      // Serialize the form elements
      jQuery.each(a, function () {
        add(this.name, this.value);
      });
    } else {
      // If traditional, encode the "old" way (the way 1.3.2 or older
      // did it), otherwise encode params recursively.
      for (prefix in a) {
        buildParams(prefix, a[prefix], traditional, add);
      }
    } // Return the resulting serialization


    return s.join("&");
  };

  jQuery.fn.extend({
    serialize: function serialize() {
      return jQuery.param(this.serializeArray());
    },
    serializeArray: function serializeArray() {
      return this.map(function () {
        // Can add propHook for "elements" to filter or add form elements
        var elements = jQuery.prop(this, "elements");
        return elements ? jQuery.makeArray(elements) : this;
      }).filter(function () {
        var type = this.type; // Use .is( ":disabled" ) so that fieldset[disabled] works

        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
      }).map(function (_i, elem) {
        var val = jQuery(this).val();

        if (val == null) {
          return null;
        }

        if (Array.isArray(val)) {
          return jQuery.map(val, function (val) {
            return {
              name: elem.name,
              value: val.replace(rCRLF, "\r\n")
            };
          });
        }

        return {
          name: elem.name,
          value: val.replace(rCRLF, "\r\n")
        };
      }).get();
    }
  });
  var r20 = /%20/g,
      rhash = /#.*$/,
      rantiCache = /([?&])_=[^&]*/,
      rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
      // #7653, #8125, #8152: local protocol detection
  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      rnoContent = /^(?:GET|HEAD)$/,
      rprotocol = /^\/\//,

  /* Prefilters
   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
   * 2) These are called:
   *    - BEFORE asking for a transport
   *    - AFTER param serialization (s.data is a string if s.processData is true)
   * 3) key is the dataType
   * 4) the catchall symbol "*" can be used
   * 5) execution will start with transport dataType and THEN continue down to "*" if needed
   */
  prefilters = {},

  /* Transports bindings
   * 1) key is the dataType
   * 2) the catchall symbol "*" can be used
   * 3) selection will start with transport dataType and THEN go to "*" if needed
   */
  transports = {},
      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
  allTypes = "*/".concat("*"),
      // Anchor tag for parsing the document origin
  originAnchor = document.createElement("a");
  originAnchor.href = location.href; // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport

  function addToPrefiltersOrTransports(structure) {
    // dataTypeExpression is optional and defaults to "*"
    return function (dataTypeExpression, func) {
      if (typeof dataTypeExpression !== "string") {
        func = dataTypeExpression;
        dataTypeExpression = "*";
      }

      var dataType,
          i = 0,
          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];

      if (isFunction(func)) {
        // For each dataType in the dataTypeExpression
        while (dataType = dataTypes[i++]) {
          // Prepend if requested
          if (dataType[0] === "+") {
            dataType = dataType.slice(1) || "*";
            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append
          } else {
            (structure[dataType] = structure[dataType] || []).push(func);
          }
        }
      }
    };
  } // Base inspection function for prefilters and transports


  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
    var inspected = {},
        seekingTransport = structure === transports;

    function inspect(dataType) {
      var selected;
      inspected[dataType] = true;
      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);

        if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
          options.dataTypes.unshift(dataTypeOrTransport);
          inspect(dataTypeOrTransport);
          return false;
        } else if (seekingTransport) {
          return !(selected = dataTypeOrTransport);
        }
      });
      return selected;
    }

    return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
  } // A special extend for ajax options
  // that takes "flat" options (not to be deep extended)
  // Fixes #9887


  function ajaxExtend(target, src) {
    var key,
        deep,
        flatOptions = jQuery.ajaxSettings.flatOptions || {};

    for (key in src) {
      if (src[key] !== undefined) {
        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
      }
    }

    if (deep) {
      jQuery.extend(true, target, deep);
    }

    return target;
  }
  /* Handles responses to an ajax request:
   * - finds the right dataType (mediates between content-type and expected dataType)
   * - returns the corresponding response
   */


  function ajaxHandleResponses(s, jqXHR, responses) {
    var ct,
        type,
        finalDataType,
        firstDataType,
        contents = s.contents,
        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process

    while (dataTypes[0] === "*") {
      dataTypes.shift();

      if (ct === undefined) {
        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
      }
    } // Check if we're dealing with a known content-type


    if (ct) {
      for (type in contents) {
        if (contents[type] && contents[type].test(ct)) {
          dataTypes.unshift(type);
          break;
        }
      }
    } // Check to see if we have a response for the expected dataType


    if (dataTypes[0] in responses) {
      finalDataType = dataTypes[0];
    } else {
      // Try convertible dataTypes
      for (type in responses) {
        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
          finalDataType = type;
          break;
        }

        if (!firstDataType) {
          firstDataType = type;
        }
      } // Or just use first one


      finalDataType = finalDataType || firstDataType;
    } // If we found a dataType
    // We add the dataType to the list if needed
    // and return the corresponding response


    if (finalDataType) {
      if (finalDataType !== dataTypes[0]) {
        dataTypes.unshift(finalDataType);
      }

      return responses[finalDataType];
    }
  }
  /* Chain conversions given the request and the original response
   * Also sets the responseXXX fields on the jqXHR instance
   */


  function ajaxConvert(s, response, jqXHR, isSuccess) {
    var conv2,
        current,
        conv,
        tmp,
        prev,
        converters = {},
        // Work with a copy of dataTypes in case we need to modify it for conversion
    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys

    if (dataTypes[1]) {
      for (conv in s.converters) {
        converters[conv.toLowerCase()] = s.converters[conv];
      }
    }

    current = dataTypes.shift(); // Convert to each sequential dataType

    while (current) {
      if (s.responseFields[current]) {
        jqXHR[s.responseFields[current]] = response;
      } // Apply the dataFilter if provided


      if (!prev && isSuccess && s.dataFilter) {
        response = s.dataFilter(response, s.dataType);
      }

      prev = current;
      current = dataTypes.shift();

      if (current) {
        // There's only work to do if current dataType is non-auto
        if (current === "*") {
          current = prev; // Convert response if prev dataType is non-auto and differs from current
        } else if (prev !== "*" && prev !== current) {
          // Seek a direct converter
          conv = converters[prev + " " + current] || converters["* " + current]; // If none found, seek a pair

          if (!conv) {
            for (conv2 in converters) {
              // If conv2 outputs current
              tmp = conv2.split(" ");

              if (tmp[1] === current) {
                // If prev can be converted to accepted input
                conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];

                if (conv) {
                  // Condense equivalence converters
                  if (conv === true) {
                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType
                  } else if (converters[conv2] !== true) {
                    current = tmp[0];
                    dataTypes.unshift(tmp[1]);
                  }

                  break;
                }
              }
            }
          } // Apply converter (if not an equivalence)


          if (conv !== true) {
            // Unless errors are allowed to bubble, catch and return them
            if (conv && s.throws) {
              response = conv(response);
            } else {
              try {
                response = conv(response);
              } catch (e) {
                return {
                  state: "parsererror",
                  error: conv ? e : "No conversion from " + prev + " to " + current
                };
              }
            }
          }
        }
      }
    }

    return {
      state: "success",
      data: response
    };
  }

  jQuery.extend({
    // Counter for holding the number of active queries
    active: 0,
    // Last-Modified header cache for next request
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: location.href,
      type: "GET",
      isLocal: rlocalProtocol.test(location.protocol),
      global: true,
      processData: true,
      async: true,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",

      /*
      timeout: 0,
      data: null,
      dataType: null,
      username: null,
      password: null,
      cache: null,
      throws: false,
      traditional: false,
      headers: {},
      */
      accepts: {
        "*": allTypes,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript"
      },
      contents: {
        xml: /\bxml\b/,
        html: /\bhtml/,
        json: /\bjson\b/
      },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON"
      },
      // Data converters
      // Keys separate source (or catchall "*") and destination types with a single space
      converters: {
        // Convert anything to text
        "* text": String,
        // Text to html (true = no transformation)
        "text html": true,
        // Evaluate text as a json expression
        "text json": JSON.parse,
        // Parse text as xml
        "text xml": jQuery.parseXML
      },
      // For options that shouldn't be deep extended:
      // you can add your own custom options here if
      // and when you create one that shouldn't be
      // deep extended (see ajaxExtend)
      flatOptions: {
        url: true,
        context: true
      }
    },
    // Creates a full fledged settings object into target
    // with both ajaxSettings and settings fields.
    // If target is omitted, writes into ajaxSettings.
    ajaxSetup: function ajaxSetup(target, settings) {
      return settings ? // Building a settings object
      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings
      ajaxExtend(jQuery.ajaxSettings, target);
    },
    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
    ajaxTransport: addToPrefiltersOrTransports(transports),
    // Main method
    ajax: function ajax(url, options) {
      // If url is an object, simulate pre-1.5 signature
      if (_typeof(url) === "object") {
        options = url;
        url = undefined;
      } // Force options to be an object


      options = options || {};

      var transport,
          // URL without anti-cache param
      cacheURL,
          // Response headers
      responseHeadersString,
          responseHeaders,
          // timeout handle
      timeoutTimer,
          // Url cleanup var
      urlAnchor,
          // Request state (becomes false upon send and true upon completion)
      completed,
          // To know if global events are to be dispatched
      fireGlobals,
          // Loop variable
      i,
          // uncached part of the url
      uncached,
          // Create the final options object
      s = jQuery.ajaxSetup({}, options),
          // Callbacks context
      callbackContext = s.context || s,
          // Context for global events is callbackContext if it is a DOM node or jQuery collection
      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
          // Deferreds
      deferred = jQuery.Deferred(),
          completeDeferred = jQuery.Callbacks("once memory"),
          // Status-dependent callbacks
      _statusCode = s.statusCode || {},
          // Headers (they are sent all at once)
      requestHeaders = {},
          requestHeadersNames = {},
          // Default abort message
      strAbort = "canceled",
          // Fake xhr
      jqXHR = {
        readyState: 0,
        // Builds headers hashtable if needed
        getResponseHeader: function getResponseHeader(key) {
          var match;

          if (completed) {
            if (!responseHeaders) {
              responseHeaders = {};

              while (match = rheaders.exec(responseHeadersString)) {
                responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
              }
            }

            match = responseHeaders[key.toLowerCase() + " "];
          }

          return match == null ? null : match.join(", ");
        },
        // Raw string
        getAllResponseHeaders: function getAllResponseHeaders() {
          return completed ? responseHeadersString : null;
        },
        // Caches the header
        setRequestHeader: function setRequestHeader(name, value) {
          if (completed == null) {
            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
            requestHeaders[name] = value;
          }

          return this;
        },
        // Overrides response content-type header
        overrideMimeType: function overrideMimeType(type) {
          if (completed == null) {
            s.mimeType = type;
          }

          return this;
        },
        // Status-dependent callbacks
        statusCode: function statusCode(map) {
          var code;

          if (map) {
            if (completed) {
              // Execute the appropriate callbacks
              jqXHR.always(map[jqXHR.status]);
            } else {
              // Lazy-add the new callbacks in a way that preserves old ones
              for (code in map) {
                _statusCode[code] = [_statusCode[code], map[code]];
              }
            }
          }

          return this;
        },
        // Cancel the request
        abort: function abort(statusText) {
          var finalText = statusText || strAbort;

          if (transport) {
            transport.abort(finalText);
          }

          done(0, finalText);
          return this;
        }
      }; // Attach deferreds


      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)
      // Handle falsy url in the settings object (#10093: consistency with old signature)
      // We also use the url parameter if available

      s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//"); // Alias method option to type as per ticket #12004

      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list

      s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""]; // A cross-domain request is in order when the origin doesn't match the current origin.

      if (s.crossDomain == null) {
        urlAnchor = document.createElement("a"); // Support: IE <=8 - 11, Edge 12 - 15
        // IE throws exception on accessing the href property if url is malformed,
        // e.g. http://example.com:80x/

        try {
          urlAnchor.href = s.url; // Support: IE <=8 - 11 only
          // Anchor's host property isn't correctly set when s.url is relative

          urlAnchor.href = urlAnchor.href;
          s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
        } catch (e) {
          // If there is an error parsing the URL, assume it is crossDomain,
          // it can be rejected by the transport if it is invalid
          s.crossDomain = true;
        }
      } // Convert data if not already a string


      if (s.data && s.processData && typeof s.data !== "string") {
        s.data = jQuery.param(s.data, s.traditional);
      } // Apply prefilters


      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there

      if (completed) {
        return jqXHR;
      } // We can fire global events as of now if asked to
      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)


      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests

      if (fireGlobals && jQuery.active++ === 0) {
        jQuery.event.trigger("ajaxStart");
      } // Uppercase the type


      s.type = s.type.toUpperCase(); // Determine if request has content

      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since
      // and/or If-None-Match header later on
      // Remove hash to simplify url manipulation

      cacheURL = s.url.replace(rhash, ""); // More options handling for requests with no content

      if (!s.hasContent) {
        // Remember the hash so we can put it back
        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url

        if (s.data && (s.processData || typeof s.data === "string")) {
          cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data; // #9682: remove data so that it's not used in an eventual retry

          delete s.data;
        } // Add or update anti-cache param if needed


        if (s.cache === false) {
          cacheURL = cacheURL.replace(rantiCache, "$1");
          uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
        } // Put hash and anti-cache on the URL that will be requested (gh-1732)


        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)
      } else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
        s.data = s.data.replace(r20, "+");
      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.


      if (s.ifModified) {
        if (jQuery.lastModified[cacheURL]) {
          jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
        }

        if (jQuery.etag[cacheURL]) {
          jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
        }
      } // Set the correct header, if data is being sent


      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
        jqXHR.setRequestHeader("Content-Type", s.contentType);
      } // Set the Accepts header for the server, depending on the dataType


      jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]); // Check for headers option

      for (i in s.headers) {
        jqXHR.setRequestHeader(i, s.headers[i]);
      } // Allow custom headers/mimetypes and early abort


      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {
        // Abort if not done already and return
        return jqXHR.abort();
      } // Aborting is no longer a cancellation


      strAbort = "abort"; // Install callbacks on deferreds

      completeDeferred.add(s.complete);
      jqXHR.done(s.success);
      jqXHR.fail(s.error); // Get transport

      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort

      if (!transport) {
        done(-1, "No Transport");
      } else {
        jqXHR.readyState = 1; // Send global event

        if (fireGlobals) {
          globalEventContext.trigger("ajaxSend", [jqXHR, s]);
        } // If request was aborted inside ajaxSend, stop there


        if (completed) {
          return jqXHR;
        } // Timeout


        if (s.async && s.timeout > 0) {
          timeoutTimer = window.setTimeout(function () {
            jqXHR.abort("timeout");
          }, s.timeout);
        }

        try {
          completed = false;
          transport.send(requestHeaders, done);
        } catch (e) {
          // Rethrow post-completion exceptions
          if (completed) {
            throw e;
          } // Propagate others as results


          done(-1, e);
        }
      } // Callback for when everything is done


      function done(status, nativeStatusText, responses, headers) {
        var isSuccess,
            success,
            error,
            response,
            modified,
            statusText = nativeStatusText; // Ignore repeat invocations

        if (completed) {
          return;
        }

        completed = true; // Clear timeout if it exists

        if (timeoutTimer) {
          window.clearTimeout(timeoutTimer);
        } // Dereference transport for early garbage collection
        // (no matter how long the jqXHR object will be used)


        transport = undefined; // Cache response headers

        responseHeadersString = headers || ""; // Set readyState

        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful

        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data

        if (responses) {
          response = ajaxHandleResponses(s, jqXHR, responses);
        } // Use a noop converter for missing script


        if (!isSuccess && jQuery.inArray("script", s.dataTypes) > -1) {
          s.converters["text script"] = function () {};
        } // Convert no matter what (that way responseXXX fields are always set)


        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining

        if (isSuccess) {
          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
          if (s.ifModified) {
            modified = jqXHR.getResponseHeader("Last-Modified");

            if (modified) {
              jQuery.lastModified[cacheURL] = modified;
            }

            modified = jqXHR.getResponseHeader("etag");

            if (modified) {
              jQuery.etag[cacheURL] = modified;
            }
          } // if no content


          if (status === 204 || s.type === "HEAD") {
            statusText = "nocontent"; // if not modified
          } else if (status === 304) {
            statusText = "notmodified"; // If we have data, let's convert it
          } else {
            statusText = response.state;
            success = response.data;
            error = response.error;
            isSuccess = !error;
          }
        } else {
          // Extract error from statusText and normalize for non-aborts
          error = statusText;

          if (status || !statusText) {
            statusText = "error";

            if (status < 0) {
              status = 0;
            }
          }
        } // Set data for the fake xhr object


        jqXHR.status = status;
        jqXHR.statusText = (nativeStatusText || statusText) + ""; // Success/Error

        if (isSuccess) {
          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
        } else {
          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
        } // Status-dependent callbacks


        jqXHR.statusCode(_statusCode);
        _statusCode = undefined;

        if (fireGlobals) {
          globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);
        } // Complete


        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);

        if (fireGlobals) {
          globalEventContext.trigger("ajaxComplete", [jqXHR, s]); // Handle the global AJAX counter

          if (! --jQuery.active) {
            jQuery.event.trigger("ajaxStop");
          }
        }
      }

      return jqXHR;
    },
    getJSON: function getJSON(url, data, callback) {
      return jQuery.get(url, data, callback, "json");
    },
    getScript: function getScript(url, callback) {
      return jQuery.get(url, undefined, callback, "script");
    }
  });
  jQuery.each(["get", "post"], function (_i, method) {
    jQuery[method] = function (url, data, callback, type) {
      // Shift arguments if data argument was omitted
      if (isFunction(data)) {
        type = type || callback;
        callback = data;
        data = undefined;
      } // The url can be an options object (which then must have .url)


      return jQuery.ajax(jQuery.extend({
        url: url,
        type: method,
        dataType: type,
        data: data,
        success: callback
      }, jQuery.isPlainObject(url) && url));
    };
  });
  jQuery.ajaxPrefilter(function (s) {
    var i;

    for (i in s.headers) {
      if (i.toLowerCase() === "content-type") {
        s.contentType = s.headers[i] || "";
      }
    }
  });

  jQuery._evalUrl = function (url, options, doc) {
    return jQuery.ajax({
      url: url,
      // Make this explicit, since user can override this through ajaxSetup (#11264)
      type: "GET",
      dataType: "script",
      cache: true,
      async: false,
      global: false,
      // Only evaluate the response if it is successful (gh-4126)
      // dataFilter is not invoked for failure responses, so using it instead
      // of the default converter is kludgy but it works.
      converters: {
        "text script": function textScript() {}
      },
      dataFilter: function dataFilter(response) {
        jQuery.globalEval(response, options, doc);
      }
    });
  };

  jQuery.fn.extend({
    wrapAll: function wrapAll(html) {
      var wrap;

      if (this[0]) {
        if (isFunction(html)) {
          html = html.call(this[0]);
        } // The elements to wrap the target around


        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);

        if (this[0].parentNode) {
          wrap.insertBefore(this[0]);
        }

        wrap.map(function () {
          var elem = this;

          while (elem.firstElementChild) {
            elem = elem.firstElementChild;
          }

          return elem;
        }).append(this);
      }

      return this;
    },
    wrapInner: function wrapInner(html) {
      if (isFunction(html)) {
        return this.each(function (i) {
          jQuery(this).wrapInner(html.call(this, i));
        });
      }

      return this.each(function () {
        var self = jQuery(this),
            contents = self.contents();

        if (contents.length) {
          contents.wrapAll(html);
        } else {
          self.append(html);
        }
      });
    },
    wrap: function wrap(html) {
      var htmlIsFunction = isFunction(html);
      return this.each(function (i) {
        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
      });
    },
    unwrap: function unwrap(selector) {
      this.parent(selector).not("body").each(function () {
        jQuery(this).replaceWith(this.childNodes);
      });
      return this;
    }
  });

  jQuery.expr.pseudos.hidden = function (elem) {
    return !jQuery.expr.pseudos.visible(elem);
  };

  jQuery.expr.pseudos.visible = function (elem) {
    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
  };

  jQuery.ajaxSettings.xhr = function () {
    try {
      return new window.XMLHttpRequest();
    } catch (e) {}
  };

  var xhrSuccessStatus = {
    // File protocol always yields status code 0, assume 200
    0: 200,
    // Support: IE <=9 only
    // #1450: sometimes IE returns 1223 when it should be 204
    1223: 204
  },
      xhrSupported = jQuery.ajaxSettings.xhr();
  support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
  support.ajax = xhrSupported = !!xhrSupported;
  jQuery.ajaxTransport(function (options) {
    var _callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest


    if (support.cors || xhrSupported && !options.crossDomain) {
      return {
        send: function send(headers, complete) {
          var i,
              xhr = options.xhr();
          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided

          if (options.xhrFields) {
            for (i in options.xhrFields) {
              xhr[i] = options.xhrFields[i];
            }
          } // Override mime type if needed


          if (options.mimeType && xhr.overrideMimeType) {
            xhr.overrideMimeType(options.mimeType);
          } // X-Requested-With header
          // For cross-domain requests, seeing as conditions for a preflight are
          // akin to a jigsaw puzzle, we simply never set it to be sure.
          // (it can always be set on a per-request basis or even using ajaxSetup)
          // For same-domain requests, won't change header if already provided.


          if (!options.crossDomain && !headers["X-Requested-With"]) {
            headers["X-Requested-With"] = "XMLHttpRequest";
          } // Set headers


          for (i in headers) {
            xhr.setRequestHeader(i, headers[i]);
          } // Callback


          _callback = function callback(type) {
            return function () {
              if (_callback) {
                _callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;

                if (type === "abort") {
                  xhr.abort();
                } else if (type === "error") {
                  // Support: IE <=9 only
                  // On a manual native abort, IE9 throws
                  // errors on any property access that is not readyState
                  if (typeof xhr.status !== "number") {
                    complete(0, "error");
                  } else {
                    complete( // File: protocol always yields status 0; see #8605, #14207
                    xhr.status, xhr.statusText);
                  }
                } else {
                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only
                  // IE9 has no XHR2 but throws on binary (trac-11426)
                  // For XHR2 non-text, let the caller handle it (gh-2498)
                  (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {
                    binary: xhr.response
                  } : {
                    text: xhr.responseText
                  }, xhr.getAllResponseHeaders());
                }
              }
            };
          }; // Listen to events


          xhr.onload = _callback();
          errorCallback = xhr.onerror = xhr.ontimeout = _callback("error"); // Support: IE 9 only
          // Use onreadystatechange to replace onabort
          // to handle uncaught aborts

          if (xhr.onabort !== undefined) {
            xhr.onabort = errorCallback;
          } else {
            xhr.onreadystatechange = function () {
              // Check readyState before timeout as it changes
              if (xhr.readyState === 4) {
                // Allow onerror to be called first,
                // but that will not handle a native abort
                // Also, save errorCallback to a variable
                // as xhr.onerror cannot be accessed
                window.setTimeout(function () {
                  if (_callback) {
                    errorCallback();
                  }
                });
              }
            };
          } // Create the abort callback


          _callback = _callback("abort");

          try {
            // Do send the request (this may raise an exception)
            xhr.send(options.hasContent && options.data || null);
          } catch (e) {
            // #14683: Only rethrow if this hasn't been notified as an error yet
            if (_callback) {
              throw e;
            }
          }
        },
        abort: function abort() {
          if (_callback) {
            _callback();
          }
        }
      };
    }
  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)

  jQuery.ajaxPrefilter(function (s) {
    if (s.crossDomain) {
      s.contents.script = false;
    }
  }); // Install script dataType

  jQuery.ajaxSetup({
    accepts: {
      script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"
    },
    contents: {
      script: /\b(?:java|ecma)script\b/
    },
    converters: {
      "text script": function textScript(text) {
        jQuery.globalEval(text);
        return text;
      }
    }
  }); // Handle cache's special case and crossDomain

  jQuery.ajaxPrefilter("script", function (s) {
    if (s.cache === undefined) {
      s.cache = false;
    }

    if (s.crossDomain) {
      s.type = "GET";
    }
  }); // Bind script tag hack transport

  jQuery.ajaxTransport("script", function (s) {
    // This transport only deals with cross domain or forced-by-attrs requests
    if (s.crossDomain || s.scriptAttrs) {
      var script, _callback2;

      return {
        send: function send(_, complete) {
          script = jQuery("<script>").attr(s.scriptAttrs || {}).prop({
            charset: s.scriptCharset,
            src: s.url
          }).on("load error", _callback2 = function callback(evt) {
            script.remove();
            _callback2 = null;

            if (evt) {
              complete(evt.type === "error" ? 404 : 200, evt.type);
            }
          }); // Use native DOM manipulation to avoid our domManip AJAX trickery

          document.head.appendChild(script[0]);
        },
        abort: function abort() {
          if (_callback2) {
            _callback2();
          }
        }
      };
    }
  });
  var oldCallbacks = [],
      rjsonp = /(=)\?(?=&|$)|\?\?/; // Default jsonp settings

  jQuery.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function jsonpCallback() {
      var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;
      this[callback] = true;
      return callback;
    }
  }); // Detect, normalize options and install callbacks for jsonp requests

  jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {
    var callbackName,
        overwritten,
        responseContainer,
        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data"); // Handle iff the expected data type is "jsonp" or we have a parameter to set

    if (jsonProp || s.dataTypes[0] === "jsonp") {
      // Get callback name, remembering preexisting value associated with it
      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data

      if (jsonProp) {
        s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
      } else if (s.jsonp !== false) {
        s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
      } // Use data converter to retrieve json after script execution


      s.converters["script json"] = function () {
        if (!responseContainer) {
          jQuery.error(callbackName + " was not called");
        }

        return responseContainer[0];
      }; // Force json dataType


      s.dataTypes[0] = "json"; // Install callback

      overwritten = window[callbackName];

      window[callbackName] = function () {
        responseContainer = arguments;
      }; // Clean-up function (fires after converters)


      jqXHR.always(function () {
        // If previous value didn't exist - remove it
        if (overwritten === undefined) {
          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value
        } else {
          window[callbackName] = overwritten;
        } // Save back as free


        if (s[callbackName]) {
          // Make sure that re-using the options doesn't screw things around
          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use

          oldCallbacks.push(callbackName);
        } // Call if it was a function and we have a response


        if (responseContainer && isFunction(overwritten)) {
          overwritten(responseContainer[0]);
        }

        responseContainer = overwritten = undefined;
      }); // Delegate to script

      return "script";
    }
  }); // Support: Safari 8 only
  // In Safari 8 documents created via document.implementation.createHTMLDocument
  // collapse sibling forms: the second one becomes a child of the first one.
  // Because of that, this security measure has to be disabled in Safari 8.
  // https://bugs.webkit.org/show_bug.cgi?id=137337

  support.createHTMLDocument = function () {
    var body = document.implementation.createHTMLDocument("").body;
    body.innerHTML = "<form></form><form></form>";
    return body.childNodes.length === 2;
  }(); // Argument "data" should be string of html
  // context (optional): If specified, the fragment will be created in this context,
  // defaults to document
  // keepScripts (optional): If true, will include scripts passed in the html string


  jQuery.parseHTML = function (data, context, keepScripts) {
    if (typeof data !== "string") {
      return [];
    }

    if (typeof context === "boolean") {
      keepScripts = context;
      context = false;
    }

    var base, parsed, scripts;

    if (!context) {
      // Stop scripts or inline event handlers from being executed immediately
      // by using document.implementation
      if (support.createHTMLDocument) {
        context = document.implementation.createHTMLDocument(""); // Set the base href for the created document
        // so any parsed elements with URLs
        // are based on the document's URL (gh-2965)

        base = context.createElement("base");
        base.href = document.location.href;
        context.head.appendChild(base);
      } else {
        context = document;
      }
    }

    parsed = rsingleTag.exec(data);
    scripts = !keepScripts && []; // Single tag

    if (parsed) {
      return [context.createElement(parsed[1])];
    }

    parsed = buildFragment([data], context, scripts);

    if (scripts && scripts.length) {
      jQuery(scripts).remove();
    }

    return jQuery.merge([], parsed.childNodes);
  };
  /**
   * Load a url into a page
   */


  jQuery.fn.load = function (url, params, callback) {
    var selector,
        type,
        response,
        self = this,
        off = url.indexOf(" ");

    if (off > -1) {
      selector = stripAndCollapse(url.slice(off));
      url = url.slice(0, off);
    } // If it's a function


    if (isFunction(params)) {
      // We assume that it's the callback
      callback = params;
      params = undefined; // Otherwise, build a param string
    } else if (params && _typeof(params) === "object") {
      type = "POST";
    } // If we have elements to modify, make the request


    if (self.length > 0) {
      jQuery.ajax({
        url: url,
        // If "type" variable is undefined, then "GET" method will be used.
        // Make value of this field explicit since
        // user can override it through ajaxSetup method
        type: type || "GET",
        dataType: "html",
        data: params
      }).done(function (responseText) {
        // Save response for use in complete callback
        response = arguments;
        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div
        // Exclude scripts to avoid IE 'Permission Denied' errors
        jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result
        responseText); // If the request succeeds, this function gets "data", "status", "jqXHR"
        // but they are ignored because response was set above.
        // If it fails, this function gets "jqXHR", "status", "error"
      }).always(callback && function (jqXHR, status) {
        self.each(function () {
          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
        });
      });
    }

    return this;
  };

  jQuery.expr.pseudos.animated = function (elem) {
    return jQuery.grep(jQuery.timers, function (fn) {
      return elem === fn.elem;
    }).length;
  };

  jQuery.offset = {
    setOffset: function setOffset(elem, options, i) {
      var curPosition,
          curLeft,
          curCSSTop,
          curTop,
          curOffset,
          curCSSLeft,
          calculatePosition,
          position = jQuery.css(elem, "position"),
          curElem = jQuery(elem),
          props = {}; // Set position first, in-case top/left are set even on static elem

      if (position === "static") {
        elem.style.position = "relative";
      }

      curOffset = curElem.offset();
      curCSSTop = jQuery.css(elem, "top");
      curCSSLeft = jQuery.css(elem, "left");
      calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1; // Need to be able to calculate position if either
      // top or left is auto and position is either absolute or fixed

      if (calculatePosition) {
        curPosition = curElem.position();
        curTop = curPosition.top;
        curLeft = curPosition.left;
      } else {
        curTop = parseFloat(curCSSTop) || 0;
        curLeft = parseFloat(curCSSLeft) || 0;
      }

      if (isFunction(options)) {
        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
        options = options.call(elem, i, jQuery.extend({}, curOffset));
      }

      if (options.top != null) {
        props.top = options.top - curOffset.top + curTop;
      }

      if (options.left != null) {
        props.left = options.left - curOffset.left + curLeft;
      }

      if ("using" in options) {
        options.using.call(elem, props);
      } else {
        if (typeof props.top === "number") {
          props.top += "px";
        }

        if (typeof props.left === "number") {
          props.left += "px";
        }

        curElem.css(props);
      }
    }
  };
  jQuery.fn.extend({
    // offset() relates an element's border box to the document origin
    offset: function offset(options) {
      // Preserve chaining for setter
      if (arguments.length) {
        return options === undefined ? this : this.each(function (i) {
          jQuery.offset.setOffset(this, options, i);
        });
      }

      var rect,
          win,
          elem = this[0];

      if (!elem) {
        return;
      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
      // Support: IE <=11 only
      // Running getBoundingClientRect on a
      // disconnected node in IE throws an error


      if (!elem.getClientRects().length) {
        return {
          top: 0,
          left: 0
        };
      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR


      rect = elem.getBoundingClientRect();
      win = elem.ownerDocument.defaultView;
      return {
        top: rect.top + win.pageYOffset,
        left: rect.left + win.pageXOffset
      };
    },
    // position() relates an element's margin box to its offset parent's padding box
    // This corresponds to the behavior of CSS absolute positioning
    position: function position() {
      if (!this[0]) {
        return;
      }

      var offsetParent,
          offset,
          doc,
          elem = this[0],
          parentOffset = {
        top: 0,
        left: 0
      }; // position:fixed elements are offset from the viewport, which itself always has zero offset

      if (jQuery.css(elem, "position") === "fixed") {
        // Assume position:fixed implies availability of getBoundingClientRect
        offset = elem.getBoundingClientRect();
      } else {
        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element
        // when a statically positioned element is identified

        doc = elem.ownerDocument;
        offsetParent = elem.offsetParent || doc.documentElement;

        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, "position") === "static") {
          offsetParent = offsetParent.parentNode;
        }

        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
          // Incorporate borders into its offset, since they are outside its content origin
          parentOffset = jQuery(offsetParent).offset();
          parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);
          parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);
        }
      } // Subtract parent offsets and element margins


      return {
        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
      };
    },
    // This method will return documentElement in the following cases:
    // 1) For the element inside the iframe without offsetParent, this method will return
    //    documentElement of the parent window
    // 2) For the hidden or detached element
    // 3) For body or html element, i.e. in case of the html node - it will return itself
    //
    // but those exceptions were never presented as a real life use-cases
    // and might be considered as more preferable results.
    //
    // This logic, however, is not guaranteed and can change at any point in the future
    offsetParent: function offsetParent() {
      return this.map(function () {
        var offsetParent = this.offsetParent;

        while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
          offsetParent = offsetParent.offsetParent;
        }

        return offsetParent || documentElement;
      });
    }
  }); // Create scrollLeft and scrollTop methods

  jQuery.each({
    scrollLeft: "pageXOffset",
    scrollTop: "pageYOffset"
  }, function (method, prop) {
    var top = "pageYOffset" === prop;

    jQuery.fn[method] = function (val) {
      return access(this, function (elem, method, val) {
        // Coalesce documents and windows
        var win;

        if (isWindow(elem)) {
          win = elem;
        } else if (elem.nodeType === 9) {
          win = elem.defaultView;
        }

        if (val === undefined) {
          return win ? win[prop] : elem[method];
        }

        if (win) {
          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
        } else {
          elem[method] = val;
        }
      }, method, val, arguments.length);
    };
  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49
  // Add the top/left cssHooks using jQuery.fn.position
  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
  // getComputedStyle returns percent when specified for top/left/bottom/right;
  // rather than make the css module depend on the offset module, just check for it here

  jQuery.each(["top", "left"], function (_i, prop) {
    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
      if (computed) {
        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset

        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
      }
    });
  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods

  jQuery.each({
    Height: "height",
    Width: "width"
  }, function (name, type) {
    jQuery.each({
      padding: "inner" + name,
      content: type,
      "": "outer" + name
    }, function (defaultExtra, funcName) {
      // Margin is only for outerHeight, outerWidth
      jQuery.fn[funcName] = function (margin, value) {
        var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
            extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
        return access(this, function (elem, type, value) {
          var doc;

          if (isWindow(elem)) {
            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
            return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
          } // Get document width or height


          if (elem.nodeType === 9) {
            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
            // whichever is greatest

            return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
          }

          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat
          jQuery.css(elem, type, extra) : // Set width or height on the element
          jQuery.style(elem, type, value, extra);
        }, type, chainable ? margin : undefined, chainable);
      };
    });
  });
  jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (_i, type) {
    jQuery.fn[type] = function (fn) {
      return this.on(type, fn);
    };
  });
  jQuery.fn.extend({
    bind: function bind(types, data, fn) {
      return this.on(types, null, data, fn);
    },
    unbind: function unbind(types, fn) {
      return this.off(types, null, fn);
    },
    delegate: function delegate(selector, types, data, fn) {
      return this.on(types, selector, data, fn);
    },
    undelegate: function undelegate(selector, types, fn) {
      // ( namespace ) or ( selector, types [, fn] )
      return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
    },
    hover: function hover(fnOver, fnOut) {
      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    }
  });
  jQuery.each(("blur focus focusin focusout resize scroll click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup contextmenu").split(" "), function (_i, name) {
    // Handle event binding
    jQuery.fn[name] = function (data, fn) {
      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
    };
  }); // Support: Android <=4.0 only
  // Make sure we trim BOM and NBSP

  var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g; // Bind a function to a context, optionally partially applying any
  // arguments.
  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)
  // However, it is not slated for removal any time soon

  jQuery.proxy = function (fn, context) {
    var tmp, args, proxy;

    if (typeof context === "string") {
      tmp = fn[context];
      context = fn;
      fn = tmp;
    } // Quick check to determine if target is callable, in the spec
    // this throws a TypeError, but we will just return undefined.


    if (!isFunction(fn)) {
      return undefined;
    } // Simulated bind


    args = _slice.call(arguments, 2);

    proxy = function proxy() {
      return fn.apply(context || this, args.concat(_slice.call(arguments)));
    }; // Set the guid of unique handler to the same of original handler, so it can be removed


    proxy.guid = fn.guid = fn.guid || jQuery.guid++;
    return proxy;
  };

  jQuery.holdReady = function (hold) {
    if (hold) {
      jQuery.readyWait++;
    } else {
      jQuery.ready(true);
    }
  };

  jQuery.isArray = Array.isArray;
  jQuery.parseJSON = JSON.parse;
  jQuery.nodeName = nodeName;
  jQuery.isFunction = isFunction;
  jQuery.isWindow = isWindow;
  jQuery.camelCase = camelCase;
  jQuery.type = toType;
  jQuery.now = Date.now;

  jQuery.isNumeric = function (obj) {
    // As of jQuery 3.0, isNumeric is limited to
    // strings and numbers (primitives or objects)
    // that can be coerced to finite numbers (gh-2662)
    var type = jQuery.type(obj);
    return (type === "number" || type === "string") && // parseFloat NaNs numeric-cast false positives ("")
    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
    // subtraction forces infinities to NaN
    !isNaN(obj - parseFloat(obj));
  };

  jQuery.trim = function (text) {
    return text == null ? "" : (text + "").replace(rtrim, "");
  }; // Register as a named AMD module, since jQuery can be concatenated with other
  // files that may use define, but not via a proper concatenation script that
  // understands anonymous AMD modules. A named AMD is safest and most robust
  // way to register. Lowercase jquery is used because AMD module names are
  // derived from file names, and jQuery is normally delivered in a lowercase
  // file name. Do this after creating the global so that if an AMD module wants
  // to call noConflict to hide this version of jQuery, it will work.
  // Note that for maximum portability, libraries that are not jQuery should
  // declare themselves as anonymous modules, and avoid setting a global if an
  // AMD loader is present. jQuery is a special case. For more information, see
  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon


  if (typeof define === "function" && define.amd) {
    define("jquery", [], function () {
      return jQuery;
    });
  }

  var // Map over jQuery in case of overwrite
  _jQuery = window.jQuery,
      // Map over the $ in case of overwrite
  _$ = window.$;

  jQuery.noConflict = function (deep) {
    if (window.$ === jQuery) {
      window.$ = _$;
    }

    if (deep && window.jQuery === jQuery) {
      window.jQuery = _jQuery;
    }

    return jQuery;
  }; // Expose jQuery and $ identifiers, even in AMD
  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
  // and CommonJS for browser emulators (#13566)


  if (typeof noGlobal === "undefined") {
    window.jQuery = window.$ = jQuery;
  }

  return jQuery;
});